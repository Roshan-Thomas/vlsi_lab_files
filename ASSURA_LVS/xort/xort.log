
            Assura (R) Physical Verification Version av4.1:Production:dfII6.1.8-64b:IC6.1.8-64b.500.25
            Release 4.1_USR6_EHF13

Copyright (c) Cadence Design Systems. All rights reserved.
@(#)$CDS: assura_64 version av4.1:Production:dfII6.1.8-64b:IC6.1.8-64b.500.25 09/19/2022 00:35 (sjfhw885) $
sub-version 4.1_USR6_EHF13, integ signature 2022-09-19-0008

run on it075724.wks.bris.ac.uk from /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618/tools.lnx86/assura/bin/64bit/assura on Mon Apr 22 19:00:08 2024

Loading all available p-cell functions
AMS_DB set to cds

Starting /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/aveng /home/oj23092/VLSI_Design_Lab/ASSURA_LVS/xort/xort.rsf -exec1 -LVS -cdslib /home/oj23092/VLSI_Design_Lab/cds.lib
@(#)$CDS: aveng_64 version av4.1:Production:dfII6.1.8-64b:IC6.1.8-64b.500.25 09/19/2022 00:36 (sjfhw885) $
sub-version 4.1_USR6_EHF13, integ signature 2022-09-19-0008

run on it075724.wks.bris.ac.uk from /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618/tools.lnx86/assura/bin/64bit/aveng on Mon Apr 22 19:00:08 2024

Loading all available p-cell functions
AMS_DB set to cds

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets
 Summary Report: xort.sum
 RSF           : /home/oj23092/VLSI_Design_Lab/ASSURA_LVS/xort/xort.rsf
 Library Name  : lab2024
 CDSLIB Path   : "/home/oj23092/VLSI_Design_Lab/cds.lib"
 Cell Name     : xort
 View Name     : layout
 Rules File    : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/extract.rul
 Options       : -exec1 -LVS -cdslib /home/oj23092/VLSI_Design_Lab/cds.lib 
 Work Directory: /home/oj23092/VLSI_Design_Lab/ASSURA_LVS/xort
 Operating Mode: Legacy Mode is Off

2024/04/22 19:00:08 WARNING This OS does not appear to be a Cadence supported Linux configuration.
2024/04/22 19:00:08 For more info, please run CheckSysConf in <cdsRoot/tools.lnx86/bin/checkSysConf <productId>

Starting dfIIToVdb...
Virtuoso Framework License (111) was checked out successfully. Total checkout time was 0.06s.
@(#)$CDS: dfIIToVdb_64 version av4.1:Production:dfII6.1.8-64b:IC6.1.8-64b.500.25 09/19/2022 00:40 (sjfhw885) $
sub-version 4.1_USR6_EHF13, integ signature 2022-09-19-0008

run on it075724.wks.bris.ac.uk from /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618/tools.lnx86/assura/bin/64bit/dfIIToVdb on Mon Apr 22 19:00:09 2024

Loading all available p-cell functions
AMS_DB set to cds

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets
*WARNING* LIB A_CELLS from File /home/oj23092/VLSI_Design_Lab/cds.lib Line 51 redefines
LIB A_CELLS from the same file (defined earlier.)
*WARNING* LIB PRIMLIBRF from File /home/oj23092/VLSI_Design_Lab/cds.lib Line 52 redefines
LIB PRIMLIBRF from the same file (defined earlier.)
*WARNING* The directory: '/home/oj23092/VLSI_Design_Lab/lab202x' does not exist
	but was defined in libFile '/home/oj23092/VLSI_Design_Lab/cds.lib' for Lib 'lab202x'.
*WARNING* LIB A_CELLS from File /home/oj23092/VLSI_Design_Lab/cds.lib Line 51 redefines
LIB A_CELLS from the same file (defined earlier.)
*WARNING* LIB PRIMLIBRF from File /home/oj23092/VLSI_Design_Lab/cds.lib Line 52 redefines
LIB PRIMLIBRF from the same file (defined earlier.)
*WARNING* The directory: '/home/oj23092/VLSI_Design_Lab/lab202x' does not exist
	but was defined in libFile '/home/oj23092/VLSI_Design_Lab/cds.lib' for Lib 'lab202x'.
Compiling rules...

WARNING First input layer of 'ad = measureParameter(area (nmos30_ntub) 1e-12)' should be a device terminal or recognition layer due to the correspondent 'attachParameter(ad ("ad" "D") NMOS30M_device)' being a terminal specific case.
If left unchanged, parameters may not be attached correctly.
  1427. attachParameter(ad ("ad" "D") NMOS30M_device)
WARNING First input layer of 'pd = measureParameter(length (nmos30_ntub over net_psub) 1e-06)' should be a device terminal or recognition layer due to the correspondent 'attachParameter(pd ("pd" "D") NMOS30M_device)' being a terminal specific case.
If left unchanged, parameters may not be attached correctly.
  1435. attachParameter(pd ("pd" "D") NMOS30M_device)
WARNING First input layer of 'ad = measureParameter(area (nmos30_ntub) 1e-12)' should be a device terminal or recognition layer due to the correspondent 'attachParameter(ad ("ad" "D") NMOS18T_device)' being a terminal specific case.
If left unchanged, parameters may not be attached correctly.
  1465. attachParameter(ad ("ad" "D") NMOS18T_device)
WARNING First input layer of 'pd = measureParameter(length (nmos30_ntub over net_psub) 1e-06)' should be a device terminal or recognition layer due to the correspondent 'attachParameter(pd ("pd" "D") NMOS18T_device)' being a terminal specific case.
If left unchanged, parameters may not be attached correctly.
  1473. attachParameter(pd ("pd" "D") NMOS18T_device)
WARNING LVS Run detected.
Non-legacy mode has been disabled for this LVS run
2024/04/22 19:00:10 WARNING This OS does not appear to be a Cadence supported Linux configuration.
2024/04/22 19:00:10 For more info, please run CheckSysConf in <cdsRoot/tools.lnx86/bin/checkSysConf <productId>
Checking out license for Assura_LVS
*WARNING* Failed to obtain license for Assura_LVS
No Assura license available.
Checking out license for Phys_Ver_Sys_LVS_XL

Reading the design data...



Finished dfIIToVdb.

Building the VDB part 2 in background mode.
2024/04/22 19:00:10 WARNING This OS does not appear to be a Cadence supported Linux configuration.
2024/04/22 19:00:10 For more info, please run CheckSysConf in <cdsRoot/tools.lnx86/bin/checkSysConf <productId>

Building tables for LVS Preprocessing in background mode.


Starting /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618/tools.lnx86/assura/bin/vdbToCells /home/oj23092/VLSI_Design_Lab/ASSURA_LVS/xort xort

Finished /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618/tools.lnx86/assura/bin/vdbToCells

Starting Nvn PreExtraction...

Starting /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618/tools.lnx86/assura/bin/nvn /home/oj23092/VLSI_Design_Lab/ASSURA_LVS/xort/xort.rsf -preExtract -exec1 -cdslib /home/oj23092/VLSI_Design_Lab/cds.lib
Checking out license for Assura_LVS
Checking out license for Phys_Ver_Sys_LVS_XL
@(#)$CDS: nvn_64 version av4.1:Production:dfII6.1.8-64b:IC6.1.8-64b.500.25 09/19/2022 00:41 (sjfhw885) $
sub-version 4.1_USR6_EHF13, integ signature 2022-09-19-0008
run on it075724.wks.bris.ac.uk at Mon Apr 22 19:00:11 2024
Loading all available p-cell functions
AMS_DB set to cds
Reading schematic network
 running dfIIToVldb -cdslib /home/oj23092/VLSI_Design_Lab/cds.lib /home/oj23092/VLSI_Design_Lab/ASSURA_LVS/xort/xort.vlr /home/oj23092/VLSI_Design_Lab/ASSURA_LVS/xort/xort.rsf
Virtuoso Framework License (111) was checked out successfully. Total checkout time was 0.07s.
@(#)$CDS: dfIIToVldb_64 version av4.1:Production:dfII6.1.8-64b:IC6.1.8-64b.500.25 09/19/2022 00:40 (sjfhw885) $
sub-version 4.1_USR6_EHF13, integ signature 2022-09-19-0008

run on it075724.wks.bris.ac.uk from /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618/tools.lnx86/assura/bin/64bit/dfIIToVldb on Mon Apr 22 19:00:11 2024

Loading all available p-cell functions
AMS_DB set to cds

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets
function modelName redefined
function namePrefix redefined
function termMapping redefined
function termOrder redefined
function instParams redefined
Top Cell Library: "lab2024"
Top Cell Name: "xort"
Top Cell View: "schematic"
Output Data Base Name: "/home/oj23092/VLSI_Design_Lab/ASSURA_LVS/xort/xort.sdb"
Simulator Name: "auCdl"
Failed to obtain license for "Assura_LVS". 
Checking out license for Phys_Ver_Sys_LVS_XL
ERROR (LMF-02005): License call failed for feature Assura_LVS, version 4.100 and quantity 1. The license server search path is defined as 5280@ls-dc2-fen-p1.services.bris.ac.uk:5280@ls-dc2-fen-p0.services.bris.ac.uk. The FLEXnet error message is as follows,
    FLEXnet ERROR(-5, 0, 0): No such feature exists.

Run 'lic_error LMF-02005' for more information.
*WARNING* LIB A_CELLS from File /home/oj23092/VLSI_Design_Lab/cds.lib Line 51 redefines
LIB A_CELLS from the same file (defined earlier.)
*WARNING* LIB PRIMLIBRF from File /home/oj23092/VLSI_Design_Lab/cds.lib Line 52 redefines
LIB PRIMLIBRF from the same file (defined earlier.)
View List: "auCdl schematic cmos_sch symbol"
Stop List: "auCdl"
*WARNING* The directory: '/home/oj23092/VLSI_Design_Lab/lab202x' does not exist
	but was defined in libFile '/home/oj23092/VLSI_Design_Lab/cds.lib' for Lib 'lab202x'.
*WARNING* LIB A_CELLS from File /home/oj23092/VLSI_Design_Lab/cds.lib Line 51 redefines
LIB A_CELLS from the same file (defined earlier.)
*WARNING* LIB PRIMLIBRF from File /home/oj23092/VLSI_Design_Lab/cds.lib Line 52 redefines
LIB PRIMLIBRF from the same file (defined earlier.)
*WARNING* The directory: '/home/oj23092/VLSI_Design_Lab/lab202x' does not exist
	but was defined in libFile '/home/oj23092/VLSI_Design_Lab/cds.lib' for Lib 'lab202x'.
Net Listing Mode is Analog
Global net gnd! found
Global net vdd! found
writing /home/oj23092/VLSI_Design_Lab/ASSURA_LVS/xort/xort.sdb
 inputting /home/oj23092/VLSI_Design_Lab/ASSURA_LVS/xort/xort.sdb
Reading layout network
 inputting network ASSURA_LVS/xort/xort.ldb
Preprocessing schematic network phase 1
*WARNING* genericDevice("PNPLAT3") - cell does not exist. This command will be ignored.
*WARNING* genericDevice("LAT2") - cell does not exist. This command will be ignored.
*WARNING* genericDevice("CVART") - cell does not exist. This command will be ignored.
*WARNING* genericDevice("CVARM") - cell does not exist. This command will be ignored.
*WARNING* genericDevice("CVAR") - cell does not exist. This command will be ignored.
*WARNING* deleteCellPin - Unable to find cell 'PMOSD30M'
Preprocessing layout network phase 1
*WARNING* deleteCellPin - Unable to find cell 'RPOLYZ'
*WARNING* deleteCellPin - Unable to find cell 'RPOLYM'
*WARNING* deleteCellPin - Unable to find cell 'RPOLY2P'
*WARNING* deleteCellPin - Unable to find cell 'PNPVERT15'
*WARNING* deleteCellPin - Unable to find cell 'PMOSD30M'
Preprocessing schematic network phase 2
Preprocessing layout network phase 2
cpu=0.00m  wall=0.00m  mem=89.11mb

Finished /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618/tools.lnx86/assura/bin/nvn

Executing: substrate_all = cellBoundary(root)

Building the VDB part 3 in background mode.
2024/04/22 19:00:12 WARNING This OS does not appear to be a Cadence supported Linux configuration.
2024/04/22 19:00:12 For more info, please run CheckSysConf in <cdsRoot/tools.lnx86/bin/checkSysConf <productId>

Finished building the VDB. VDB build times for main process:
cpu: 0.08  elap: 4  pf: 0  in: 32  out: 104  virt: 101M  phys: 629M

Running the Task Processor, 1 cells, 4978 steps...

Top Cell is 'xort layout lab2024'

Executing: OPTDEF = geomEmpty()

Executing: PPLUS_DPL = geomEmpty()

Executing: POLY1_pinshape = geomOr(POLY1_sympin geomTextShape(POLY1_pintext))

Executing: MET1_pinshape = geomOr(MET1_sympin geomTextShape(MET1_pintext))

Executing: MET2_pinshape = geomOr(MET2_sympin geomTextShape(MET2_pintext))

Executing: MET3_pinshape = geomOr(MET3_sympin geomTextShape(MET3_pintext))

Executing: MET4_pinshape = geomOr(MET4_sympin geomTextShape(MET4_pintext))

Executing: PAD_pinshape = geomTextShape(PAD_pintext)

Executing: OPTDEF_pinshape = geomEmpty()

Executing: subdef_ring = geomAndNot(SUBDEF geomSize(SUBDEF -0.05))

Executing: ntub_subdefcut = geomAndNot(NTUB subdef_ring)

Executing: net_psub = geomOr(geomAndNot(substrate_all subdef_ring) geomAnd(subdef_ring N...

Executing: diff_cut = geomAndNot(DIFF DIFCUT)

Executing: poly1_cut = geomAndNot(POLY1 PO1CUT)

Executing: poly2_cut = geomAndNot(POLY2 PO2CUT)

Executing: poly1_n_poly2 = geomAndNot(poly1_cut poly2_cut)

Executing: net_poly1con = geomAnd(CONT poly1_n_poly2)

Executing: net_poly2con = geomAnd(CONT poly2_cut)

Executing: diffcon = geomAnd(CONT diff_cut)

Executing: net_via2_metcap = geomAnd(VIA2 METCAP)

Executing: via2_met2 = geomAndNot(VIA2 net_via2_metcap)

Executing: via_cont_pin = geomOr(VIA1 CONT MET1_pinshape)

Executing: ndiff_1 = geomAnd(diff_cut NPLUS)

Executing: pdiff_1 = geomAnd(diff_cut PPLUS)

Executing: pfuse = geomAnd(poly1_cut DEVDEF_pfuse)

Executing: PFUSE_device = geomCat(pfuse)

Executing: poly1_poly2 = geomAnd(POLY1 POLY2)

Executing: pres1_1 = geomAndNot(geomAnd(poly1_cut RESDEF) HRES)

Executing: pres1_2 = geomAndNot(pres1_1 poly1_poly2)

Executing: pres1_3 = geomAndNot(pres1_2 RESTRM)

Executing: pres1 = geomAvoiding(pres1_3 pfuse)

Executing: resdef_2p = geomGetTexted(RESDEF RESDEF_text "RPOLY2P")

Executing: presp_1 = geomAndNot(geomAnd(poly2_cut resdef_2p) HRES)

Executing: presp_2 = geomAndNot(presp_1 poly1_poly2)

Executing: presp = geomAndNot(presp_2 RESTRM)

Executing: resdef_2ph = geomGetTexted(RESDEF RESDEF_text "RPOLY2PH")

Executing: presph_1 = geomAndNot(geomAnd(poly2_cut resdef_2ph) HRES)

Executing: presph_2 = geomAndNot(presph_1 poly1_poly2)

Executing: presph = geomAndNot(presph_2 RESTRM)

Executing: resdef = geomAndNot(geomAndNot(RESDEF resdef_2p) resdef_2ph)

Executing: pres_1 = geomAndNot(geomAnd(poly2_cut resdef) HRES)

Executing: pres_2 = geomAndNot(pres_1 poly1_poly2)

Executing: pres = geomAndNot(pres_2 RESTRM)

Executing: RPOLY2RF_device = geomEnclose(RFDEF geomInside(pres ntub_subdefcut))

Executing: zero_tc = geomGetTexted(HRES HRES_text "RPOLYZ")

Executing: presz_1 = geomAnd(poly2_cut zero_tc)

Executing: presz = geomAnd(geomAndNot(presz_1 PPLUS) RESDEF)

Executing: hres = geomAndNot(HRES zero_tc)

Executing: presh_1 = geomAnd(poly2_cut hres)

Executing: presh = geomAnd(geomAndNot(presh_1 PPLUS) RESDEF)

Executing: preshterm = geomAnd(presh_1 PPLUS)

Executing: RPOLYHRF_device = geomEnclose(RFDEF geomInside(presh ntub_subdefcut))

Executing: pdres_1 = geomAnd(pdiff_1 RESDEF)

Executing: pdres_2 = geomAvoiding(pdres_1 pres)

Executing: RDIFFP_device = geomAndNot(pdres_2 RESTRM)

Executing: ndres_1 = geomAnd(ndiff_1 RESDEF)

Executing: ndres_2 = geomAvoiding(ndres_1 pres)

Executing: RDIFFN_device = geomAndNot(ndres_2 RESTRM)

Executing: nwres_1 = geomAnd(NTUB TUBDEF)

Executing: nwres_3 = geomAvoiding(nwres_1 RDIFFP_device)

Executing: nwres_4 = geomAvoiding(nwres_3 RDIFFN_device)

Executing: RNWELL_device = geomAndNot(nwres_4 RESTRM)

Executing: nwres_trm = geomButting(RESTRM RNWELL_device)

Executing: pdres_trm = geomButting(RESTRM RDIFFP_device)

Executing: pres_trm = geomButting(RESTRM pres)

Executing: presph_trm = geomButting(RESTRM presph)

Executing: pres1_trm = geomButting(RESTRM pres1)

Executing: presh_trm = geomButting(preshterm presh)

Executing: net_poly1 = geomAndNot(geomAndNot(poly1_cut pres1) pfuse)

Executing: poly2_1 = geomAndNot(poly2_cut pres)

Executing: poly2_2 = geomAndNot(poly2_1 presp)

Executing: poly2_3 = geomAndNot(poly2_2 presph)

Executing: poly2_4 = geomAndNot(poly2_3 presh)

Executing: net_poly2 = geomAndNot(poly2_4 presz)

Executing: nmos30m_hvdef_a = geomGetTexted(HVDEF HVDEF_text "NMOS30M_*")

Executing: nmos18t_hvdef_a = geomGetTexted(HVDEF HVDEF_text "NMOS18T_*")

Executing: nmoshv_hvdef_filter = geomCat(nmos30m_hvdef_a nmos18t_hvdef_a)

Executing: nmos30_ntub_clos = geomSize(geomSize(geomButtOrOver(NTUB nmoshv_hvdef_filter)...

Executing: net_nwell = geomOr(geomAndNot(ntub_subdefcut RNWELL_device) nmos30_ntub_clos)

Executing: ndiff_2 = geomAndNot(ndiff_1 net_poly1)

Executing: net_ndiff = geomAndNot(ndiff_2 RDIFFN_device)

Executing: pdiff_2 = geomAndNot(pdiff_1 net_poly1)

Executing: net_pdiff = geomAndNot(pdiff_2 RDIFFP_device)

Executing: trans = geomAnd(diff_cut net_poly1)

Executing: ngate = geomAndNot(trans NTUB)

Executing: pgate = geomAnd(trans NTUB)

Executing: gate = geomOr(ngate pgate)

Executing: nmos30m_ndevx = geomAnd(ngate NPLUS)

Executing: ndev = geomAndNot(geomAnd(ngate NPLUS) HVDEF)

Executing: pdev = geomAnd(pgate PPLUS)

Executing: pnpvert_0 = geomAnd(net_pdiff geomSize(NTUB 1.1))

Executing: pnpvert_1 = drc(geomHoles(pnpvert_0) (area < 1000.0))

Executing: pnpvert_2 = geomInside(NTUB pnpvert_1)

Executing: pnpvert_3 = geomAnd(net_ndiff pnpvert_2)

Executing: geomHoles(pnpvert_3)

Executing: pnpvert_5 = geomInside(net_pdiff pnpvert_4)

Executing: pnpvert_6 = geomGetLength(pnpvert_5 ((39.9 < keep) < 40.1) contiguous fig)

Executing: pnpvert10_e = drc(pnpvert_6 ((99.9 < area) < 100.1))

Executing: VERT10_device = geomSize(pnpvert10_e 2.0)

Executing: pnplat = drc(geomHoles(pdev) (area < 10.0))

Executing: pnplat2_e = geomGetLength(pnplat ((7.5 < keep) < 8.05) contiguous fig)

Executing: LAT2_device = geomButtOnly(pdev pnplat2_e)

Executing: pnplat2_c = geomAndNot(geomButtOnly(net_pdiff LAT2_device) pnplat2_e)

Executing: nwell_ill = geomButtOnly(NTUB trans)

Executing: nwell_hv_trans = geomStraddle(NTUB trans)

Executing: nwell_ovlp_good = drc(nwell_hv_trans trans ((1.6 <= ovlp) <= 1.6) opposite pa...

Executing: nwell_ovlp_bad = drc(nwell_hv_trans trans (ovlp < 2.0) opposite parallel)

Executing: ill_hvmos_nwell = geomOr(nwell_ill geomEnclose(NTUB geomAvoiding(nwell_ovlp_b...

Executing: errorLayer(geomAvoiding(geomButtOrOver(ndev ill_hvmos_nwell) nwell_ovlp_good) "DEVICE Error: Illegal nmosh device")

Executing: routp_n_trans = geomAndNot(net_poly1 trans)

Executing: waffle_poly1_1 = geomGetHoled(net_poly1)

Executing: waffle_holes = geomAnd(geomHoles(waffle_poly1_1 innermostEmpty) diff_cut)

Executing: waffle_poly1 = geomAndNot(waffle_poly1_1 geomGetHoled(geomOr(waffle_poly1_1 w...

Executing: waffle_gate = geomButtOrOver(geomAnd(geomSize(waffle_holes 3.1 edges) waffle_...

Executing: waffle_w_poly1 = geomCat(waffle_poly1_1)

Executing: waffle_w_holes_0 = geomHoles(waffle_w_poly1 innermostEmpty)

Executing: waffle_w_holes_0_diff = geomAnd(waffle_w_holes_0 DIFF)

Executing: waffle_w_holes_0_check_diffgap = geomAndNot(waffle_w_holes_0 waffle_w_holes_0...

Executing: waffle_w_holes_0 = geomAvoiding(waffle_w_holes_0_diff waffle_w_holes_0_check_...

Executing: waffle_w_holes_1 = geomGetVertex(waffle_w_holes_0 (keep == 4))

Executing: waffle_w_holes_1_edge = geomGetEdge(waffle_w_holes_1 butting waffle_poly1_1)

Executing: waffle_w_holes_1_edge_length = geomSize(geomGetLength(waffle_w_holes_1_edge (...

Executing: waffle_w_holes_good = geomButtOrOver(waffle_w_holes_1 waffle_w_holes_1_edge_l...

Executing: waffle_w_gate = geomButtOrOver(geomAnd(geomSize(waffle_w_holes_good 3.1 edges...

Executing: pmos_waffle_w = geomButtOnly(waffle_w_gate net_pdiff (keep == 2))

Executing: nmos_waffle_w = geomButtOnly(waffle_w_gate net_ndiff (keep == 2))

Executing: pmosw_device_all = geomAndNot(geomAndNot(geomAndNot(pmos_waffle_w MIDOX) LVTD...

Executing: pmosmw_device_all = geomAndNot(geomAndNot(geomAnd(pmos_waffle_w MIDOX) LVTDEF...

Executing: nmosw_device_all = geomAndNot(geomAndNot(geomAndNot(nmos_waffle_w MIDOX) LVTD...

Executing: nmosmw_device_all = geomAndNot(geomAndNot(geomAnd(nmos_waffle_w MIDOX) LVTDEF...

Executing: waffle_w_poly1_good = geomButtOrOver(waffle_w_poly1 waffle_w_holes_good)

Executing: waffle_w_ndiff_good = geomButtOrOver(net_ndiff waffle_w_poly1_good)

Executing: waffle_w_ndiff_diffc_1 = geomButtOrOver(waffle_w_ndiff_good diffcon (keep == 1))

Executing: waffle_w_ndiff_diffc_2 = geomButtOrOver(waffle_w_ndiff_good diffcon (keep == 2))

Executing: waffle_w_ndiff_diffc_4 = geomButtOrOver(waffle_w_ndiff_good diffcon (keep == 4))

Executing: waffle_w_nmosw_4n = geomButtOrOver(nmosw_device_all waffle_w_ndiff_diffc_4 (k...

Executing: waffle_w_nmosw_3n = geomAnd(geomButtOrOver(nmosw_device_all waffle_w_ndiff_di...

Executing: waffle_w_nmosw_2n = geomAnd(geomButtOrOver(nmosw_device_all waffle_w_ndiff_di...

Executing: waffle_w_nmosmw_4n = geomButtOrOver(nmosmw_device_all waffle_w_ndiff_diffc_4 ...

Executing: waffle_w_nmosmw_3n = geomAnd(geomButtOrOver(nmosmw_device_all waffle_w_ndiff_...

Executing: waffle_w_nmosmw_2n = geomAnd(geomButtOrOver(nmosmw_device_all waffle_w_ndiff_...

Executing: NMOSW_4N_device = geomCat(waffle_w_nmosw_4n)

Executing: NMOSW_3N_device = geomCat(waffle_w_nmosw_3n)

Executing: NMOSW_2N_device = geomCat(waffle_w_nmosw_2n)

Executing: NMOSMW_4N_device = geomCat(waffle_w_nmosmw_4n)

Executing: NMOSMW_3N_device = geomCat(waffle_w_nmosmw_3n)

Executing: NMOSMW_2N_device = geomCat(waffle_w_nmosmw_2n)

Executing: waffle_w_pdiff_good = geomButtOrOver(net_pdiff waffle_w_poly1_good)

Executing: waffle_w_pdiff_diffc_1 = geomButtOrOver(waffle_w_pdiff_good diffcon (keep == 1))

Executing: waffle_w_pdiff_diffc_2 = geomButtOrOver(waffle_w_pdiff_good diffcon (keep == 2))

Executing: waffle_w_pdiff_diffc_4 = geomButtOrOver(waffle_w_pdiff_good diffcon (keep == 4))

Executing: waffle_w_pmosw_4n = geomButtOrOver(pmosw_device_all waffle_w_pdiff_diffc_4 (k...

Executing: waffle_w_pmosw_3n = geomAnd(geomButtOrOver(pmosw_device_all waffle_w_pdiff_di...

Executing: waffle_w_pmosw_2n = geomAnd(geomButtOrOver(pmosw_device_all waffle_w_pdiff_di...

Executing: waffle_w_pmosmw_4n = geomButtOrOver(pmosmw_device_all waffle_w_pdiff_diffc_4 ...

Executing: waffle_w_pmosmw_3n = geomAnd(geomButtOrOver(pmosmw_device_all waffle_w_pdiff_...

Executing: waffle_w_pmosmw_2n = geomAnd(geomButtOrOver(pmosmw_device_all waffle_w_pdiff_...

Executing: PMOSW_4N_device = geomCat(waffle_w_pmosw_4n)

Executing: PMOSW_3N_device = geomCat(waffle_w_pmosw_3n)

Executing: PMOSW_2N_device = geomCat(waffle_w_pmosw_2n)

Executing: PMOSMW_4N_device = geomCat(waffle_w_pmosmw_4n)

Executing: PMOSMW_3N_device = geomCat(waffle_w_pmosmw_3n)

Executing: PMOSMW_2N_device = geomCat(waffle_w_pmosmw_2n)

Executing: pmos_waffle = geomButtOnly(geomAvoiding(waffle_gate waffle_w_gate) net_pdiff ...

Executing: nmos_waffle = geomButtOnly(geomAvoiding(waffle_gate waffle_w_gate) net_ndiff ...

Executing: pmos_1 = geomAndNot(pdev LAT2_device)

Executing: pmos_2 = geomButtOnly(pmos_1 routp_n_trans)

Executing: pmos_3 = geomButtOnly(pmos_2 net_pdiff (keep == 2))

Executing: pmos_4 = geomAndNot(pmos_3 waffle_poly1)

Executing: pmos_5 = geomAnd(pmos_2 pmos_waffle)

Executing: PMOS_device = geomAndNot(geomAndNot(geomAndNot(pmos_4 MIDOX) LVTDEF) RFDEF)

Executing: PMOSM_device = geomAndNot(geomAndNot(geomAndNot(geomAnd(pmos_4 MIDOX) PPLUS_D...

Executing: DPMOSM_device = geomAndNot(geomAndNot(geomAnd(geomAnd(pmos_4 MIDOX) PPLUS_DPL...

Executing: PMOSL_device = geomAndNot(geomAnd(geomAndNot(pmos_4 MIDOX) LVTDEF) RFDEF)

Executing: PMOSML_device = geomAndNot(geomAnd(geomAnd(pmos_4 MIDOX) LVTDEF) RFDEF)

Executing: pmosrf_trans = geomAnd(geomAndNot(geomAndNot(pmos_4 MIDOX) LVTDEF) RFDEF)

Executing: PMOSRF_device = geomEnclose(RFDEF pmosrf_trans)

Executing: PMOS_WAFFLE_device = geomAndNot(geomAndNot(geomAndNot(pmos_5 MIDOX) LVTDEF) R...

Executing: PMOSM_WAFFLE_device = geomAndNot(geomAndNot(geomAnd(pmos_5 MIDOX) LVTDEF) RFDEF)

Executing: PMOSL_WAFFLE_device = geomAndNot(geomAnd(geomAndNot(pmos_5 MIDOX) LVTDEF) RFDEF)

Executing: PMOSML_WAFFLE_device = geomAndNot(geomAnd(geomAnd(pmos_5 MIDOX) LVTDEF) RFDEF)

Executing: nmosh_1 = geomAndNot(geomOr(geomButtOnly(trans NTUB) geomStraddle(trans NTUB)...

Executing: nmosh = geomButtOrOver(nmosh_1 ndev)

Executing: nmoshall = geomAnd(nmosh_1 geomAnd(trans NPLUS))

Executing: nmosh_d = geomAnd(net_ndiff geomButtOrOver(NTUB nmoshall))

Executing: nmosh_d_fill = drc(nmosh_d nmosh (sep < 6.0) opposite parallel)

Executing: nmosh_d_term_1 = geomOr(nmosh_d nmosh_d_fill)

Executing: nmosh_d_term_2 = geomButtOnly(nmosh_d_term_1 nmosh)

Executing: nmosh_d_term = geomOverlap(net_nwell nmosh_d_term_2)

Executing: NMOSH_device = geomAvoiding(geomAvoiding(nmosh MIDOX) LVTDEF)

Executing: NMOSMH_device = geomAvoiding(geomButtOrOver(nmosh MIDOX) LVTDEF)

Executing: NMOSHL_device = geomButtOrOver(geomAvoiding(nmosh MIDOX) LVTDEF)

Executing: NMOSMHL_device = geomButtOrOver(geomButtOrOver(nmosh MIDOX) LVTDEF)

Executing: nmos_1 = geomAndNot(ndev nmosh)

Executing: nmos_2 = geomAvoiding(nmos_1 ill_hvmos_nwell)

Executing: nmos_3 = geomButtOnly(nmos_2 routp_n_trans)

Executing: nmos_4 = geomButtOnly(nmos_3 net_ndiff (keep == 2))

Executing: nmos_5 = geomAndNot(nmos_4 waffle_poly1)

Executing: nmos_6 = geomAnd(nmos_3 nmos_waffle)

Executing: NMOS_device = geomAndNot(geomAndNot(geomAndNot(nmos_5 MIDOX) LVTDEF) RFDEF)

Executing: NMOSM_device = geomAndNot(geomAndNot(geomAnd(nmos_5 MIDOX) LVTDEF) RFDEF)

Executing: NMOSL_device = geomAndNot(geomAnd(geomAndNot(nmos_5 MIDOX) LVTDEF) RFDEF)

Executing: NMOSML_device = geomAndNot(geomAnd(geomAnd(nmos_5 MIDOX) LVTDEF) RFDEF)

Executing: nmosrf_trans = geomAnd(geomAndNot(geomAndNot(nmos_5 MIDOX) LVTDEF) RFDEF)

Executing: NMOSRF_device = geomEnclose(RFDEF nmosrf_trans)

Executing: NMOS_WAFFLE_device = geomAndNot(geomAndNot(geomAndNot(nmos_6 MIDOX) LVTDEF) R...

Executing: NMOSM_WAFFLE_device = geomAndNot(geomAndNot(geomAnd(nmos_6 MIDOX) LVTDEF) RFDEF)

Executing: NMOSL_WAFFLE_device = geomAndNot(geomAnd(geomAndNot(nmos_6 MIDOX) LVTDEF) RFDEF)

Executing: NMOSML_WAFFLE_device = geomAndNot(geomAnd(geomAnd(nmos_6 MIDOX) LVTDEF) RFDEF)

Executing: cpoly = geomAnd(geomAndNot(net_poly1 HRES) poly2_cut)

Executing: CPOLYRF_device = geomEnclose(RFDEF geomAnd(cpoly ntub_subdefcut))

Executing: cvar = geomAnd(geomAnd(pgate NPLUS) RFDEF)

Executing: cvar_all_c35 = geomAvoiding(geomAnd(pgate NPLUS) geomOr(nmosh geomOr(RFDEF HV...

Executing: ndiode_1 = geomAvoiding(geomAndNot(net_ndiff NTUB) trans)

Executing: ND_device = geomAnd(ndiode_1 DIODE)

Executing: pdiode_1 = geomAvoiding(geomAnd(net_pdiff NTUB) trans)

Executing: PD_device = geomAnd(pdiode_1 DIODE)

Executing: sbd_diode_definition = geomGetTexted(DIODE DIODE_text "SBD5*")

Executing: NWD_device = geomAnd(NTUB geomAndNot(DIODE sbd_diode_definition))

Executing: zdiode_1 = geomGetEdge(net_pdiff butting net_ndiff)

Executing: zdiode_2 = geomSize(zdiode_1 0.1 unmergedOut edges)

Executing: zdiode_3 = geomAnd(net_pdiff net_ndiff)

Executing: zdiode_4 = geomOr(zdiode_2 zdiode_3)

Executing: zdiode_5 = geomButtOrOver(net_pdiff zdiode_4)

Executing: zdiode_6 = geomButtOrOver(net_ndiff zdiode_4)

Executing: zdiode_7 = geomOr(zdiode_5 zdiode_6)

Executing: zdiode_8 = geomAnd(zdiode_7 ZENER)

Executing: zdiode_9 = geomEnclose(zdiode_8 zdiode_7)

Executing: zdiode_all = geomAnd(zdiode_4 zdiode_9)

Executing: zdiode_02_1 = drc(zdiode_all ((0.2 <= width) <= 0.2) parallel opposite)

Executing: zdiode_02 = geomButtOrOver(zdiode_all zdiode_02_1)

Executing: ZD2SM24_device = geomOr(zdiode_02)

Executing: net_ndiffcon = geomAndNot(geomAnd(ndiff_1 CONT) net_poly1con)

Executing: net_pdiffcon = geomAndNot(geomAnd(pdiff_1 CONT) net_poly1con)

Executing: te_pro_pad = drc(PAD (area < 2401))

Executing: net_bondpad = geomAndNot(PAD te_pro_pad)

Executing: met1_withslots = geomAndNot(MET1 M1HOLE)

Executing: met2_withslots = geomAndNot(MET2 M2HOLE)

Executing: met3_withslots = geomAndNot(MET3 M3HOLE)

Executing: met4_withslots = geomAndNot(MET4 M4HOLE)

Executing: implant = geomOr(NPLUS PPLUS)

Executing: net_welltap = geomAnd(net_ndiff net_nwell)

Executing: net_subtap = geomAndNot(net_pdiff net_nwell)

Executing: net_nsd = geomOverlap(net_ndiff geomAndNot(net_ndiff net_welltap))

Executing: net_psd = geomAndNot(net_pdiff net_subtap)

Executing: metcap_bottom_plate = geomEnclose(MET2 METCAP)

Executing: cmim = geomAnd(METCAP metcap_bottom_plate)

Executing: CMIM_device = geomAndNot(cmim RFDEF)

Executing: CPMIM_device = geomAnd(METCAP geomAnd(MET2 geomAnd(POLY2 POLY1)))

Executing: PHDNWA850_device = geomAvoiding(geomAnd(geomAnd(NTUB net_ndiff) OPTDEF) PAD_B...

Executing: PHDNWA850_device_x = geomCat(PHDNWA850_device)
	   errorLayer(PHDNWA850_device_x "Process Modules : PHDNWA850 not available for this process module")

Executing: PHDNWB850_device = geomButtOrOver(geomAnd(geomAnd(NTUB net_ndiff) OPTDEF) PAD...

Executing: PHDNWB850_device_x = geomCat(PHDNWB850_device)
	   errorLayer(PHDNWB850_device_x "Process Modules : PHDNWB850 not available for this process module")

Executing: sbd_diode_def_ok = geomGetTexted(DIODE DIODE_text "SBD5_REV_1.0")

Executing: sbd5_err = geomAndNot(sbd_diode_definition sbd_diode_def_ok)
	   errorLayer(sbd5_err "Version od SBD5 obsolte or missing")

Executing: sbd5_ndiff_1 = geomHoles(geomAnd(ndiff_1 sbd_diode_definition) innermost)

Executing: sbdcon = geomAnd(geomAndNot(diffcon implant) sbd_diode_definition)

Executing: net_sbd_anode_diff = geomEnclose(geomAndNot(DIFF implant) sbdcon)

Executing: SBD5_device = geomCat(sbd5_ndiff_1)

Executing: SBD5_device_x = geomCat(SBD5_device)
	   errorLayer(SBD5_device_x "Process Modules : SBD5 not available for this process module")

Executing: esdpd12_hvdef_def = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDPD12_*") ge...

Executing: esdpd12_cath_ndiff_c_ntub = geomAnd(geomAnd(net_ndiff NTUB) esdpd12_hvdef_def)

Executing: esdpd12_ntub = geomEnclose(NTUB esdpd12_cath_ndiff_c_ntub)

Executing: ESDPD12_device = geomCat(esdpd12_ntub)

Executing: esdpd18_hvdef_def = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDPD18_*") ge...

Executing: esdpd18_cath_ndiff_c_ntub = geomAnd(geomAnd(net_ndiff NTUB) esdpd18_hvdef_def)

Executing: esdpd18_ntub = geomEnclose(NTUB esdpd18_cath_ndiff_c_ntub)

Executing: ESDPD18_device = geomCat(esdpd18_ntub)

Executing: esdpd26_hvdef_def = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDPD26_*") ge...

Executing: esdpd26_cath_ndiff_c_ntub = geomAnd(geomAnd(net_ndiff NTUB) esdpd26_hvdef_def)

Executing: esdpd26_ntub = geomEnclose(NTUB esdpd26_cath_ndiff_c_ntub)

Executing: ESDPD26_device = geomCat(esdpd26_ntub)

Executing: esdpd30_hvdef_def = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDPD30_*") ge...

Executing: esdpd30_cath_ndiff_c_ntub = geomAnd(geomAnd(net_ndiff NTUB) esdpd30_hvdef_def)

Executing: esdpd30_ntub = geomEnclose(NTUB esdpd30_cath_ndiff_c_ntub)

Executing: ESDPD30_device = geomCat(esdpd30_ntub)

Executing: esdfdp5_hvdef_def = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDFDP5_*") ge...

Executing: esdfdp5_anod_pdiff_d_ntub = geomAnd(geomAnd(net_pdiff NTUB) esdfdp5_hvdef_def)

Executing: ESDFDP5_device = geomCat(esdfdp5_anod_pdiff_d_ntub)

Executing: esdgcp5_hvdef_def = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDGCP5_*") ge...

Executing: esdgcp5_anod_pdiff_d_ntub = geomAnd(geomAnd(net_pdiff NTUB) esdgcp5_hvdef_def)

Executing: ESDGCP5_device = geomCat(esdgcp5_anod_pdiff_d_ntub)

Executing: esdfdn5_hvdef_def = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDFDN5_*") ge...

Executing: esdfdn5_cath_ndiff_d_sub = geomAnd(geomAndNot(net_ndiff NTUB) esdfdn5_hvdef_def)

Executing: ESDFDN5_device = geomCat(esdfdn5_cath_ndiff_d_sub)

Executing: esdgcn5_hvdef_def = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDGCN5_*") ge...

Executing: esdgcn5_cath_ndiff_d_sub = geomAnd(geomAndNot(net_ndiff NTUB) esdgcn5_hvdef_def)

Executing: ESDGCN5_device = geomCat(esdgcn5_cath_ndiff_d_sub)

Executing: ndiff_nldd = geomCat(net_ndiff)

Executing: nmos30_1 = geomEnclose(geomHoles(net_poly1 innermost) ndiff_nldd)

Executing: nmos30_2 = geomButting(net_poly1 nmos30_1)

Executing: nmos30_3 = geomStraddle(geomButtOrOver(nmos30m_ndevx nmos30_2) FIDEF)

Executing: nmos30_ndiff = geomInside(ndiff_nldd nmos30_1)

Executing: nmos30_d_fill = drc(nmos30_ndiff nmos30_3 (sep < 2.5) parallel opposite)

Executing: nmos30_4 = geomOr(geomButting(nmos30_3 nmos30_d_fill) nmos30_d_fill)

Executing: nmos30_combidiff = geomOr(nmos30_4 geomButting(ndiff_nldd nmos30_4))

Executing: nmos30_fimp = geomStraddle(FIDEF nmos30_combidiff)

Executing: nmos30_gate_l = geomAndNot(nmos30_3 nmos30_fimp)

Executing: nmos30_4g = geomAnd(nmos30_4 DIFF)

Executing: nmos30m = geomButtOrOver(nmos30_4 geomInside(nmos30_4g MIDOX))

Executing: nmos18t = geomAndNot(nmos30_4 nmos30m)

Executing: nmos30_drain = geomButtOnly(nmos30_ndiff nmos30_4)

Executing: nmos30m_double = geomOr(nmos30m geomButtOnly(nmos30_drain nmos30m))

Executing: nmos18t_double = geomOr(nmos18t geomButtOnly(nmos30_drain nmos18t))

Executing: nmos30_ntub = geomSize(geomSize(geomButtOrOver(NTUB nmos30_4) 0.9) -0.9)

Executing: NMOS30M_device = geomCat(nmos30m_double)

Executing: NMOS18T_device = geomCat(nmos18t_double)

Executing: pmosd30m_pdiff = geomCat(net_pdiff)

Executing: pmosd30m_1 = geomEnclose(geomHoles(net_poly1 innermost) geomAnd(pmosd30m_pdif...

Executing: pmosd30m_2 = geomButting(net_poly1 pmosd30m_1)

Executing: pmosd30m_3 = geomStraddle(geomButtOrOver(pmosd30m_pdevx pmosd30m_2) PFIMP)

Executing: pmosd30m_pdiff = geomInside(pmosd30m_pdiff pmosd30m_1)

Executing: pmosd30m_d_fill = drc(pmosd30m_pdiff pmosd30m_3 (sep < 2.7) parallel opposite)

Executing: pmosd30m_4 = geomOr(geomButting(pmosd30m_3 pmosd30m_d_fill) pmosd30m_d_fill)

Executing: pmosd30m_4g = geomAnd(pmosd30m_4 DIFF)

Executing: pmosd30m_xx = geomButtOrOver(pmosd30m_4 geomInside(pmosd30m_4g MIDOX))

Executing: pmosd30m_hvdef_def = geomGetTexted(HVDEF HVDEF_text "PMOSD30M_*")

Executing: pmos30m_hvdef_def = geomGetTexted(HVDEF HVDEF_text "PMOS30M_*")

Executing: pmosd30m_drain = geomButtOrOver(geomButtOnly(pmosd30m_pdiff pmosd30m_4) pmosd...

Executing: pmosd30m_double = geomButtOrOver(geomOr(pmosd30m_xx geomButtOnly(pmosd30m_dra...

Executing: PMOSD30M_device = geomCat(pmosd30m_double)

Executing: pmos30m_drain = geomButtOrOver(geomButtOnly(pmosd30m_pdiff pmosd30m_4) pmos30...

Executing: pmos30m_double = geomButtOrOver(geomOr(pmosd30m_xx geomButtOnly(pmos30m_drain...

Executing: PMOS30M_device = geomCat(pmos30m_double)

Executing: ESDPD12_modeled = geomSize(esdpd12_hvdef_def 0.7)

Executing: ESDPD18_modeled = geomSize(esdpd18_hvdef_def 0.7)

Executing: ESDPD26_modeled = geomSize(esdpd26_hvdef_def 0.7)

Executing: ESDPD30_modeled = geomSize(esdpd30_hvdef_def 0.7)

Executing: ESDFDP5_modeled = geomSize(esdfdp5_hvdef_def 0.7)

Executing: ESDGCP5_modeled = geomSize(esdgcp5_hvdef_def 0.7)

Executing: ESDFDN5_modeled = geomSize(esdfdn5_hvdef_def 0.7)

Executing: ESDGCN5_modeled = geomSize(esdgcn5_hvdef_def 0.7)

Executing: NMOS30M_modeled = geomOverlap(HVDEF NMOS30M_device)

Executing: NMOS18T_modeled = geomOverlap(HVDEF NMOS18T_device)

Executing: PMOSD30M_modeled = geomSize(geomOverlap(HVDEF PMOSD30M_device) 1.5)

Executing: PMOS30M_modeled = geomSize(geomOverlap(HVDEF PMOS30M_device) 1.5)

Executing: diodes_modeled = geomCat(ESDPD12_modeled ESDPD18_modeled ESDPD26_modeled ESDP...

Executing: p_nwd_1 = geomAndNot(net_nwell geomOr(DIODE geomButtOrOver(net_nwell geomOr(O...

Executing: p_nwd_2 = geomAndNot(p_nwd_1 geomOverlap(p_nwd_1 pnpvert10_e))

Executing: p_nwd_3 = geomAndNot(p_nwd_2 geomOverlap(p_nwd_1 pnplat2_e))

Executing: p_nwd_4 = geomAndNot(p_nwd_3 diodes_modeled)

Executing: p_nwd_5 = geomAndNot(p_nwd_4 geomOr(cvar cvar_all_c35))

Executing: P_NWD_device = geomAndNot(p_nwd_5 geomStraddle(p_nwd_2 ZD2SM24_device))

Executing: p_pd_1 = geomAndNot(pdiode_1 DIODE)

Executing: p_pd_2 = geomAndNot(geomOutside(p_pd_1 ZD2SM24_device) pnpvert10_e)

Executing: p_pd_3 = geomAndNot(p_pd_2 diodes_modeled)

Executing: P_PD_device = geomAndNot(geomAndNot(p_pd_3 pnplat2_e) pnplat2_c)

Executing: spiral_term11_1 = geomGetTexted(geomButtOrOver(RESTRM INDDEF) MET3_pintext "P1")

Executing: spiral_term22_1 = geomGetTexted(geomButtOrOver(RESTRM INDDEF) MET3_pintext "P2")

Executing: spiral_term11_2 = geomGetTexted(geomButtOrOver(RESTRM INDDEF) MET4_pintext "P1")

Executing: spiral_term22_2 = geomGetTexted(geomButtOrOver(RESTRM INDDEF) MET4_pintext "P2")

Executing: spiral_term11 = geomOr(spiral_term11_1 spiral_term11_2)

Executing: spiral_term22 = geomOr(spiral_term22_1 spiral_term22_2)

Executing: spiral_term11_met4 = geomGetTexted(geomButtOrOver(RESTRM INDDEF) MET4_pintext...

Executing: spiral_term22_met4 = geomGetTexted(geomButtOrOver(RESTRM INDDEF) MET4_pintext...

Executing: spiral_met_all_1 = geomOr(geomAnd(MET2 INDDEF) geomAnd(MET3 INDDEF))

Executing: spiral_met_all = geomOr(spiral_met_all_1 geomAnd(MET4 INDDEF))

Executing: spiral_term_xx = geomOr(geomOr(spiral_term11 spiral_term22) geomOr(spiral_ter...

Executing: spiral_term = geomButtOrOver(geomAnd(spiral_term_xx INDDEF) spiral_met_all)

Executing: spiral_inddef = geomButtOrOver(INDDEF spiral_term (keep == 2))

Executing: spiral_body = geomAnd(spiral_inddef spiral_met_all)

Executing: SP133S300T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP100S250T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP073S250T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP060S300T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP049S300T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP047S250T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP037S250T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP033S150T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP031S250T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP024S250T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP021S200T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP020S250T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP015S250T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP011S200T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_named_typet = geomCat(SP133S300T_device SP100S250T_device SP073S2...

Executing: SP014S300D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP018S300D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP020S180D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP023S200D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP025C200D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP026S200D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP028S300D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP028C200D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP030C200D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP037S180D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP038S300D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP040C200D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP040C300D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP045C200D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP047S180D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP050S155D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP051C300D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP068C300D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP090C200D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP090S155D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP112C300D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP140C200D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP200C200D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY014C165D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY015C200D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY016C180D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY017C165D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY019C180D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY028C160D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_named_typed = geomCat(SY014C165D_device SP014S300D_device SY015C2...

Executing: spiral_body_di_15 = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_di_20 = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_di_25 = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_di_30 = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_di_35 = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_di_40 = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_di_45 = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_di_50 = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_di_55 = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_di_60 = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_named_type_diff = geomCat((DI15PT_device = geomCat(spiral_body_di...

Executing: SP014S300C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP018S300C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP020S180C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP023S200C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP025C200C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP026S200C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP028S300C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP028C200C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP030C200C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP037S180C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP038S300C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP040C200C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP040C300C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP045C200C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP047S180C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP050S155C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP051C300C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP068C300C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP090C200C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP090S155C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP112C300C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP140C200C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP200C200C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY014C165C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY015C200C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY016C180C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY017C165C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY019C180C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY028C160C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_named_typec = geomCat(SY014C165C_device SP014S300C_device SY015C2...

Executing: spiral_body_named = geomCat(spiral_body_named_typet spiral_body_named_typed s...

Executing: spiral_body_unknown = geomAndNot(spiral_body spiral_body_named)

Executing: inddef_bad = geomButtOrOver(INDDEF spiral_body_unknown)
	   errorLayer(inddef_bad "ERC Warning : Name of Spiral not identified")

Executing: inddef_bad_all = geomAvoiding(INDDEF spiral_body_named)
	   errorLayer(inddef_bad_all "ERC Warning : INDDEF does not define a correct spiral or is not valid for this process")

Executing: bad_spirlay_1 = geomAnd(INDDEF DIFF)

Executing: bad_spirlay_2 = geomAnd(INDDEF implant)

Executing: bad_spirlay_3 = geomAnd(INDDEF POLY1)

Executing: bad_spirlay_4 = geomAnd(INDDEF POLY2)

Executing: bad_spirlay_5 = geomAnd(INDDEF via_cont_pin)

Executing: bad_spirlay_6_1 = geomOr(geomAnd(INDDEF MET1) geomAnd(INDDEF MET2))

Executing: bad_spirlay_6 = geomOr(bad_spirlay_6_1 geomAnd(INDDEF VIA2))

Executing: bad_spirlay_all = geomOr(bad_spirlay_1 geomOr(bad_spirlay_2 geomOr(bad_spirla...

Executing: bad_spirlay_all_1 = geomAndNot(bad_spirlay_all geomButtOrOver(INDDEF spiral_b...
	   errorLayer(bad_spirlay_all_1 "ERC Warning : illegal layer under spiral")

Executing: inddef_texted_all = geomGetTexted(INDDEF INDDEF_text "*")

Executing: inddef_not_texted = geomAndNot(INDDEF inddef_texted_all)
	   errorLayer(inddef_not_texted "ERC Warning : Each INDDEF shape must be marked with a single INDDEF text label")

Executing: inddef_text_shape = geomTextShape(INDDEF_text)

Executing: inddef_text_shape_bad = geomEnclose(INDDEF inddef_text_shape (keep > 1))
	   errorLayer(inddef_text_shape_bad "ERC Warning : multiple text on INDEF")

Executing: rmet1_1 = geomAnd(met1_withslots geomOr(METRES MET1RES))

Executing: rmet1_trm = geomAnd(geomAndNot(geomSize(rmet1_1 0.1) rmet1_1) met1_withslots)

Executing: rmet1_2 = geomGetRectangle(rmet1_1)

Executing: errorLayer(geomAndNot(rmet1_1 rmet1_2) "Error: MET1 resistors (shorts) must be rectangular")

Executing: RMET1_device = geomButtOrOver(rmet1_2 rmet1_trm (keep == 2))

Executing: errorLayer(geomAndNot(rmet1_2 RMET1_device) "Error: Number of MET1 resistor terminals != 2")

Executing: rmet2_1 = geomAnd(met2_withslots geomOr(METRES MET2RES))

Executing: rmet2_trm = geomAnd(geomAndNot(geomSize(rmet2_1 0.1) rmet2_1) met2_withslots)

Executing: rmet2_2 = geomGetRectangle(rmet2_1)

Executing: errorLayer(geomAndNot(rmet2_1 rmet2_2) "Error: MET2 resistors (shorts) must be rectangular")

Executing: RMET2_device = geomButtOrOver(rmet2_2 rmet2_trm (keep == 2))

Executing: errorLayer(geomAndNot(rmet2_2 RMET2_device) "Error: Number of MET2 resistor terminals != 2")

Executing: rmet3_1 = geomAnd(met3_withslots geomOr(METRES MET3RES))

Executing: rmet3_trm = geomAnd(geomAndNot(geomSize(rmet3_1 0.1) rmet3_1) met3_withslots)

Executing: rmet3_2 = geomGetRectangle(rmet3_1)

Executing: errorLayer(geomAndNot(rmet3_1 rmet3_2) "Error: MET3 resistors (shorts) must be rectangular")

Executing: RMET3_device = geomButtOrOver(rmet3_2 rmet3_trm (keep == 2))

Executing: errorLayer(geomAndNot(rmet3_2 RMET3_device) "Error: Number of MET3 resistor terminals != 2")

Executing: rmet4_1 = geomAnd(met4_withslots geomOr(METRES MET4RES))

Executing: rmet4_trm = geomAnd(geomAndNot(geomSize(rmet4_1 0.1) rmet4_1) met4_withslots)

Executing: rmet4_2 = geomGetRectangle(rmet4_1)

Executing: errorLayer(geomAndNot(rmet4_1 rmet4_2) "Error: MET4 resistors (shorts) must be rectangular")

Executing: RMET4_device = geomButtOrOver(rmet4_2 rmet4_trm (keep == 2))

Executing: errorLayer(geomAndNot(rmet4_2 RMET4_device) "Error: Number of MET4 resistor terminals != 2")

Executing: met1_withslots_trunc = geomAndNot(met1_withslots RMET1_device)

Executing: met2_withslots_trunc = geomAndNot(met2_withslots RMET2_device)

Executing: met3_withslots_trunc = geomAndNot(met3_withslots RMET3_device)

Executing: m1m2_commonx = geomStraddle(geomAnd(met1_withslots_trunc met2_withslots_trunc...

Executing: RVIA1_device = geomAnd(m1m2_commonx METRES_VIA1)

Executing: errorLayer(geomAnd(geomButtOrOver(geomAndNot(m1m2_commonx RVIA1_device) RVIA1_device) VIA1) "RVIA1 Definition layer: does not open all via conncetion, is shorted")

Executing: errorLayer(geomGetEdge(METRES_VIA1 inside geomButtOrOver(VIA1 RVIA1_device)) "RVIA1 Definition layer: truncates via1, device shorted")

Executing: errorLayer(geomAvoiding(METRES_VIA1 RVIA1_device) "RVIA1 Definition layer: does not define a device")

Executing: errorLayer(geomCat(geomAnd(METRES_VIA1 METRES) geomAnd(METRES_VIA1 MET1RES) geomAnd(METRES_VIA1 MET2RES)) "RVIA1 Definition layer: over METRES")

Executing: m2m3_commonx = geomStraddle(geomAnd(met2_withslots_trunc met3_withslots_trunc...

Executing: RVIA2_device = geomAnd(m2m3_commonx METRES_VIA2)

Executing: errorLayer(geomAnd(geomButtOrOver(geomAndNot(m2m3_commonx RVIA2_device) RVIA2_device) VIA2) "RVIA2 Definition layer: does not open all via conncetion, is shorted")

Executing: errorLayer(geomGetEdge(METRES_VIA2 inside geomButtOrOver(VIA2 RVIA2_device)) "RVIA2 Definition layer: truncates via2, device shorted")

Executing: errorLayer(geomAvoiding(METRES_VIA2 RVIA2_device) "RVIA2 Definition layer : does not define a device")

Executing: errorLayer(geomCat(geomAnd(METRES_VIA2 METRES) geomAnd(METRES_VIA2 MET2RES) geomAnd(METRES_VIA2 MET3RES)) "RVIA2 Definition layer: over METRES")

Executing: met4_withslots_trunc = geomAndNot(met4_withslots RMET4_device)

Executing: m3m4_commonx = geomStraddle(geomAnd(met3_withslots_trunc met4_withslots_trunc...

Executing: RVIA3_device = geomAnd(m3m4_commonx METRES_VIA3)

Executing: errorLayer(geomAnd(geomButtOrOver(geomAndNot(m3m4_commonx RVIA3_device) RVIA3_device) VIA3) "RVIA3 Definition layer: does not open all via conncetion, is shorted")

Executing: errorLayer(geomGetEdge(METRES_VIA3 inside geomButtOrOver(VIA3 RVIA3_device)) "RVIA3 Definition layer: truncates via3, device shorted")

Executing: errorLayer(geomAvoiding(METRES_VIA3 RVIA3_device) "RVIA3 Definition layer : does not define a device")

Executing: errorLayer(geomCat(geomAnd(METRES_VIA3 METRES) geomAnd(METRES_VIA3 MET2RES) geomAnd(METRES_VIA3 MET3RES)) "RVIA3 Definition layer: over METRES")

Executing: net_met1 = geomAndNot(met1_withslots geomCat(spiral_body RMET1_device))

Executing: net_met2 = geomAndNot(met2_withslots geomCat(spiral_body RMET2_device))

Executing: net_met3 = geomAndNot(met3_withslots geomCat(spiral_body RMET3_device))

Executing: net_via1 = geomAndNot(VIA1 geomCat(spiral_body RVIA1_device))

Executing: net_via2_met2 = geomAndNot(via2_met2 geomCat(spiral_body RVIA2_device))

Executing: net_metcap = geomCat(METCAP)

Executing: net_met4 = geomAndNot(met4_withslots geomCat(spiral_body RMET4_device))

Executing: net_via3 = geomAndNot(VIA3 geomCat(spiral_body RVIA3_device))

Executing: rblock = geomCat(RFDEF)

Executing: rblock_poly1_1 = geomCat(rblock)

Executing: outside_rblock_poly1 = geomAndNot(geomSize(rblock_poly1_1 (0.35 + 0.01)) rblo...

Executing: poly1_outside_rblock = geomAnd(net_poly1 outside_rblock_poly1)

Executing: inside_rblock_poly1 = geomAndNot(rblock_poly1_1 geomSize(rblock_poly1_1 -0.35))

Executing: poly1_inside_rblock = geomAnd(net_poly1 inside_rblock_poly1)

Executing: rblock_poly1_2 = geomButtOrOver(poly1_inside_rblock drc(poly1_outside_rblock ...

Executing: rblock_poly1 = geomAnd(geomAndNot(rblock_poly1_1 rblock_poly1_2) net_poly1)

Executing: outside_rblock_poly2 = geomAndNot(geomSize(rblock_poly2_1 (0.65 + 0.01)) rblo...

Executing: poly2_outside_rblock = geomAnd(net_poly2 outside_rblock_poly2)

Executing: inside_rblock_poly2 = geomAndNot(rblock_poly2_1 geomSize(rblock_poly2_1 -0.65))

Executing: poly2_inside_rblock = geomAnd(net_poly2 inside_rblock_poly2)

Executing: rblock_poly2_2 = geomButtOrOver(poly2_inside_rblock drc(poly2_outside_rblock ...

Executing: rblock_poly2 = geomAnd(geomAndNot(rblock_poly2_1 rblock_poly2_2) net_poly2)

Executing: outside_rblock_met1 = geomAndNot(geomSize(rblock_met1_1 (0.5 + 0.01)) rblock_...

Executing: met1_outside_rblock = geomAnd(net_met1 outside_rblock_met1)

Executing: inside_rblock_met1 = geomAndNot(rblock_met1_1 geomSize(rblock_met1_1 -0.5))

Executing: met1_inside_rblock = geomAnd(net_met1 inside_rblock_met1)

Executing: rblock_met1_2 = geomButtOrOver(met1_inside_rblock drc(met1_outside_rblock (wi...

Executing: rblock_met1 = geomAnd(geomAndNot(rblock_met1_1 rblock_met1_2) net_met1)

Executing: rblock_met2_1 = geomOverlap(rblock geomCat(cvar cmim))

Executing: outside_rblock_met2 = geomAndNot(geomSize(rblock_met2_1 (0.6 + 0.01)) rblock_...

Executing: met2_outside_rblock = geomAnd(net_met2 outside_rblock_met2)

Executing: inside_rblock_met2 = geomAndNot(rblock_met2_1 geomSize(rblock_met2_1 -0.6))

Executing: met2_inside_rblock = geomAnd(net_met2 inside_rblock_met2)

Executing: rblock_met2_2 = geomButtOrOver(met2_inside_rblock drc(met2_outside_rblock (wi...

Executing: rblock_met2 = geomAndNot(rblock_met2_1 rblock_met2_2)

Executing: rblock_metcap = geomOverlap(rblock cmim)

Executing: rblock_met4 = geomEmpty()

Executing: cblock_met2cap_met2 = geomSize(cmim 0.9)

Executing: rcxLayer(cblock_met2cap_met2)

Executing: cblock_met1_fox = geomCat(CPOLYRF_device RPOLY2RF_device NMOSRF_device PMOSRF...

Executing: rcxLayer(cblock_met1_fox)

Executing: cblock_poly2_poly1 = geomSize(cpoly 0.9)

Executing: rcxLayer(cblock_poly2_poly1)

Executing: cblock_poly1_psub = geomCat(gate HVDEF)

Executing: rcxLayer(cblock_poly1_psub)

Executing: POLY1_pinshape_bad = geomOutside(POLY1_pinshape net_poly1)
	   errorLayer(POLY1_pinshape_bad "ERROR : POLY1 pin outside poly1")

Executing: MET1_pinshape_bad = geomOutside(MET1_pinshape net_met1)
	   errorLayer(MET1_pinshape_bad "ERROR : MET1 pin outside met1")

Executing: MET2_pinshape_bad = geomOutside(MET2_pinshape net_met2)
	   errorLayer(MET2_pinshape_bad "ERROR : MET2 pin outside met2")

Executing: MET3_pinshape_bad = geomAvoiding(geomOutside(MET3_pinshape net_met3) INDDEF)
	   errorLayer(MET3_pinshape_bad "ERROR : MET3 pin outside met3")

Executing: MET4_pinshape_bad = geomAvoiding(geomOutside(MET4_pinshape net_met4) INDDEF)
	   errorLayer(MET4_pinshape_bad "ERROR : MET4 pin outside met4")

Executing: PAD_pinshape_bad = geomOutside(PAD_pinshape net_met4)
	   errorLayer(PAD_pinshape_bad "ERROR : PAD pin outside pad metal")

Executing: net_poly1 = geomOr(net_poly1 POLY1_pinshape)

Executing: net_met1 = geomOr(net_met1 MET1_pinshape)

Executing: net_met2 = geomOr(net_met2 MET2_pinshape)

Executing: net_met3 = geomOr(net_met3 MET3_pinshape)

Executing: net_met4 = geomOr(net_met4 MET4_pinshape)

Executing: net_optdef = geomOr(OPTDEF)

Executing: geomConnect((label POLY1_pintext net_poly1 POLY1_pinshape) (label MET1_pintex...
 See the label report in "xort.erc" file for details.


Executing: geomStamp(net_psub net_subtap)

Executing: geomStamp(net_nwell net_welltap)

Executing: (saveInterconnect (net_ndiff "ndiff") (net_ndiffcon "CONT") (net_pdiff "pdiff...

Executing: extractMOS("NMOS4" NMOS_device (net_poly1 "G") (net_nsd "S" "D") (net_psub "B...
         3 'NMOS4' created in cell 'xort layout lab2024'.

Executing: saveRecognition(NMOS_device "device")

Executing: w = measureParameter(length (NMOS_device butting net_nsd) 5e-07)

Executing: l = measureParameter(length (NMOS_device outside net_nsd) 5e-07)

Executing: w_bends90 = measureParameter(bends_full (NMOS_device butting net_nsd))

Executing: w_bends45 = measureParameter(bends_part (NMOS_device butting net_nsd))

Executing: l_bends90 = measureParameter(bends_full (NMOS_device outside net_nsd))

Executing: l_bends45 = measureParameter(bends_part (NMOS_device outside net_nsd))

Executing: weff = calculateParameter(if((w > (l * (1 + (w_bends90 * 0.5) + (w_bends45 * ...

Executing: leff = calculateParameter(if((l > (w * (1 + (l_bends90 * 0.5) + (l_bends45 * ...

Executing: nameParameter(leff "l")

Executing: nameParameter(weff "w")

Executing: nameParameter(weff "wtot")

Executing: attachParameter(as ("ad" "D") ("as" "S") NMOS_device shared)

Executing: attachParameter(ps ("pd" "D") ("ps" "S") NMOS_device shared)

Executing: NMOS_WAFFLE_bulk = geomCat(NMOS_WAFFLE_device)

Executing: geomStamp(NMOS_WAFFLE_bulk net_psub)

Executing: extractDevice("NMOS4" NMOS_WAFFLE_device (net_poly1 "G") (net_nsd "S" "D") (N...

Executing: saveRecognition(NMOS_WAFFLE_device "device")

Executing: w = measureParameter(length (NMOS_WAFFLE_device butting net_nsd) 5e-07)

Executing: l = measureParameter(length (NMOS_WAFFLE_device outside net_nsd) 5e-07)

Executing: nameParameter(l "l")

Executing: nameParameter(w "w")

Executing: nameParameter(w "wtot")

Executing: attachParameter(as ("ad" "D") ("as" "S") NMOS_WAFFLE_device shared)

Executing: attachParameter(ps ("pd" "D") ("ps" "S") NMOS_WAFFLE_device shared)

Executing: saveProperty(NMOS_WAFFLE_device "nrs" 0.5)

Executing: saveProperty(NMOS_WAFFLE_device "nrd" 0.5)

Executing: extractMOS("NMOSM4" NMOSM_device (net_poly1 "G") (net_nsd "S" "D") (net_psub ...

Executing: saveRecognition(NMOSM_device "device")

Executing: w = measureParameter(length (NMOSM_device butting net_nsd) 5e-07)

Executing: l = measureParameter(length (NMOSM_device outside net_nsd) 5e-07)

Executing: w_bends90 = measureParameter(bends_full (NMOSM_device butting net_nsd))

Executing: w_bends45 = measureParameter(bends_part (NMOSM_device butting net_nsd))

Executing: l_bends90 = measureParameter(bends_full (NMOSM_device outside net_nsd))

Executing: l_bends45 = measureParameter(bends_part (NMOSM_device outside net_nsd))

Executing: weff = calculateParameter(if((w > (l * (1 + (w_bends90 * 0.5) + (w_bends45 * ...

Executing: leff = calculateParameter(if((l > (w * (1 + (l_bends90 * 0.5) + (l_bends45 * ...

Executing: nameParameter(leff "l")

Executing: nameParameter(weff "w")

Executing: nameParameter(weff "wtot")

Executing: attachParameter(as ("ad" "D") ("as" "S") NMOSM_device shared)

Executing: attachParameter(ps ("pd" "D") ("ps" "S") NMOSM_device shared)

Executing: NMOSM_WAFFLE_bulk = geomCat(NMOSM_WAFFLE_device)

Executing: geomStamp(NMOSM_WAFFLE_bulk net_psub)

Executing: extractDevice("NMOSM4" NMOSM_WAFFLE_device (net_poly1 "G") (net_nsd "S" "D") ...

Executing: saveRecognition(NMOSM_WAFFLE_device "device")

Executing: w = measureParameter(length (NMOSM_WAFFLE_device butting net_nsd) 5e-07)

Executing: l = measureParameter(length (NMOSM_WAFFLE_device outside net_nsd) 5e-07)

Executing: nameParameter(l "l")

Executing: nameParameter(w "w")

Executing: nameParameter(w "wtot")

Executing: attachParameter(as ("ad" "D") ("as" "S") NMOSM_WAFFLE_device shared)

Executing: attachParameter(ps ("pd" "D") ("ps" "S") NMOSM_WAFFLE_device shared)

Executing: saveProperty(NMOSM_WAFFLE_device "nrs" 0.5)

Executing: saveProperty(NMOSM_WAFFLE_device "nrd" 0.5)

Executing: extractMOS("PMOS4" PMOS_device (net_poly1 "G") (net_psd "S" "D") (net_nwell "...
         3 'PMOS4' created in cell 'xort layout lab2024'.

Executing: saveRecognition(PMOS_device "device")

Executing: w = measureParameter(length (PMOS_device butting net_psd) 5e-07)

Executing: l = measureParameter(length (PMOS_device outside net_psd) 5e-07)

Executing: w_bends90 = measureParameter(bends_full (PMOS_device butting net_psd))

Executing: w_bends45 = measureParameter(bends_part (PMOS_device butting net_psd))

Executing: l_bends90 = measureParameter(bends_full (PMOS_device outside net_psd))

Executing: l_bends45 = measureParameter(bends_part (PMOS_device outside net_psd))

Executing: weff = calculateParameter(if((w > (l * (1 + (w_bends90 * 0.5) + (w_bends45 * ...

Executing: leff = calculateParameter(if((l > (w * (1 + (l_bends90 * 0.5) + (l_bends45 * ...

Executing: nameParameter(leff "l")

Executing: nameParameter(weff "w")

Executing: nameParameter(weff "wtot")

Executing: attachParameter(as ("ad" "D") ("as" "S") PMOS_device shared)

Executing: attachParameter(ps ("pd" "D") ("ps" "S") PMOS_device shared)

Executing: PMOS_WAFFLE_bulk = geomCat(PMOS_WAFFLE_device)

Executing: geomStamp(PMOS_WAFFLE_bulk net_nwell)

Executing: extractDevice("PMOS4" PMOS_WAFFLE_device (net_poly1 "G") (net_psd "S" "D") (P...

Executing: saveRecognition(PMOS_WAFFLE_device "device")

Executing: w = measureParameter(length (PMOS_WAFFLE_device butting net_psd) 5e-07)

Executing: l = measureParameter(length (PMOS_WAFFLE_device outside net_psd) 5e-07)

Executing: nameParameter(l "l")

Executing: nameParameter(w "w")

Executing: nameParameter(w "wtot")

Executing: attachParameter(as ("ad" "D") ("as" "S") PMOS_WAFFLE_device shared)

Executing: attachParameter(ps ("pd" "D") ("ps" "S") PMOS_WAFFLE_device shared)

Executing: saveProperty(PMOS_WAFFLE_device "nrs" 0.5)

Executing: saveProperty(PMOS_WAFFLE_device "nrd" 0.5)

Executing: extractMOS("PMOSM4" PMOSM_device (net_poly1 "G") (net_psd "S" "D") (net_nwell...

Executing: saveRecognition(PMOSM_device "device")

Executing: w = measureParameter(length (PMOSM_device butting net_psd) 5e-07)

Executing: l = measureParameter(length (PMOSM_device outside net_psd) 5e-07)

Executing: w_bends90 = measureParameter(bends_full (PMOSM_device butting net_psd))

Executing: w_bends45 = measureParameter(bends_part (PMOSM_device butting net_psd))

Executing: l_bends90 = measureParameter(bends_full (PMOSM_device outside net_psd))

Executing: l_bends45 = measureParameter(bends_part (PMOSM_device outside net_psd))

Executing: weff = calculateParameter(if((w > (l * (1 + (w_bends90 * 0.5) + (w_bends45 * ...

Executing: leff = calculateParameter(if((l > (w * (1 + (l_bends90 * 0.5) + (l_bends45 * ...

Executing: nameParameter(leff "l")

Executing: nameParameter(weff "w")

Executing: nameParameter(weff "wtot")

Executing: attachParameter(as ("ad" "D") ("as" "S") PMOSM_device shared)

Executing: attachParameter(ps ("pd" "D") ("ps" "S") PMOSM_device shared)

Executing: PMOSM_WAFFLE_bulk = geomCat(PMOSM_WAFFLE_device)

Executing: geomStamp(PMOSM_WAFFLE_bulk net_nwell)

Executing: extractDevice("PMOSM4" PMOSM_WAFFLE_device (net_poly1 "G") (net_psd "S" "D") ...

Executing: saveRecognition(PMOSM_WAFFLE_device "device")

Executing: w = measureParameter(length (PMOSM_WAFFLE_device butting net_psd) 5e-07)

Executing: l = measureParameter(length (PMOSM_WAFFLE_device outside net_psd) 5e-07)

Executing: nameParameter(l "l")

Executing: nameParameter(w "w")

Executing: nameParameter(w "wtot")

Executing: attachParameter(as ("ad" "D") ("as" "S") PMOSM_WAFFLE_device shared)

Executing: attachParameter(ps ("pd" "D") ("ps" "S") PMOSM_WAFFLE_device shared)

Executing: saveProperty(PMOSM_WAFFLE_device "nrs" 0.5)

Executing: saveProperty(PMOSM_WAFFLE_device "nrd" 0.5)

Executing: extractDevice("RCX_DUMMY" NMOSL_device (net_poly1 "PLUS" "MINUS") (cellView "...

Executing: extractDevice("RCX_DUMMY" NMOSL_WAFFLE_device (net_poly1 "PLUS" "MINUS") (cel...

Executing: extractDevice("RCX_DUMMY" NMOSML_device (net_poly1 "PLUS" "MINUS") (cellView ...

Executing: extractDevice("RCX_DUMMY" NMOSML_WAFFLE_device (net_poly1 "PLUS" "MINUS") (ce...

Executing: extractDevice("RCX_DUMMY" PMOSL_device (net_poly1 "PLUS" "MINUS") (cellView "...

Executing: extractDevice("RCX_DUMMY" PMOSL_WAFFLE_device (net_poly1 "PLUS" "MINUS") (cel...

Executing: extractDevice("RCX_DUMMY" PMOSML_device (net_poly1 "PLUS" "MINUS") (cellView ...

Executing: extractDevice("RCX_DUMMY" DPMOSM_device (net_poly1 "PLUS" "MINUS") (cellView ...

Executing: extractDevice("RCX_DUMMY" PMOSML_WAFFLE_device (net_poly1 "PLUS" "MINUS") (ce...

Executing: NMOSW_4N_bulk = geomCat(NMOSW_4N_device)

Executing: geomStamp(NMOSW_4N_bulk net_psub)

Executing: extractDevice("NMOS4" NMOSW_4N_device (net_poly1 "G") (net_nsd "S" "D") (NMOS...

Executing: saveRecognition(NMOSW_4N_device "device")

Executing: w = measureParameter(length (NMOSW_4N_device butting net_nsd) 5e-07)

Executing: l = measureParameter(length (NMOSW_4N_device outside net_nsd) 5e-07)

Executing: nameParameter(l "l")

Executing: nameParameter(w "w")

Executing: nameParameter(w "wtot")

Executing: saveProperty(NMOSW_4N_device "SUBTYPE" "W_4N")

Executing: saveProperty(NMOSW_4N_device "model" "nmosw_4n")

Executing: attachParameter(as ("as" "S") NMOSW_4N_device)

Executing: attachParameter(ps ("ps" "S") NMOSW_4N_device)

Executing: attachParameter(ad ("ad" "D") NMOSW_4N_device)

Executing: attachParameter(pd ("pd" "D") NMOSW_4N_device)

Executing: saveProperty(NMOSW_4N_device "nrs" 0.0)

Executing: saveProperty(NMOSW_4N_device "nrd" 0.0)

Executing: NMOSW_3N_bulk = geomCat(NMOSW_3N_device)

Executing: geomStamp(NMOSW_3N_bulk net_psub)

Executing: extractDevice("NMOS4" NMOSW_3N_device (net_poly1 "G") (net_nsd "S" "D") (NMOS...

Executing: saveRecognition(NMOSW_3N_device "device")

Executing: w = measureParameter(length (NMOSW_3N_device butting net_nsd) 5e-07)

Executing: l = measureParameter(length (NMOSW_3N_device outside net_nsd) 5e-07)

Executing: nameParameter(l "l")

Executing: nameParameter(w "w")

Executing: nameParameter(w "wtot")

Executing: saveProperty(NMOSW_3N_device "SUBTYPE" "W_3N")

Executing: saveProperty(NMOSW_3N_device "model" "nmosw_3n")

Executing: attachParameter(as ("ad" "D") ("as" "S") NMOSW_3N_device)

Executing: attachParameter(ps ("pd" "D") ("ps" "S") NMOSW_3N_device)

Executing: saveProperty(NMOSW_3N_device "nrs" 0.0)

Executing: saveProperty(NMOSW_3N_device "nrd" 0.0)

Executing: NMOSW_2N_bulk = geomCat(NMOSW_2N_device)

Executing: geomStamp(NMOSW_2N_bulk net_psub)

Executing: extractDevice("NMOS4" NMOSW_2N_device (net_poly1 "G") (net_nsd "S" "D") (NMOS...

Executing: saveRecognition(NMOSW_2N_device "device")

Executing: w = measureParameter(length (NMOSW_2N_device butting net_nsd) 5e-07)

Executing: l = measureParameter(length (NMOSW_2N_device outside net_nsd) 5e-07)

Executing: nameParameter(l "l")

Executing: nameParameter(w "w")

Executing: nameParameter(w "wtot")

Executing: saveProperty(NMOSW_2N_device "SUBTYPE" "W_2N")

Executing: saveProperty(NMOSW_2N_device "model" "nmosw_2n")

Executing: attachParameter(as ("ad" "D") ("as" "S") NMOSW_2N_device)

Executing: attachParameter(ps ("pd" "D") ("ps" "S") NMOSW_2N_device)

Executing: saveProperty(NMOSW_2N_device "nrs" 0.0)

Executing: saveProperty(NMOSW_2N_device "nrd" 0.0)

Executing: NMOSMW_4N_bulk = geomCat(NMOSMW_4N_device)

Executing: geomStamp(NMOSMW_4N_bulk net_psub)

Executing: extractDevice("NMOSM4" NMOSMW_4N_device (net_poly1 "G") (net_nsd "S" "D") (NM...

Executing: saveRecognition(NMOSMW_4N_device "device")

Executing: w = measureParameter(length (NMOSMW_4N_device butting net_nsd) 5e-07)

Executing: l = measureParameter(length (NMOSMW_4N_device outside net_nsd) 5e-07)

Executing: nameParameter(l "l")

Executing: nameParameter(w "w")

Executing: nameParameter(w "wtot")

Executing: saveProperty(NMOSMW_4N_device "SUBTYPE" "W_4N")

Executing: saveProperty(NMOSMW_4N_device "model" "nmosmw_4n")

Executing: attachParameter(as ("as" "S") NMOSMW_4N_device)

Executing: attachParameter(ps ("ps" "S") NMOSMW_4N_device)

Executing: attachParameter(ad ("ad" "D") NMOSMW_4N_device)

Executing: attachParameter(pd ("pd" "D") NMOSMW_4N_device)

Executing: saveProperty(NMOSMW_4N_device "nrs" 0.0)

Executing: saveProperty(NMOSMW_4N_device "nrd" 0.0)

Executing: NMOSMW_3N_bulk = geomCat(NMOSMW_3N_device)

Executing: geomStamp(NMOSMW_3N_bulk net_psub)

Executing: extractDevice("NMOSM4" NMOSMW_3N_device (net_poly1 "G") (net_nsd "S" "D") (NM...

Executing: saveRecognition(NMOSMW_3N_device "device")

Executing: w = measureParameter(length (NMOSMW_3N_device butting net_nsd) 5e-07)

Executing: l = measureParameter(length (NMOSMW_3N_device outside net_nsd) 5e-07)

Executing: nameParameter(l "l")

Executing: nameParameter(w "w")

Executing: nameParameter(w "wtot")

Executing: saveProperty(NMOSMW_3N_device "SUBTYPE" "W_3N")

Executing: saveProperty(NMOSMW_3N_device "model" "nmosmw_3n")

Executing: attachParameter(as ("ad" "D") ("as" "S") NMOSMW_3N_device)

Executing: attachParameter(ps ("pd" "D") ("ps" "S") NMOSMW_3N_device)

Executing: saveProperty(NMOSMW_3N_device "nrs" 0.0)

Executing: saveProperty(NMOSMW_3N_device "nrd" 0.0)

Executing: NMOSMW_2N_bulk = geomCat(NMOSMW_2N_device)

Executing: geomStamp(NMOSMW_2N_bulk net_psub)

Executing: extractDevice("NMOSM4" NMOSMW_2N_device (net_poly1 "G") (net_nsd "S" "D") (NM...

Executing: saveRecognition(NMOSMW_2N_device "device")

Executing: w = measureParameter(length (NMOSMW_2N_device butting net_nsd) 5e-07)

Executing: l = measureParameter(length (NMOSMW_2N_device outside net_nsd) 5e-07)

Executing: nameParameter(l "l")

Executing: nameParameter(w "w")

Executing: nameParameter(w "wtot")

Executing: saveProperty(NMOSMW_2N_device "SUBTYPE" "W_2N")

Executing: saveProperty(NMOSMW_2N_device "model" "nmosmw_2n")

Executing: attachParameter(as ("ad" "D") ("as" "S") NMOSMW_2N_device)

Executing: attachParameter(ps ("pd" "D") ("ps" "S") NMOSMW_2N_device)

Executing: saveProperty(NMOSMW_2N_device "nrs" 0.0)

Executing: saveProperty(NMOSMW_2N_device "nrd" 0.0)

Executing: PMOSW_4N_bulk = geomCat(PMOSW_4N_device)

Executing: geomStamp(PMOSW_4N_bulk net_nwell)

Executing: extractDevice("PMOS4" PMOSW_4N_device (net_poly1 "G") (net_psd "S" "D") (PMOS...

Executing: saveRecognition(PMOSW_4N_device "device")

Executing: w = measureParameter(length (PMOSW_4N_device butting net_psd) 5e-07)

Executing: l = measureParameter(length (PMOSW_4N_device outside net_psd) 5e-07)

Executing: nameParameter(l "l")

Executing: nameParameter(w "w")

Executing: nameParameter(w "wtot")

Executing: saveProperty(PMOSW_4N_device "SUBTYPE" "W_4N")

Executing: saveProperty(PMOSW_4N_device "model" "pmosw_4n")

Executing: attachParameter(as ("as" "S") PMOSW_4N_device)

Executing: attachParameter(ps ("ps" "S") PMOSW_4N_device)

Executing: attachParameter(ad ("ad" "D") PMOSW_4N_device)

Executing: attachParameter(pd ("pd" "D") PMOSW_4N_device)

Executing: saveProperty(PMOSW_4N_device "nrs" 0.0)

Executing: saveProperty(PMOSW_4N_device "nrd" 0.0)

Executing: PMOSW_3N_bulk = geomCat(PMOSW_3N_device)

Executing: geomStamp(PMOSW_3N_bulk net_nwell)

Executing: extractDevice("PMOS4" PMOSW_3N_device (net_poly1 "G") (net_psd "S" "D") (PMOS...

Executing: saveRecognition(PMOSW_3N_device "device")

Executing: w = measureParameter(length (PMOSW_3N_device butting net_psd) 5e-07)

Executing: l = measureParameter(length (PMOSW_3N_device outside net_psd) 5e-07)

Executing: nameParameter(l "l")

Executing: nameParameter(w "w")

Executing: nameParameter(w "wtot")

Executing: saveProperty(PMOSW_3N_device "SUBTYPE" "W_3N")

Executing: saveProperty(PMOSW_3N_device "model" "pmosw_3n")

Executing: attachParameter(as ("ad" "D") ("as" "S") PMOSW_3N_device)

Executing: attachParameter(ps ("pd" "D") ("ps" "S") PMOSW_3N_device)

Executing: saveProperty(PMOSW_3N_device "nrs" 0.0)

Executing: saveProperty(PMOSW_3N_device "nrd" 0.0)

Executing: PMOSW_2N_bulk = geomCat(PMOSW_2N_device)

Executing: geomStamp(PMOSW_2N_bulk net_nwell)

Executing: extractDevice("PMOS4" PMOSW_2N_device (net_poly1 "G") (net_psd "S" "D") (PMOS...

Executing: saveRecognition(PMOSW_2N_device "device")

Executing: w = measureParameter(length (PMOSW_2N_device butting net_psd) 5e-07)

Executing: l = measureParameter(length (PMOSW_2N_device outside net_psd) 5e-07)

Executing: nameParameter(l "l")

Executing: nameParameter(w "w")

Executing: nameParameter(w "wtot")

Executing: saveProperty(PMOSW_2N_device "SUBTYPE" "W_2N")

Executing: saveProperty(PMOSW_2N_device "model" "pmosw_2n")

Executing: attachParameter(as ("ad" "D") ("as" "S") PMOSW_2N_device)

Executing: attachParameter(ps ("pd" "D") ("ps" "S") PMOSW_2N_device)

Executing: saveProperty(PMOSW_2N_device "nrs" 0.0)

Executing: saveProperty(PMOSW_2N_device "nrd" 0.0)

Executing: PMOSMW_4N_bulk = geomCat(PMOSMW_4N_device)

Executing: geomStamp(PMOSMW_4N_bulk net_nwell)

Executing: extractDevice("PMOSM4" PMOSMW_4N_device (net_poly1 "G") (net_psd "S" "D") (PM...

Executing: saveRecognition(PMOSMW_4N_device "device")

Executing: w = measureParameter(length (PMOSMW_4N_device butting net_psd) 5e-07)

Executing: l = measureParameter(length (PMOSMW_4N_device outside net_psd) 5e-07)

Executing: nameParameter(l "l")

Executing: nameParameter(w "w")

Executing: nameParameter(w "wtot")

Executing: saveProperty(PMOSMW_4N_device "SUBTYPE" "W_4N")

Executing: saveProperty(PMOSMW_4N_device "model" "pmosmw_4n")

Executing: attachParameter(as ("as" "S") PMOSMW_4N_device)

Executing: attachParameter(ps ("ps" "S") PMOSMW_4N_device)

Executing: attachParameter(ad ("ad" "D") PMOSMW_4N_device)

Executing: attachParameter(pd ("pd" "D") PMOSMW_4N_device)

Executing: saveProperty(PMOSMW_4N_device "nrs" 0.0)

Executing: saveProperty(PMOSMW_4N_device "nrd" 0.0)

Executing: PMOSMW_3N_bulk = geomCat(PMOSMW_3N_device)

Executing: geomStamp(PMOSMW_3N_bulk net_nwell)

Executing: extractDevice("PMOSM4" PMOSMW_3N_device (net_poly1 "G") (net_psd "S" "D") (PM...

Executing: saveRecognition(PMOSMW_3N_device "device")

Executing: w = measureParameter(length (PMOSMW_3N_device butting net_psd) 5e-07)

Executing: l = measureParameter(length (PMOSMW_3N_device outside net_psd) 5e-07)

Executing: nameParameter(l "l")

Executing: nameParameter(w "w")

Executing: nameParameter(w "wtot")

Executing: saveProperty(PMOSMW_3N_device "SUBTYPE" "W_3N")

Executing: saveProperty(PMOSMW_3N_device "model" "pmosmw_3n")

Executing: attachParameter(as ("ad" "D") ("as" "S") PMOSMW_3N_device)

Executing: attachParameter(ps ("pd" "D") ("ps" "S") PMOSMW_3N_device)

Executing: saveProperty(PMOSMW_3N_device "nrs" 0.0)

Executing: saveProperty(PMOSMW_3N_device "nrd" 0.0)

Executing: PMOSMW_2N_bulk = geomCat(PMOSMW_2N_device)

Executing: geomStamp(PMOSMW_2N_bulk net_nwell)

Executing: extractDevice("PMOSM4" PMOSMW_2N_device (net_poly1 "G") (net_psd "S" "D") (PM...

Executing: saveRecognition(PMOSMW_2N_device "device")

Executing: w = measureParameter(length (PMOSMW_2N_device butting net_psd) 5e-07)

Executing: l = measureParameter(length (PMOSMW_2N_device outside net_psd) 5e-07)

Executing: nameParameter(l "l")

Executing: nameParameter(w "w")

Executing: nameParameter(w "wtot")

Executing: saveProperty(PMOSMW_2N_device "SUBTYPE" "W_2N")

Executing: saveProperty(PMOSMW_2N_device "model" "pmosmw_2n")

Executing: attachParameter(as ("ad" "D") ("as" "S") PMOSMW_2N_device)

Executing: attachParameter(ps ("pd" "D") ("ps" "S") PMOSMW_2N_device)

Executing: saveProperty(PMOSMW_2N_device "nrs" 0.0)

Executing: saveProperty(PMOSMW_2N_device "nrd" 0.0)

Executing: nmosh_dummy = geomAnd(NMOSH_device net_nwell)

Executing: extractDevice("NMOSH" NMOSH_device (net_poly1 "G") (net_nsd "S") (nmosh_d_ter...

Executing: saveRecognition(NMOSH_device "device")

Executing: attachParameter(l1 "l" NMOSH_device)

Executing: attachParameter(w1 "w" NMOSH_device)

Executing: attachParameter(as ("as" "S") NMOSH_device shared)

Executing: attachParameter(ps ("ps" "S") NMOSH_device shared)

Executing: attachParameter(nrs "nrs" NMOSH_device)

Executing: saveProperty(NMOSH_device "nrd" 0.0)

Executing: saveProperty(NMOSH_device "ad" 0.0)

Executing: saveProperty(NMOSH_device "pd" 0.0)

Executing: nmosmh_dummy = geomAnd(NMOSMH_device net_nwell)

Executing: extractDevice("NMOSMH" NMOSMH_device (net_poly1 "G") (net_nsd "S") (nmosh_d_t...

Executing: saveRecognition(NMOSMH_device "device")

Executing: attachParameter(l1 "l" NMOSMH_device)

Executing: attachParameter(w1 "w" NMOSMH_device)

Executing: attachParameter(as ("as" "S") NMOSMH_device shared)

Executing: attachParameter(ps ("ps" "S") NMOSMH_device shared)

Executing: attachParameter(nrs "nrs" NMOSMH_device)

Executing: saveProperty(NMOSMH_device "nrd" 0.0)

Executing: saveProperty(NMOSMH_device "ad" 0.0)

Executing: saveProperty(NMOSMH_device "pd" 0.0)

Executing: extractDevice("RCX_DUMMY" NMOSHL_device (net_poly1 "PLUS" "MINUS") (cellView ...

Executing: extractDevice("RCX_DUMMY" NMOSMHL_device (net_poly1 "PLUS" "MINUS") (cellView...

Executing: nmos30_device_all = geomOr(NMOS30M_device NMOS18T_device)

Executing: ndiff_nmos30_all = geomButtOrOver(net_ndiff nmos30_device_all)

Executing: ndiff_nmos30_1 = geomButtOrOver(nmos30_1 nmos30_device_all)

Executing: net_ndiff_drain = geomAnd(ndiff_nmos30_all ndiff_nmos30_1)

Executing: net_ndiff_source = geomAndNot(ndiff_nmos30_all ndiff_nmos30_1)

Executing: geomStamp(net_ndiff_drain net_ndiff)

Executing: geomStamp(net_ndiff_source net_ndiff)

Executing: extractDevice("NMOS30M" NMOS30M_device (net_poly1 "G") (net_ndiff_source "S")...

Executing: saveRecognition(NMOS30M_device "device")

Executing: attachParameter(l "l" NMOS30M_device)

Executing: attachParameter(w "w" NMOS30M_device)

Executing: attachParameter(w "wtot" NMOS30M_device)

Executing: attachParameter(wg "wg" NMOS30M_device)

Executing: attachParameter(as ("as" "S") NMOS30M_device shared)

Executing: attachParameter(ad ("ad" "D") NMOS30M_device)

Executing: attachParameter(ps ("ps" "S") NMOS30M_device shared)

Executing: attachParameter(pd ("pd" "D") NMOS30M_device)

Executing: attachParameter(nrs "nrs" NMOS30M_device)

Executing: saveProperty(NMOS30M_device "nrd" 0.0)

Executing: extractDevice("NMOS18T" NMOS18T_device (net_poly1 "G") (net_ndiff_source "S")...

Executing: saveRecognition(NMOS18T_device "device")

Executing: attachParameter(l "l" NMOS18T_device)

Executing: attachParameter(w "w" NMOS18T_device)

Executing: attachParameter(w "wtot" NMOS18T_device)

Executing: attachParameter(wg "wg" NMOS18T_device)

Executing: attachParameter(as ("as" "S") NMOS18T_device shared)

Executing: attachParameter(ad ("ad" "D") NMOS18T_device)

Executing: attachParameter(ps ("ps" "S") NMOS18T_device shared)

Executing: attachParameter(pd ("pd" "D") NMOS18T_device)

Executing: attachParameter(nrs "nrs" NMOS18T_device)

Executing: saveProperty(NMOS18T_device "nrd" 0.0)

Executing: extractDevice("RCX_DUMMY" PMOSD30M_device (net_poly1 "PLUS" "MINUS") (cellVie...

Executing: extractDevice("RCX_DUMMY" PMOS30M_device (net_poly1 "PLUS" "MINUS") (cellView...

Executing: extractDIODE("ND" ND_device (net_psub "PLUS") (net_nsd "MINUS") (cellView "su...

Executing: saveRecognition(ND_device "device")

Executing: area = measureParameter(area (ND_device) 1e-12)

Executing: perimeter1 = measureParameter(length (ND_device coincident DIFF) 1e-06)

Executing: perimeter = calculateParameter(((area - area) + perimeter1))

Executing: nameParameter(area "area")

Executing: nameParameter(perimeter "perimeter")

Executing: nameParameter(perimeter "pj")

Executing: P_ND_device = geomAndNot(geomAndNot(geomAndNot(ndiode_1 DIODE) nmosh_d) HVDEF)

Executing: extractDIODE("P_ND" P_ND_device (net_psub "PLUS") (net_nsd "MINUS") (cellView...

Executing: saveRecognition(P_ND_device "device")

Executing: ad = measureParameter(area (P_ND_device) 1e-12)

Executing: pd1 = measureParameter(length (P_ND_device coincident DIFF) 1e-06)

Executing: pd = calculateParameter(((ad - ad) + pd1))

Executing: nameParameter(ad "ad")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ad "area")

Executing: nameParameter(pd "pj")

Executing: extractDIODE("PD" PD_device (net_psd "PLUS") (net_nwell "MINUS") (targetLayer...

Executing: saveRecognition(PD_device "device")

Executing: area = measureParameter(area (PD_device) 1e-12)

Executing: perimeter1 = measureParameter(length (PD_device coincident DIFF) 1e-06)

Executing: perimeter = calculateParameter(((area - area) + perimeter1))

Executing: nameParameter(area "area")

Executing: nameParameter(perimeter "perimeter")

Executing: nameParameter(perimeter "pj")

Executing: extractDIODE("P_PD" P_PD_device (net_psd "PLUS") (net_nwell "MINUS") (targetL...

Executing: saveRecognition(P_PD_device "device")

Executing: ad = measureParameter(area (P_PD_device) 1e-12)

Executing: pd1 = measureParameter(length (P_PD_device coincident DIFF) 1e-06)

Executing: pd = calculateParameter(((ad - ad) + pd1))

Executing: nameParameter(ad "ad")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ad "area")

Executing: nameParameter(pd "pj")

Executing: extractDIODE("NWD" NWD_device (net_psub "PLUS") (net_nwell "MINUS") (targetLa...

Executing: saveRecognition(NWD_device "device")

Executing: area = measureParameter(area (NWD_device) 1e-12)

Executing: perimeter1 = measureParameter(length (NWD_device coincident NTUB) 1e-06)

Executing: perimeter = calculateParameter(((area - area) + perimeter1))

Executing: nameParameter(area "area")

Executing: nameParameter(perimeter "perimeter")

Executing: nameParameter(perimeter "pj")

Executing: extractDIODE("P_NWD" P_NWD_device (net_psub "PLUS") (net_nwell "MINUS") (targ...
         2 'P_NWD' created in cell 'xort layout lab2024'.

Executing: saveRecognition(P_NWD_device "device")

Executing: area = measureParameter(area (P_NWD_device) 1e-12)

Executing: perimeter1 = measureParameter(length (P_NWD_device coincident NTUB) 1e-06)

Executing: perimeter = calculateParameter(((area - area) + perimeter1))

Executing: nameParameter(area "area")

Executing: nameParameter(perimeter "perimeter")

Executing: nameParameter(perimeter "pj")

Executing: extractDIODE("ZD2SM24" ZD2SM24_device (net_psd "A") (net_welltap "C") (net_ps...

Executing: saveRecognition(ZD2SM24_device "device")

Executing: saveProperty(ZD2SM24_device "m" "1.0")

Executing: saveProperty(ZD2SM24_device "area" 1.0)

Executing: saveProperty(ZD2SM24_device "perimeter" 1.0)

Executing: saveProperty(ZD2SM24_device "pj" 1.0)

Executing: PHDNWA850_device_ntub = geomButtOrOver(net_nwell PHDNWA850_device)

Executing: extractDevice("RCX_DUMMY" PHDNWA850_device_ntub (net_nwell "PLUS" "MINUS") (c...

Executing: PHDNWB850_device_pad_barc = geomButtOrOver(PAD_BARC PHDNWB850_device)

Executing: extractDevice("RCX_DUMMY" PHDNWB850_device_pad_barc (net_nwell "PLUS" "MINUS"...

Executing: SBD5_device_sbdcon = geomButtOrOver(sbdcon SBD5_device)

Executing: extractDevice("RCX_DUMMY" SBD5_device_sbdcon (net_nwell "PLUS" "MINUS") (cell...

Executing: geomStamp(net_ndiff_d_sub net_ndiff)

Executing: geomStamp(net_pdiff_d_ntub net_pdiff)

Executing: extractDevice("ESDPD12" ESDPD12_device (net_psub "A") (net_nwell "C") (termOr...

Executing: saveRecognition(ESDPD12_device "device")

Executing: attachParameter(w "w" ESDPD12_device)

Executing: attachParameter(l "l" ESDPD12_device)

Executing: extractDevice("ESDPD18" ESDPD18_device (net_psub "A") (net_nwell "C") (termOr...

Executing: saveRecognition(ESDPD18_device "device")

Executing: attachParameter(w "w" ESDPD18_device)

Executing: attachParameter(l "l" ESDPD18_device)

Executing: extractDevice("ESDPD26" ESDPD26_device (net_psub "A") (net_nwell "C") (termOr...

Executing: saveRecognition(ESDPD26_device "device")

Executing: attachParameter(w "w" ESDPD26_device)

Executing: attachParameter(l "l" ESDPD26_device)

Executing: extractDevice("ESDPD30" ESDPD30_device (net_psub "A") (net_nwell "C") (termOr...

Executing: saveRecognition(ESDPD30_device "device")

Executing: attachParameter(w "w" ESDPD30_device)

Executing: attachParameter(l "l" ESDPD30_device)

Executing: extractDevice("ESDFDN5" ESDFDN5_device (net_psub "A") (net_ndiff_d_sub "C") (...

Executing: saveRecognition(ESDFDN5_device "device")

Executing: attachParameter(w "w" ESDFDN5_device)

Executing: attachParameter(l "l" ESDFDN5_device)

Executing: extractDevice("ESDGCN5" ESDGCN5_device (net_psub "A") (net_ndiff_d_sub "C") (...

Executing: saveRecognition(ESDGCN5_device "device")

Executing: attachParameter(w "w" ESDGCN5_device)

Executing: attachParameter(l "l" ESDGCN5_device)

Executing: extractDevice("ESDFDP5" ESDFDP5_device (net_nwell "C") (net_pdiff_d_ntub "A")...

Executing: saveRecognition(ESDFDP5_device "device")

Executing: attachParameter(w "w" ESDFDP5_device)

Executing: attachParameter(l "l" ESDFDP5_device)

Executing: extractDevice("ESDGCP5" ESDGCP5_device (net_nwell "C") (net_pdiff_d_ntub "A")...

Executing: saveRecognition(ESDGCP5_device "device")

Executing: attachParameter(w "w" ESDGCP5_device)

Executing: attachParameter(l "l" ESDGCP5_device)

Executing: extractRES("RNWELL" RNWELL_device (net_nwell "PLUS" "MINUS") (net_psub "B") (...

Executing: saveRecognition(RNWELL_device "device")

Executing: w = measureParameter(length (RNWELL_device butting nwres_trm) 5e-07)

Executing: bends90 = measureParameter(bends_full (RNWELL_device over net_psub outside nw...

Executing: bends45 = measureParameter(bends_part (RNWELL_device over net_psub))

Executing: l = measureParameter(length (RNWELL_device outside nwres_trm) 5e-07)

Executing: leff = calculateParameter((l - (w * ((bends90 * 0.5) + (bends45 * 0.084)))))

Executing: r = calculateParameter(((leff / (w - (1.15 * 1e-06))) * 1000))

Executing: nameParameter(leff "l")

Executing: nameParameter(w "w")

Executing: nameParameter(r "r")

Executing: extractRES("RDIFFP3" RDIFFP_device (net_psd "PLUS" "MINUS") (net_nwell "B") (...

Executing: saveRecognition(RDIFFP_device "device")

Executing: w = measureParameter(length (RDIFFP_device butting pdres_trm) 5e-07)

Executing: bends90 = measureParameter(bends_full (RDIFFP_device over net_psub outside pd...

Executing: bends45 = measureParameter(bends_part (RDIFFP_device over net_psub))

Executing: l = measureParameter(length (RDIFFP_device outside pdres_trm) 5e-07)

Executing: leff = calculateParameter((l - (w * ((bends90 * 0.5) + (bends45 * 0.084)))))

Executing: r = calculateParameter(((leff / (w - (-0.1 * 1e-06))) * 140))

Executing: nameParameter(leff "l")

Executing: nameParameter(w "w")

Executing: nameParameter(r "r")

Executing: ndres_trm = geomButting(RESTRM RDIFFN_device)

Executing: extractRES("RDIFFN3" RDIFFN_device (net_nsd "PLUS" "MINUS") (net_psub "B") (t...

Executing: saveRecognition(RDIFFN_device "device")

Executing: w = measureParameter(length (RDIFFN_device butting ndres_trm) 5e-07)

Executing: bends90 = measureParameter(bends_full (RDIFFN_device over net_psub outside nd...

Executing: bends45 = measureParameter(bends_part (RDIFFN_device over net_psub))

Executing: l = measureParameter(length (RDIFFN_device outside ndres_trm) 5e-07)

Executing: leff = calculateParameter((l - (w * ((bends90 * 0.5) + (bends45 * 0.084)))))

Executing: r = calculateParameter(((leff / (w - (-0.1 * 1e-06))) * 75))

Executing: nameParameter(leff "l")

Executing: nameParameter(w "w")

Executing: nameParameter(r "r")

Executing: RPOLY2_NTUB_device = geomAndNot(geomInside(pres net_nwell) RFDEF)

Executing: RPOLY2_PSUB_device = geomAndNot(geomAndNot(pres RPOLY2_NTUB_device) RFDEF)

Executing: pres_ntub_trm = geomButting(pres_trm RPOLY2_NTUB_device)

Executing: pres_psub_trm = geomButting(pres_trm RPOLY2_PSUB_device)

Executing: extractRES("RPOLY2" RPOLY2_PSUB_device (net_poly2 "PLUS" "MINUS") (net_psub "...

Executing: saveRecognition(RPOLY2_PSUB_device "device")

Executing: w = measureParameter(length (RPOLY2_PSUB_device butting pres_psub_trm) 5e-07)

Executing: bends90 = measureParameter(bends_full (RPOLY2_PSUB_device over net_psub outsi...

Executing: bends45 = measureParameter(bends_part (RPOLY2_PSUB_device over net_psub))

Executing: l = measureParameter(length (RPOLY2_PSUB_device outside pres_psub_trm) 5e-07)

Executing: leff = calculateParameter((l - (w * ((bends90 * 0.5) + (bends45 * 0.084)))))

Executing: r = calculateParameter(((leff / (w - (0.25 * 1e-06))) * 50))

Executing: ca = measureParameter(area (RPOLY2_PSUB_device) 1.19e-16)

Executing: cp = measureParameter(length (RPOLY2_PSUB_device outside pres_psub_trm) 5.3e-17)

Executing: c = calculateParameter((ca + cp))

Executing: nameParameter(c "cap")

Executing: nameParameter(leff "l")

Executing: nameParameter(w "w")

Executing: nameParameter(r "r")

Executing: saveProperty(RPOLY2_PSUB_device "gwell" "Substrate")

Executing: extractRES("RPOLY2" RPOLY2_NTUB_device (net_poly2 "PLUS" "MINUS") (net_nwell ...

Executing: saveRecognition(RPOLY2_NTUB_device "device")

Executing: w = measureParameter(length (RPOLY2_NTUB_device butting pres_ntub_trm) 5e-07)

Executing: bends90 = measureParameter(bends_full (RPOLY2_NTUB_device over net_psub outsi...

Executing: bends45 = measureParameter(bends_part (RPOLY2_NTUB_device over net_psub))

Executing: l = measureParameter(length (RPOLY2_NTUB_device outside pres_ntub_trm) 5e-07)

Executing: leff = calculateParameter((l - (w * ((bends90 * 0.5) + (bends45 * 0.084)))))

Executing: r = calculateParameter(((leff / (w - (0.25 * 1e-06))) * 50))

Executing: ca = measureParameter(area (RPOLY2_NTUB_device) 1.19e-16)

Executing: cp = measureParameter(length (RPOLY2_NTUB_device outside pres_ntub_trm) 5.3e-17)

Executing: c = calculateParameter((ca + cp))

Executing: nameParameter(c "cap")

Executing: nameParameter(leff "l")

Executing: nameParameter(w "w")

Executing: nameParameter(r "r")

Executing: saveProperty(RPOLY2_NTUB_device "gwell" "N-Well")

Executing: RPOLY2P_NTUB_device = geomAndNot(geomInside(presp net_nwell) RFDEF)

Executing: RPOLY2P_PSUB_device = geomAndNot(geomAndNot(presp RPOLY2P_NTUB_device) RFDEF)

Executing: extractDevice("RCX_DUMMY" RPOLY2P_PSUB_device (net_poly2 "PLUS" "MINUS") (cel...

Executing: extractDevice("RCX_DUMMY" RPOLY2P_NTUB_device (net_poly2 "PLUS" "MINUS") (cel...

Executing: RPOLY2PH_NTUB_device = geomAndNot(geomInside(presph net_nwell) RFDEF)

Executing: RPOLY2PH_PSUB_device = geomAndNot(geomAndNot(presph RPOLY2PH_NTUB_device) RFDEF)

Executing: presph_ntub_trm = geomButting(presph_trm RPOLY2PH_NTUB_device)

Executing: presph_psub_trm = geomButting(presph_trm RPOLY2PH_PSUB_device)

Executing: extractRES("RPOLY2PH" RPOLY2PH_PSUB_device (net_poly2 "PLUS" "MINUS") (net_ps...

Executing: saveRecognition(RPOLY2PH_PSUB_device "device")

Executing: w = measureParameter(length (RPOLY2PH_PSUB_device butting presph_psub_trm) 5e...

Executing: bends90 = measureParameter(bends_full (RPOLY2PH_PSUB_device over net_psub out...

Executing: bends45 = measureParameter(bends_part (RPOLY2PH_PSUB_device over net_psub))

Executing: l = measureParameter(length (RPOLY2PH_PSUB_device outside presph_psub_trm) 5e...

Executing: leff = calculateParameter((l - (w * ((bends90 * 0.5) + (bends45 * 0.084)))))

Executing: r = calculateParameter(((leff / (w - (0.25 * 1e-06))) * 50))

Executing: ca = measureParameter(area (RPOLY2PH_PSUB_device) 1.19e-16)

Executing: cp = measureParameter(length (RPOLY2PH_PSUB_device outside presph_psub_trm) 5...

Executing: c = calculateParameter((ca + cp))

Executing: nameParameter(c "cap")

Executing: nameParameter(leff "l")

Executing: nameParameter(w "w")

Executing: nameParameter(r "r")

Executing: saveProperty(RPOLY2PH_PSUB_device "gwell" "Substrate")

Executing: extractRES("RPOLY2PH" RPOLY2PH_NTUB_device (net_poly2 "PLUS" "MINUS") (net_nw...

Executing: saveRecognition(RPOLY2PH_NTUB_device "device")

Executing: w = measureParameter(length (RPOLY2PH_NTUB_device butting presph_ntub_trm) 5e...

Executing: bends90 = measureParameter(bends_full (RPOLY2PH_NTUB_device over net_psub out...

Executing: bends45 = measureParameter(bends_part (RPOLY2PH_NTUB_device over net_psub))

Executing: l = measureParameter(length (RPOLY2PH_NTUB_device outside presph_ntub_trm) 5e...

Executing: leff = calculateParameter((l - (w * ((bends90 * 0.5) + (bends45 * 0.084)))))

Executing: r = calculateParameter(((leff / (w - (0.25 * 1e-06))) * 50))

Executing: ca = measureParameter(area (RPOLY2PH_NTUB_device) 1.19e-16)

Executing: cp = measureParameter(length (RPOLY2PH_NTUB_device outside presph_ntub_trm) 5...

Executing: c = calculateParameter((ca + cp))

Executing: nameParameter(c "cap")

Executing: nameParameter(leff "l")

Executing: nameParameter(w "w")

Executing: nameParameter(r "r")

Executing: saveProperty(RPOLY2PH_NTUB_device "gwell" "N-Well")

Executing: RPOLYH_NTUB_device = geomAndNot(geomInside(presh net_nwell) RFDEF)

Executing: RPOLYH_PSUB_device = geomAndNot(geomAndNot(presh RPOLYH_NTUB_device) RFDEF)

Executing: presh_ntub_trm = geomButting(presh_trm RPOLYH_NTUB_device)

Executing: presh_psub_trm = geomButting(presh_trm RPOLYH_PSUB_device)

Executing: extractRES("RPOLYH" RPOLYH_PSUB_device (net_poly2 "PLUS" "MINUS") (net_psub "...

Executing: saveRecognition(RPOLYH_PSUB_device "device")

Executing: w = measureParameter(length (RPOLYH_PSUB_device butting presh_psub_trm) 5e-07)

Executing: bends90 = measureParameter(bends_full (RPOLYH_PSUB_device over net_psub outsi...

Executing: bends45 = measureParameter(bends_part (RPOLYH_PSUB_device over net_psub))

Executing: l = measureParameter(length (RPOLYH_PSUB_device outside presh_psub_trm) 5e-07)

Executing: leff = calculateParameter((l - (w * ((bends90 * 0.5) + (bends45 * 0.084)))))

Executing: r = calculateParameter(((leff / (w - (0.2 * 1e-06))) * 1200))

Executing: ca = measureParameter(area (RPOLYH_PSUB_device) 1.19e-16)

Executing: cp = measureParameter(length (RPOLYH_PSUB_device outside presh_psub_trm) 5.3e...

Executing: c = calculateParameter((ca + cp))

Executing: nameParameter(c "cap")

Executing: nameParameter(leff "l")

Executing: nameParameter(w "w")

Executing: nameParameter(r "r")

Executing: saveProperty(RPOLYH_PSUB_device "gwell" "Substrate")

Executing: extractRES("RPOLYH" RPOLYH_NTUB_device (net_poly2 "PLUS" "MINUS") (net_nwell ...

Executing: saveRecognition(RPOLYH_NTUB_device "device")

Executing: w = measureParameter(length (RPOLYH_NTUB_device butting presh_ntub_trm) 5e-07)

Executing: bends90 = measureParameter(bends_full (RPOLYH_NTUB_device over net_psub outsi...

Executing: bends45 = measureParameter(bends_part (RPOLYH_NTUB_device over net_psub))

Executing: l = measureParameter(length (RPOLYH_NTUB_device outside presh_ntub_trm) 5e-07)

Executing: leff = calculateParameter((l - (w * ((bends90 * 0.5) + (bends45 * 0.084)))))

Executing: r = calculateParameter(((leff / (w - (0.2 * 1e-06))) * 1200))

Executing: ca = measureParameter(area (RPOLYH_NTUB_device) 1.19e-16)

Executing: cp = measureParameter(length (RPOLYH_NTUB_device outside presh_ntub_trm) 5.3e...

Executing: c = calculateParameter((ca + cp))

Executing: nameParameter(c "cap")

Executing: nameParameter(leff "l")

Executing: nameParameter(w "w")

Executing: nameParameter(r "r")

Executing: saveProperty(RPOLYH_NTUB_device "gwell" "N-Well")

Executing: RPOLYZ_NTUB_device = geomAndNot(geomInside(presz net_nwell) RFDEF)

Executing: RPOLYZ_PSUB_device = geomAndNot(geomAndNot(presz RPOLYZ_NTUB_device) RFDEF)

Executing: extractDevice("RCX_DUMMY" RPOLYZ_PSUB_device (net_poly2 "PLUS" "MINUS") (cell...

Executing: extractDevice("RCX_DUMMY" RPOLYZ_NTUB_device (net_poly2 "PLUS" "MINUS") (cell...

Executing: RPOLY1_NTUB_device = geomAndNot(geomInside(pres1 net_nwell) RFDEF)

Executing: RPOLY1_PSUB_device = geomAndNot(geomAndNot(pres1 RPOLY1_NTUB_device) RFDEF)

Executing: pres1_ntub_trm = geomButting(pres1_trm RPOLY1_NTUB_device)

Executing: pres1_psub_trm = geomButting(pres1_trm RPOLY1_PSUB_device)

Executing: extractRES("RPOLY1" RPOLY1_PSUB_device (net_poly1 "PLUS" "MINUS") (net_psub "...

Executing: saveRecognition(RPOLY1_PSUB_device "device")

Executing: w = measureParameter(length (RPOLY1_PSUB_device butting pres1_psub_trm) 5e-07)

Executing: bends90 = measureParameter(bends_full (RPOLY1_PSUB_device over net_psub outsi...

Executing: bends45 = measureParameter(bends_part (RPOLY1_PSUB_device over net_psub))

Executing: l = measureParameter(length (RPOLY1_PSUB_device outside pres1_psub_trm) 5e-07)

Executing: leff = calculateParameter((l - (w * ((bends90 * 0.5) + (bends45 * 0.084)))))

Executing: r = calculateParameter(((leff / (w - (0.05 * 1e-06))) * 8))

Executing: ca = measureParameter(area (RPOLY1_PSUB_device) 1.19e-16)

Executing: cp = measureParameter(length (RPOLY1_PSUB_device outside pres1_psub_trm) 5.3e...

Executing: c = calculateParameter((ca + cp))

Executing: nameParameter(c "cap")

Executing: nameParameter(leff "l")

Executing: nameParameter(w "w")

Executing: nameParameter(r "r")

Executing: saveProperty(RPOLY1_PSUB_device "gwell" "Substrate")

Executing: extractRES("RPOLY1" RPOLY1_NTUB_device (net_poly1 "PLUS" "MINUS") (net_nwell ...

Executing: saveRecognition(RPOLY1_NTUB_device "device")

Executing: w = measureParameter(length (RPOLY1_NTUB_device butting pres1_ntub_trm) 5e-07)

Executing: bends90 = measureParameter(bends_full (RPOLY1_NTUB_device over net_psub outsi...

Executing: bends45 = measureParameter(bends_part (RPOLY1_NTUB_device over net_psub))

Executing: l = measureParameter(length (RPOLY1_NTUB_device outside pres1_ntub_trm) 5e-07)

Executing: leff = calculateParameter((l - (w * ((bends90 * 0.5) + (bends45 * 0.084)))))

Executing: r = calculateParameter(((leff / (w - (0.05 * 1e-06))) * 8))

Executing: ca = measureParameter(area (RPOLY1_NTUB_device) 1.19e-16)

Executing: cp = measureParameter(length (RPOLY1_NTUB_device outside pres1_ntub_trm) 5.3e...

Executing: c = calculateParameter((ca + cp))

Executing: nameParameter(c "cap")

Executing: nameParameter(leff "l")

Executing: nameParameter(w "w")

Executing: nameParameter(r "r")

Executing: saveProperty(RPOLY1_NTUB_device "gwell" "N-Well")

Executing: extractRES("PFUSE" PFUSE_device (net_poly1 "PLUS" "MINUS") (cellView "pfuse a...

Executing: saveRecognition(PFUSE_device "device")

Executing: w = measureParameter(length (PFUSE_device butting net_poly1) 5e-07)

Executing: l = measureParameter(length (PFUSE_device outside net_poly1) 5e-07)

Executing: r = calculateParameter(((l / (w - (0.05 * 1e-06))) * 8))

Executing: nameParameter(r "r")

Executing: nameParameter(l "l")

Executing: nameParameter(w "w")

Executing: geomStamp(rmet1_trm net_met1)

Executing: extractRES("SHORT" RMET1_device (rmet1_trm "PLUS" "MINUS") (cellView "short a...

Executing: w = measureParameter(length (RMET1_device butting rmet1_trm) 5e-07)

Executing: l = measureParameter(length (RMET1_device outside rmet1_trm) 5e-07)

Executing: r = calculateParameter(((l / (w - (0 * 1e-06))) * 0.07))

Executing: nameParameter(r "r")

Executing: geomStamp(rmet2_trm net_met2)

Executing: extractRES("SHORT" RMET2_device (rmet2_trm "PLUS" "MINUS") (cellView "short a...

Executing: w = measureParameter(length (RMET2_device butting rmet2_trm) 5e-07)

Executing: l = measureParameter(length (RMET2_device outside rmet2_trm) 5e-07)

Executing: r = calculateParameter(((l / (w - (0.1 * 1e-06))) * 0.07))

Executing: nameParameter(r "r")

Executing: geomStamp(rmet3_trm net_met3)

Executing: extractRES("SHORT" RMET3_device (rmet3_trm "PLUS" "MINUS") (cellView "short a...

Executing: w = measureParameter(length (RMET3_device butting rmet3_trm) 5e-07)

Executing: l = measureParameter(length (RMET3_device outside rmet3_trm) 5e-07)

Executing: r = calculateParameter(((l / (w - (0.1 * 1e-06))) * 0.07))

Executing: nameParameter(r "r")

Executing: geomStamp(rmet4_trm net_met4)

Executing: extractRES("SHORT" RMET4_device (rmet4_trm "PLUS" "MINUS") (cellView "short a...

Executing: w = measureParameter(length (RMET4_device butting rmet4_trm) 5e-07)

Executing: l = measureParameter(length (RMET4_device outside rmet4_trm) 5e-07)

Executing: r = calculateParameter(((l / (w - (0 * 1e-06))) * 0.04))

Executing: nameParameter(r "r")

Executing: extractRES("SHORT" RVIA1_device (net_met2 "PLUS") (net_met1 "MINUS") (cellVie...

Executing: count_vias = measureParameter(figCount (RVIA1_device enclosing VIA1))

Executing: vias = calculateParameter(count_vias)

Executing: r = calculateParameter((1.2 / count_vias))

Executing: nameParameter(vias "via1_count")

Executing: nameParameter(r "r")

Executing: extractRES("SHORT" RVIA2_device (net_met3 "PLUS") (net_met2 "MINUS") (cellVie...

Executing: count_vias = measureParameter(figCount (RVIA2_device enclosing VIA2))

Executing: vias = calculateParameter(count_vias)

Executing: r = calculateParameter((1.2 / count_vias))

Executing: nameParameter(vias "via2_count")

Executing: nameParameter(r "r")

Executing: extractRES("SHORT" RVIA3_device (net_met4 "PLUS") (net_met3 "MINUS") (cellVie...

Executing: count_vias = measureParameter(figCount (RVIA3_device enclosing VIA3))

Executing: vias = calculateParameter(count_vias)

Executing: r = calculateParameter((1.2 / count_vias))

Executing: nameParameter(vias "via3_count")

Executing: nameParameter(r "r")

Executing: geomStamp(pnplat2_c net_psd)

Executing: geomStamp(pnplat2_e net_psd)

Executing: extractDevice("LAT2" LAT2_device (net_poly1 "G") (pnplat2_e "E") (pnplat2_c "...

Executing: saveRecognition(LAT2_device "device")

Executing: saveProperty(LAT2_device "m" "1.0")

Executing: saveProperty(LAT2_device "area" 1)

Executing: geomStamp(pnpvert10_e net_psd)

Executing: pnpvert10_c = geomCat(net_psub)

Executing: geomStamp(pnpvert10_c net_psub)

Executing: extractBJT("PNPVERT10" VERT10_device (pnpvert10_c "C") (net_welltap "B") (pnp...

Executing: saveRecognition(VERT10_device "device")

Executing: saveProperty(VERT10_device "m" "1.0")

Executing: saveProperty(VERT10_device "area" 1.0)

Executing: saveProperty(VERT10_device "ea" 1.0)

Executing: CPOLY_NTUB_device = geomAvoiding(geomAndNot(geomAnd(cpoly net_nwell) RFDEF) C...

Executing: CPOLY_PSUB_device = geomAvoiding(geomAndNot(geomAndNot(cpoly net_nwell) RFDEF...

Executing: extractCAP("CPOLYA" CPOLY_PSUB_device (net_poly2 "PLUS") (net_poly1 "MINUS") ...

Executing: saveRecognition(CPOLY_PSUB_device "device")

Executing: a = measureParameter(area (CPOLY_PSUB_device) 1e-12)

Executing: p = measureParameter(perimeter (CPOLY_PSUB_device) 1e-06)

Executing: c = calculateParameter(((a * 8.6e-16 * 1e+12) + (p * 8.6e-17 * 1000000.0)))

Executing: nameParameter(c "c")

Executing: nameParameter(a "area")

Executing: nameParameter(p "perimeter")

Executing: nameParameter(a "a")

Executing: nameParameter(p "p")

Executing: saveProperty(CPOLY_PSUB_device "gwell" "Substrate")

Executing: extractCAP("CPOLYA" CPOLY_NTUB_device (net_poly2 "PLUS") (net_poly1 "MINUS") ...

Executing: saveRecognition(CPOLY_NTUB_device "device")

Executing: a = measureParameter(area (CPOLY_NTUB_device) 1e-12)

Executing: p = measureParameter(perimeter (CPOLY_NTUB_device) 1e-06)

Executing: c = calculateParameter(((a * 8.6e-16 * 1e+12) + (p * 8.6e-17 * 1000000.0)))

Executing: nameParameter(c "c")

Executing: nameParameter(a "area")

Executing: nameParameter(p "perimeter")

Executing: nameParameter(a "a")

Executing: nameParameter(p "p")

Executing: saveProperty(CPOLY_NTUB_device "gwell" "N-Well")

Executing: cvar_ele = geomOr(cvar)

Executing: cvar_ndiff = geomEnclose(ndiff_1 cvar_ele)

Executing: cvar_ndiff_gap = drc(cvar_ndiff (sep < 1.8) opposite parallel)

Executing: cvar_ndiff_closed = geomOr(cvar_ndiff cvar_ndiff_gap)

Executing: net1_cvar = geomButtOrOver(net_poly1 cvar_ele)

Executing: cvar_ndiff_cross1 = geomGetEdge(cvar_ndiff_closed inside net1_cvar)

Executing: cvar_ndiff_cross = geomSize(cvar_ndiff_cross1 -0.1 edges)

Executing: CVAR_device = geomOr(cvar_ndiff_closed)

Executing: extractDevice("CVAR" CVAR_device (net_poly1 "G") (net_welltap "B") (net_psub ...

Executing: saveRecognition(CVAR_device "device")

Executing: attachParameter(lc "l" CVAR_device)

Executing: attachParameter(wc "w" CVAR_device)

Executing: count_elements = measureParameter(figCount (CVAR_device enclosing cvar_ele))

Executing: cols = measureParameter(figCount (CVAR_device enclosing cvar_ndiff_cross) 0.5)

Executing: rows = calculateParameter((count_elements / cols))

Executing: nameParameter(rows "row")

Executing: nameParameter(cols "col")

Executing: CMIM_device_no_cpmim = geomAvoiding(CMIM_device CPMIM_device)

Executing: extractDevice("RCX_DUMMY" CMIM_device_no_cpmim (net_metcap "PLUS" "MINUS") (c...

Executing: extractDevice("RCX_DUMMY" CPMIM_device (net_metcap "PLUS" "MINUS") (cellView ...

Executing: PROBE_device = geomCat(PROBE)

Executing: extractDevice("probepad" PROBE_device (net_met4 "PAD") (cellView "probepad au...

Executing: saveRecognition(PROBE_device "device")

Executing: nmosrf_nsd = geomButtOrOver(net_nsd NMOSRF_device)

Executing: extractDevice("NMOSRF" NMOSRF_device (net_poly1 "G") (net_nsd "S" "D") (net_p...

Executing: saveRecognition(NMOSRF_device "device")

Executing: attachParameter(lc "l" NMOSRF_device)

Executing: attachParameter(wc "w" NMOSRF_device)

Executing: attachParameter(count_elements "ng" NMOSRF_device)

Executing: attachParameter(as "as" NMOSRF_device)

Executing: attachParameter(as "ad" NMOSRF_device)

Executing: attachParameter(ps "ps" NMOSRF_device)

Executing: attachParameter(ps "pd" NMOSRF_device)

Executing: pmosrf_psd = geomButtOrOver(net_psd PMOSRF_device)

Executing: extractDevice("PMOSRF" PMOSRF_device (net_poly1 "G") (net_psd "S" "D") (net_n...

Executing: saveRecognition(PMOSRF_device "device")

Executing: attachParameter(lc "l" PMOSRF_device)

Executing: attachParameter(wc "w" PMOSRF_device)

Executing: attachParameter(count_elements "ng" PMOSRF_device)

Executing: attachParameter(as "as" PMOSRF_device)

Executing: attachParameter(as "ad" PMOSRF_device)

Executing: attachParameter(ps "ps" PMOSRF_device)

Executing: attachParameter(ps "pd" PMOSRF_device)

Executing: cpolyrf_capbod = geomInside(cpoly CPOLYRF_device)

Executing: extractCAP("CPOLYRF" CPOLYRF_device (net_poly2 "PLUS") (net_poly1 "MINUS") (n...

Executing: saveRecognition(CPOLYRF_device "device")

Executing: attachParameter(w "w" CPOLYRF_device)

Executing: attachParameter(l "l" CPOLYRF_device)

Executing: attachParameter(c "c" CPOLYRF_device)

Executing: attachParameter(a "area" CPOLYRF_device)

Executing: attachParameter(p "perimeter" CPOLYRF_device)

Executing: attachParameter(a "a" CPOLYRF_device)

Executing: attachParameter(p "p" CPOLYRF_device)

Executing: saveProperty(CPOLYRF_device "gwell" "N-Well")

Executing: rpoly2rf_resbod = geomInside(pres RPOLY2RF_device)

Executing: pres_ntub_trm = geomButting(pres_trm rpoly2rf_resbod)

Executing: net_pres_trm = geomCat(pres_trm)

Executing: geomStamp(net_pres_trm net_poly2)

Executing: extractRES("RPOLY2RF" RPOLY2RF_device (net_pres_trm "PLUS" "MINUS") (net_nwel...

Executing: saveRecognition(RPOLY2RF_device "device")

Executing: attachParameter(c "cap" RPOLY2RF_device)

Executing: attachParameter(leff "l" RPOLY2RF_device)

Executing: attachParameter(w "w" RPOLY2RF_device)

Executing: attachParameter(r "r" RPOLY2RF_device)

Executing: attachParameter(bends "Bends" RPOLY2RF_device)

Executing: saveProperty(RPOLY2RF_device "gwell" "N-Well")

Executing: rpolyhrf_resbod = geomInside(presh RPOLYHRF_device)

Executing: preshrf_ntub_trm = geomButting(presh_trm rpolyhrf_resbod)

Executing: net_presh_trm = geomCat(presh_trm)

Executing: geomStamp(net_presh_trm net_poly2)

Executing: extractRES("RPOLYHRF" RPOLYHRF_device (net_presh_trm "PLUS" "MINUS") (net_nwe...

Executing: saveRecognition(RPOLYHRF_device "device")

Executing: attachParameter(c "cap" RPOLYHRF_device)

Executing: attachParameter(leff "l" RPOLYHRF_device)

Executing: attachParameter(w "w" RPOLYHRF_device)

Executing: attachParameter(r "r" RPOLYHRF_device)

Executing: saveProperty(RPOLYHRF_device "gwell" "N-Well")

Executing: extractDevice("SP014S300D" SP014S300D_device (spiral_term11 "P1") (spiral_ter...

Executing: saveRecognition(SP014S300D_device "device")

Executing: extractDevice("SP020S180D" SP020S180D_device (spiral_term11 "P1") (spiral_ter...

Executing: saveRecognition(SP020S180D_device "device")

Executing: extractDevice("SP026S200D" SP026S200D_device (spiral_term11 "P1") (spiral_ter...

Executing: saveRecognition(SP026S200D_device "device")

Executing: extractDevice("SP037S180D" SP037S180D_device (spiral_term11 "P1") (spiral_ter...

Executing: saveRecognition(SP037S180D_device "device")

Executing: extractDevice("SP047S180D" SP047S180D_device (spiral_term11 "P1") (spiral_ter...

Executing: saveRecognition(SP047S180D_device "device")

Executing: extractDevice("SP050S155D" SP050S155D_device (spiral_term11 "P1") (spiral_ter...

Executing: saveRecognition(SP050S155D_device "device")

Executing: extractDevice("SP090S155D" SP090S155D_device (spiral_term11 "P1") (spiral_ter...

Executing: saveRecognition(SP090S155D_device "device")

Finished running rules. Task processor time in main process:
cpu: 0.23  elap: 0  pf: 0  in: 0  out: 1176  virt: 143M  phys: 753M

No output post-processing: This is not a DRC run

Finished building the persistent database.
cpu: 0.01  elap: 0  pf: 0  in: 0  out: 6472  virt: 147M  phys: 769M


*****  aveng terminated normally  *****


Finished /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/aveng

Starting /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/avrpt /home/oj23092/VLSI_Design_Lab/ASSURA_LVS/xort/xort.rsf -exec1
Loading all available p-cell functions
AMS_DB set to cds

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets
@(#)$CDS: avrpt_64 version av4.1:Production:dfII6.1.8-64b:IC6.1.8-64b.500.25 09/19/2022 00:36 (sjfhw885) $
sub-version 4.1_USR6_EHF13, integ signature 2022-09-19-0008

run on it075724.wks.bris.ac.uk from /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618/tools.lnx86/assura/bin/64bit/avrpt on Mon Apr 22 19:00:12 2024


   Creating Error Database 'xort'...

   Reading VDB ...
2024/04/22 19:00:13 WARNING This OS does not appear to be a Cadence supported Linux configuration.
2024/04/22 19:00:13 For more info, please run CheckSysConf in <cdsRoot/tools.lnx86/bin/checkSysConf <productId>
--------------------------------------------------------------------------------
Rule      Message                                    FlatCount     RealCount
--------------------------------------------------------------------------------
(    1)  dataAuditErrors                                     0            0
(    2)  DEVICE Error: Illegal nmosh device                  0            0
(    3)  Process Modules : PHDNWA850 not availabl            0            0
(    4)  Process Modules : PHDNWB850 not availabl            0            0
(    5)  Version od SBD5 obsolte or missing                  0            0
(    6)  Process Modules : SBD5 not available for            0            0
(    7)  ERC Warning : Name of Spiral not identif            0            0
(    8)  ERC Warning : INDDEF does not define a c            0            0
(    9)  ERC Warning : illegal layer under spiral            0            0
(   10)  ERC Warning : Each INDDEF shape must be             0            0
(   11)  ERC Warning : multiple text on INDEF                0            0
(   12)  Error: MET1 resistors (shorts) must be r            0            0
(   13)  Error: Number of MET1 resistor terminals            0            0
(   14)  Error: MET2 resistors (shorts) must be r            0            0
(   15)  Error: Number of MET2 resistor terminals            0            0
(   16)  Error: MET3 resistors (shorts) must be r            0            0
(   17)  Error: Number of MET3 resistor terminals            0            0
(   18)  Error: MET4 resistors (shorts) must be r            0            0
(   19)  Error: Number of MET4 resistor terminals            0            0
(   20)  RVIA1 Definition layer: does not open al            0            0
(   21)  RVIA1 Definition layer: truncates via1,             0            0
(   22)  RVIA1 Definition layer: does not define             0            0
(   23)  RVIA1 Definition layer: over METRES                 0            0
(   24)  RVIA2 Definition layer: does not open al            0            0
(   25)  RVIA2 Definition layer: truncates via2,             0            0
(   26)  RVIA2 Definition layer : does not define            0            0
(   27)  RVIA2 Definition layer: over METRES                 0            0
(   28)  RVIA3 Definition layer: does not open al            0            0
(   29)  RVIA3 Definition layer: truncates via3,             0            0
(   30)  RVIA3 Definition layer : does not define            0            0
(   31)  RVIA3 Definition layer: over METRES                 0            0
(   32)  ERROR : POLY1 pin outside poly1                     0            0
(   33)  ERROR : MET1 pin outside met1                       0            0
(   34)  ERROR : MET2 pin outside met2                       0            0
(   35)  ERROR : MET3 pin outside met3                       0            0
(   36)  ERROR : MET4 pin outside met4                       0            0
(   37)  ERROR : PAD pin outside pad metal                   0            0
(   38)  malformed device NMOSH_device                       0            0
(   39)  malformed device NMOSMH_device                      0            0
(   40)  malformed device NMOS30M_device                     0            0
(   41)  malformed device NMOS18T_device                     0            0
(   42)  malformed device ESDPD12_device                     0            0
(   43)  malformed device ESDPD18_device                     0            0
(   44)  malformed device ESDPD26_device                     0            0
(   45)  malformed device ESDPD30_device                     0            0
(   46)  malformed device ESDFDN5_device                     0            0
(   47)  malformed device ESDGCN5_device                     0            0
(   48)  malformed device ESDFDP5_device                     0            0
(   49)  malformed device ESDGCP5_device                     0            0
(   50)  malformed device RNWELL_device                      0            0
(   51)  malformed device RDIFFP_device                      0            0
(   52)  malformed device RPOLY2_PSUB_device                 0            0
(   53)  malformed device RPOLY2_NTUB_device                 0            0
(   54)  malformed device RPOLY2PH_PSUB_device               0            0
(   55)  malformed device RPOLY2PH_NTUB_device               0            0
(   56)  malformed device RPOLYH_PSUB_device                 0            0
(   57)  malformed device RPOLYH_NTUB_device                 0            0
(   58)  malformed device RPOLY1_PSUB_device                 0            0
(   59)  malformed device RPOLY1_NTUB_device                 0            0
(   60)  malformed device PFUSE_device                       0            0
(   61)  malformed device LAT2_device                        0            0
(   62)  malformed device VERT10_device                      0            0
(   63)  malformed device CPOLY_PSUB_device                  0            0
(   64)  malformed device CPOLY_NTUB_device                  0            0
(   65)  malformed device CVAR_device                        0            0
(   66)  malformed device PROBE_device                       0            0
(   67)  malformed device NMOSRF_device                      0            0
(   68)  malformed device PMOSRF_device                      0            0
(   69)  malformed device CPOLYRF_device                     0            0
(   70)  malformed device RPOLY2RF_device                    0            0
(   71)  malformed device RPOLYHRF_device                    0            0
(   72)  malformed device SP014S300D_device                  0            0
(   73)  malformed device SP020S180D_device                  0            0
(   74)  malformed device SP026S200D_device                  0            0
(   75)  malformed device SP037S180D_device                  0            0
(   76)  malformed device SP047S180D_device                  0            0
(   77)  malformed device SP050S155D_device                  0            0
(   78)  malformed device SP090S155D_device                  0            0
(   79)  unstable device for SP090S155D_device_De            0            0
(   81)  unstable device for SP050S155D_device_De            0            0
(   83)  unstable device for SP047S180D_device_De            0            0
(   85)  unstable device for SP037S180D_device_De            0            0
(   87)  unstable device for SP026S200D_device_De            0            0
(   89)  unstable device for SP020S180D_device_De            0            0
(   91)  unstable device for SP014S300D_device_De            0            0
(   93)  unstable device for RPOLYHRF_device_RES_            0            0
(   95)  unstable device for RPOLY2RF_device_RES_            0            0
(   97)  unstable device for CPOLYRF_device_CAP_8            0            0
(   99)  unstable device for PMOSRF_device_Device            0            0
(  101)  unstable device for NMOSRF_device_Device            0            0
(  103)  unstable device for PROBE_device_Device_            0            0
(  105)  unstable device for CPMIM_device_Device_            0            0
(  107)  unstable device for CMIM_device_no_cpmim            0            0
(  109)  unstable device for CVAR_device_Device_8            0            0
(  111)  unstable device for CPOLY_NTUB_device_CA            0            0
(  113)  unstable device for CPOLY_PSUB_device_CA            0            0
(  115)  unstable device for VERT10_device_BJT_80            0            0
(  117)  unstable device for LAT2_device_Device_7            0            0
(  119)  unstable device for RVIA3_device_RES_78             0            0
(  121)  unstable device for RVIA2_device_RES_77             0            0
(  123)  unstable device for RVIA1_device_RES_76             0            0
(  125)  unstable device for RMET4_device_RES_75             0            0
(  127)  unstable device for RMET3_device_RES_74             0            0
(  129)  unstable device for RMET2_device_RES_73             0            0
(  131)  unstable device for RMET1_device_RES_72             0            0
(  133)  unstable device for PFUSE_device_RES_71             0            0
(  135)  unstable device for RPOLY1_NTUB_device_R            0            0
(  137)  unstable device for RPOLY1_PSUB_device_R            0            0
(  139)  unstable device for RPOLYZ_NTUB_device_D            0            0
(  141)  unstable device for RPOLYZ_PSUB_device_D            0            0
(  143)  unstable device for RPOLYH_NTUB_device_R            0            0
(  145)  unstable device for RPOLYH_PSUB_device_R            0            0
(  147)  unstable device for RPOLY2PH_NTUB_device            0            0
(  149)  unstable device for RPOLY2PH_PSUB_device            0            0
(  151)  unstable device for RPOLY2P_NTUB_device_            0            0
(  153)  unstable device for RPOLY2P_PSUB_device_            0            0
(  155)  unstable device for RPOLY2_NTUB_device_R            0            0
(  157)  unstable device for RPOLY2_PSUB_device_R            0            0
(  159)  unstable device for RDIFFN_device_RES_58            0            0
(  161)  unstable device for RDIFFP_device_RES_57            0            0
(  163)  unstable device for RNWELL_device_RES_56            0            0
(  165)  unstable device for ESDGCP5_device_Devic            0            0
(  167)  unstable device for ESDFDP5_device_Devic            0            0
(  169)  unstable device for ESDGCN5_device_Devic            0            0
(  171)  unstable device for ESDFDN5_device_Devic            0            0
(  173)  unstable device for ESDPD30_device_Devic            0            0
(  175)  unstable device for ESDPD26_device_Devic            0            0
(  177)  unstable device for ESDPD18_device_Devic            0            0
(  179)  unstable device for ESDPD12_device_Devic            0            0
(  181)  unstable device for SBD5_device_sbdcon_D            0            0
(  183)  unstable device for PHDNWB850_device_pad            0            0
(  185)  unstable device for PHDNWA850_device_ntu            0            0
(  187)  unstable device for ZD2SM24_device_DIODE            0            0
(  189)  unstable device for P_NWD_device_DIODE_4            0            0
(  191)  unstable device for NWD_device_DIODE_42             0            0
(  193)  unstable device for P_PD_device_DIODE_41            0            0
(  195)  unstable device for PD_device_DIODE_40              0            0
(  197)  unstable device for P_ND_device_DIODE_39            0            0
(  199)  unstable device for ND_device_DIODE_38              0            0
(  201)  unstable device for PMOS30M_device_Devic            0            0
(  203)  unstable device for PMOSD30M_device_Devi            0            0
(  205)  unstable device for NMOS18T_device_Devic            0            0
(  207)  unstable device for NMOS30M_device_Devic            0            0
(  209)  unstable device for NMOSMHL_device_Devic            0            0
(  211)  unstable device for NMOSHL_device_Device            0            0
(  213)  unstable device for NMOSMH_device_Device            0            0
(  215)  unstable device for NMOSH_device_Device_            0            0
(  217)  unstable device for PMOSMW_2N_device_Dev            0            0
(  219)  unstable device for PMOSMW_3N_device_Dev            0            0
(  221)  unstable device for PMOSMW_4N_device_Dev            0            0
(  223)  unstable device for PMOSW_2N_device_Devi            0            0
(  225)  unstable device for PMOSW_3N_device_Devi            0            0
(  227)  unstable device for PMOSW_4N_device_Devi            0            0
(  229)  unstable device for NMOSMW_2N_device_Dev            0            0
(  231)  unstable device for NMOSMW_3N_device_Dev            0            0
(  233)  unstable device for NMOSMW_4N_device_Dev            0            0
(  235)  unstable device for NMOSW_2N_device_Devi            0            0
(  237)  unstable device for NMOSW_3N_device_Devi            0            0
(  239)  unstable device for NMOSW_4N_device_Devi            0            0
(  241)  unstable device for PMOSML_WAFFLE_device            0            0
(  243)  unstable device for DPMOSM_device_Device            0            0
(  245)  unstable device for PMOSML_device_Device            0            0
(  247)  unstable device for PMOSL_WAFFLE_device_            0            0
(  249)  unstable device for PMOSL_device_Device_            0            0
(  251)  unstable device for NMOSML_WAFFLE_device            0            0
(  253)  unstable device for NMOSML_device_Device            0            0
(  255)  unstable device for NMOSL_WAFFLE_device_            0            0
(  257)  unstable device for NMOSL_device_Device_            0            0
(  259)  unstable device for PMOSM_WAFFLE_device_            0            0
(  261)  unstable device for PMOSM_device_MOS_7              0            0
(  263)  unstable device for PMOS_WAFFLE_device_D            0            0
(  265)  unstable device for PMOS_device_MOS_5               0            0
(  267)  unstable device for NMOSM_WAFFLE_device_            0            0
(  269)  unstable device for NMOSM_device_MOS_3              0            0
(  271)  unstable device for NMOS_WAFFLE_device_D            0            0
(  273)  unstable device for NMOS_device_MOS_1               0            0
--------------------------------------------------------------------------------
Total  errors:                                               0            0
--------------------------------------------------------------------------------

   Finished creating Error Database ...

   Writing Report into /home/oj23092/VLSI_Design_Lab/ASSURA_LVS/xort/xort.err ...

avrpt cpu sec:    0.04  elapsed:     1  virtual:    93M

Finished /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/avrpt

Starting /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/avcallproc /home/oj23092/VLSI_Design_Lab/ASSURA_LVS/xort/xort.rsf -exec1 -LVS -cdslib /home/oj23092/VLSI_Design_Lab/cds.lib
Loading all available p-cell functions
AMS_DB set to cds

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets

Finished /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/avcallproc

Starting /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/avnx /home/oj23092/VLSI_Design_Lab/ASSURA_LVS/xort/xort.rsf -exec1 -LVS -cdslib /home/oj23092/VLSI_Design_Lab/cds.lib
Virtuoso Framework License (111) was checked out successfully. Total checkout time was 0.07s.
Loading all available p-cell functions
AMS_DB set to cds

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets
Checking out license for Assura_LVS
Checking out license for Phys_Ver_Sys_LVS_XL
*WARNING* Failed to obtain license for Assura_LVS
@(#)$CDS: avnx_64 version av4.1:Production:dfII6.1.8-64b:IC6.1.8-64b.500.25 09/19/2022 00:36 (sjfhw885) $
sub-version 4.1_USR6_EHF13, integ signature 2022-09-19-0008

run on it075724.wks.bris.ac.uk from /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618/tools.lnx86/assura/bin/64bit/avnx on Mon Apr 22 19:00:13 2024

avnx started...
2024/04/22 19:00:14 WARNING This OS does not appear to be a Cadence supported Linux configuration.
2024/04/22 19:00:14 For more info, please run CheckSysConf in <cdsRoot/tools.lnx86/bin/checkSysConf <productId>
cpu: 0.08  elap: 1  pf: 0  in: 0  out: 16  virt: 580M  phys: 1020M

Run time =  1.00 seconds
CPU time =  0.11 seconds

                  End of Summary Report

************************************************************************
cpu: 0.01  elap: 0  pf: 0  in: 0  out: 13016  virt: 511M  phys: 1020M
***** avnx terminated normally ***** 


Finished /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/avnx

Starting /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/nvn /home/oj23092/VLSI_Design_Lab/ASSURA_LVS/xort/xort.rsf -postExtract -exec1 -cdslib /home/oj23092/VLSI_Design_Lab/cds.lib
Checking out license for Assura_LVS
Checking out license for Phys_Ver_Sys_LVS_XL
@(#)$CDS: nvn_64 version av4.1:Production:dfII6.1.8-64b:IC6.1.8-64b.500.25 09/19/2022 00:41 (sjfhw885) $
sub-version 4.1_USR6_EHF13, integ signature 2022-09-19-0008
run on it075724.wks.bris.ac.uk at Mon Apr 22 19:00:14 2024
Loading all available p-cell functions
AMS_DB set to cds
Reading schematic network
Reading layout network
 inputting network ASSURA_LVS/xort/xort.ldb
Preprocessing schematic network phase 1
*WARNING* deleteCellPin - Unable to find cell 'PMOSD30M'
Preprocessing layout network phase 1
 WARNING (AVLVSNN-10050) : mosDevice - cell 'PMOSML4' not found.
 WARNING (AVLVSNN-10050) : mosDevice - cell 'PMOSM4' not found.
 WARNING (AVLVSNN-10050) : mosDevice - cell 'PMOSL4' not found.
 WARNING (AVLVSNN-10050) : mosDevice - cell 'PMOS4' not found.
 WARNING (AVLVSNN-10050) : mosDevice - cell 'NMOSML4' not found.
 WARNING (AVLVSNN-10050) : mosDevice - cell 'NMOSM4' not found.
 WARNING (AVLVSNN-10050) : mosDevice - cell 'NMOSL4' not found.
 WARNING (AVLVSNN-10050) : mosDevice - cell 'NMOS4' not found.
 WARNING (AVLVSNN-10050) : lddDevice - cell 'PMOSD30M' not found.
 WARNING (AVLVSNN-10050) : lddDevice - cell 'PMOS30M' not found.
 WARNING (AVLVSNN-10050) : lddDevice - cell 'NMOSMHL' not found.
 WARNING (AVLVSNN-10050) : lddDevice - cell 'NMOSMH' not found.
 WARNING (AVLVSNN-10050) : lddDevice - cell 'NMOSHL' not found.
 WARNING (AVLVSNN-10050) : lddDevice - cell 'NMOSH' not found.
 WARNING (AVLVSNN-10050) : lddDevice - cell 'NMOS30M' not found.
 WARNING (AVLVSNN-10050) : lddDevice - cell 'NMOS18T' not found.
*WARNING* deleteCellPin - Unable to find cell 'RPOLYZ'
*WARNING* deleteCellPin - Unable to find cell 'RPOLYM'
*WARNING* deleteCellPin - Unable to find cell 'RPOLYH'
*WARNING* deleteCellPin - Unable to find cell 'RPOLY2'
*WARNING* deleteCellPin - Unable to find cell 'RPOLY2P'
*WARNING* deleteCellPin - Unable to find cell 'RPOLY2PH'
*WARNING* deleteCellPin - Unable to find cell 'RPOLY1'
*WARNING* deleteCellPin - Unable to find cell 'PNPVERT15'
*WARNING* deleteCellPin - Unable to find cell 'PNPVERT10'
*WARNING* deleteCellPin - Unable to find cell 'PMOSD30M'
Preprocessing schematic network phase 2
Preprocessing layout network phase 2
Top cell  xort schematic lab2024 vs xort layout lab2024
Compare errors, please see /home/oj23092/VLSI_Design_Lab/ASSURA_LVS/xort/xort.csm and /home/oj23092/VLSI_Design_Lab/ASSURA_LVS/xort/xort.cls files.
cpu=0.00m  wall=0.00m  mem=90.41mb

Finished /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/nvn

Starting /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/vldbToRpa xort.snn xort.tre xort.cel

Finished /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/vldbToRpa

Starting /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/vldbToRpa xort.lnn xort.tre2 xort.cel2

Finished /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/vldbToRpa

Starting /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/ercChk /home/oj23092/VLSI_Design_Lab/ASSURA_LVS/xort/xort.rsf
Virtuoso Framework License (111) was checked out successfully. Total checkout time was 0.07s.
Loading all available p-cell functions
AMS_DB set to cds

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets
*WARNING* LIB A_CELLS from File /home/oj23092/VLSI_Design_Lab/cds.lib Line 51 redefines
LIB A_CELLS from the same file (defined earlier.)
*WARNING* LIB PRIMLIBRF from File /home/oj23092/VLSI_Design_Lab/cds.lib Line 52 redefines
LIB PRIMLIBRF from the same file (defined earlier.)
*WARNING* The directory: '/home/oj23092/VLSI_Design_Lab/lab202x' does not exist
	but was defined in libFile '/home/oj23092/VLSI_Design_Lab/cds.lib' for Lib 'lab202x'.
*WARNING* LIB A_CELLS from File /home/oj23092/VLSI_Design_Lab/cds.lib Line 51 redefines
LIB A_CELLS from the same file (defined earlier.)
*WARNING* LIB PRIMLIBRF from File /home/oj23092/VLSI_Design_Lab/cds.lib Line 52 redefines
LIB PRIMLIBRF from the same file (defined earlier.)
*WARNING* The directory: '/home/oj23092/VLSI_Design_Lab/lab202x' does not exist
	but was defined in libFile '/home/oj23092/VLSI_Design_Lab/cds.lib' for Lib 'lab202x'.

Finished /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/ercChk

Starting /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/avcallproc /home/oj23092/VLSI_Design_Lab/ASSURA_LVS/xort/xort.rsf -trp -exec1
Loading all available p-cell functions
AMS_DB set to cds

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets

Finished /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/avcallproc


Assura LVS terminated normally.



Run ended: Mon Apr 22 19:00:15 2024

*****  Assura terminated normally  *****


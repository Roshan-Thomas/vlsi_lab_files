
            Assura (R) Physical Verification Version av4.1:Production:dfII6.1.8-64b:IC6.1.8-64b.500.25
            Release 4.1_USR6_EHF13

Copyright (c) Cadence Design Systems. All rights reserved.
@(#)$CDS: assura_64 version av4.1:Production:dfII6.1.8-64b:IC6.1.8-64b.500.25 09/19/2022 00:35 (sjfhw885) $
sub-version 4.1_USR6_EHF13, integ signature 2022-09-19-0008

run on it075710.wks.bris.ac.uk from /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618/tools.lnx86/assura/bin/64bit/assura on Fri Feb 23 15:47:04 2024

Loading all available p-cell functions
AMS_DB set to cds

Starting /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/aveng /home/oj23092/VLSI_Design_Lab/ASSURA_DRC/NAND3_temp/NAND3_temp.rsf -restart -cdslib /home/oj23092/VLSI_Design_Lab/cds.lib
@(#)$CDS: aveng_64 version av4.1:Production:dfII6.1.8-64b:IC6.1.8-64b.500.25 09/19/2022 00:36 (sjfhw885) $
sub-version 4.1_USR6_EHF13, integ signature 2022-09-19-0008

run on it075710.wks.bris.ac.uk from /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618/tools.lnx86/assura/bin/64bit/aveng on Fri Feb 23 15:47:04 2024

Loading all available p-cell functions
AMS_DB set to cds

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets
 Summary Report: NAND3_temp.sum
 RSF           : /home/oj23092/VLSI_Design_Lab/ASSURA_DRC/NAND3_temp/NAND3_temp.rsf
 Library Name  : lab2024
 CDSLIB Path   : "/home/oj23092/VLSI_Design_Lab/cds.lib"
 Cell Name     : NAND3_temp
 View Name     : layout
 Rules File    : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/drc.rul
 Options       : -restart -cdslib /home/oj23092/VLSI_Design_Lab/cds.lib 
 Work Directory: /home/oj23092/VLSI_Design_Lab/ASSURA_DRC/NAND3_temp
 Operating Mode: Legacy Mode is Off

2024/02/23 15:47:04 WARNING This OS does not appear to be a Cadence supported Linux configuration.
2024/02/23 15:47:04 For more info, please run CheckSysConf in <cdsRoot/tools.lnx86/bin/checkSysConf <productId>
Checking out license for Assura_DRC
*WARNING* Failed to obtain license for Assura_DRC
No Assura license available.
Checking out license for Phys_Ver_Sys_DRC_XL
Restarting with VDB Build 2 

Building the VDB part 2 in background mode.
2024/02/23 15:47:04 WARNING This OS does not appear to be a Cadence supported Linux configuration.
2024/02/23 15:47:04 For more info, please run CheckSysConf in <cdsRoot/tools.lnx86/bin/checkSysConf <productId>

Executing: substrate_all = cellBoundary(root)

Building the VDB part 3 in background mode.
2024/02/23 15:47:05 WARNING This OS does not appear to be a Cadence supported Linux configuration.
2024/02/23 15:47:05 For more info, please run CheckSysConf in <cdsRoot/tools.lnx86/bin/checkSysConf <productId>


Running in restart mode.


Finished building the VDB. VDB build times for main process:
cpu: 0.10  elap: 1  pf: 0  in: 48  out: 40  virt: 167M  phys: 878M

Running the Task Processor, 1 cells, 9533 steps...

Top Cell is 'NAND3_temp layout lab2024'

Executing: OPTDEF = geomEmpty()

Executing: PPLUS_DPL = geomEmpty()
	   errorLayer(PPLUS_DPL "ILL_LAYER_PPLUS_DPL")

Executing: POLY1_pinshape = geomOr(POLY1_sympin geomTextShape(POLY1_pintext))

Executing: MET1_pinshape = geomOr(MET1_sympin geomTextShape(MET1_pintext))

Executing: MET2_pinshape = geomOr(MET2_sympin geomTextShape(MET2_pintext))

Executing: MET3_pinshape = geomOr(MET3_sympin geomTextShape(MET3_pintext))

Executing: MET4_pinshape = geomOr(MET4_sympin geomTextShape(MET4_pintext))

Executing: PAD_pinshape = geomTextShape(PAD_pintext)

Executing: OPTDEF_pinshape = geomEmpty()

Executing: subdef_ring = geomAndNot(SUBDEF geomSize(SUBDEF -0.05))

Executing: ntub_subdefcut = geomAndNot(NTUB subdef_ring)

Executing: diff_cut = geomAndNot(DIFF DIFCUT)

Executing: poly1_cut = geomAndNot(POLY1 PO1CUT)

Executing: poly2_cut = geomAndNot(POLY2 PO2CUT)

Executing: poly1_n_poly2 = geomAndNot(poly1_cut poly2_cut)

Executing: net_poly1con = geomAnd(CONT poly1_n_poly2)

Executing: net_poly2con = geomAnd(CONT poly2_cut)

Executing: hrescon = geomAnd(net_poly2con HRES)

Executing: diffcon = geomAnd(CONT diff_cut)

Executing: net_via2_metcap = geomAnd(VIA2 METCAP)

Executing: via2_met2 = geomAndNot(VIA2 net_via2_metcap)

Executing: via_cont_pin = geomOr(VIA1 CONT MET1_pinshape)

Executing: ndiff_1 = geomAnd(diff_cut NPLUS)

Executing: pdiff_1 = geomAnd(diff_cut PPLUS)

Executing: pfuse = geomAnd(poly1_cut DEVDEF_pfuse)

Executing: poly1_poly2 = geomAnd(POLY1 POLY2)

Executing: pres1_1 = geomAndNot(geomAnd(poly1_cut RESDEF) HRES)

Executing: pres1_2 = geomAndNot(pres1_1 poly1_poly2)

Executing: pres1_3 = geomAndNot(pres1_2 RESTRM)

Executing: pres1 = geomAvoiding(pres1_3 pfuse)

Executing: resdef_2p = geomGetTexted(RESDEF RESDEF_text "RPOLY2P")

Executing: presp_1 = geomAndNot(geomAnd(poly2_cut resdef_2p) HRES)

Executing: presp_2 = geomAndNot(presp_1 poly1_poly2)

Executing: presp = geomAndNot(presp_2 RESTRM)
	   errorLayer(presp "ILL_ELEMENT_RPOLY2P")

Executing: resdef_2ph = geomGetTexted(RESDEF RESDEF_text "RPOLY2PH")

Executing: presph_1 = geomAndNot(geomAnd(poly2_cut resdef_2ph) HRES)

Executing: presph_2 = geomAndNot(presph_1 poly1_poly2)

Executing: presph = geomAndNot(presph_2 RESTRM)

Executing: resdef = geomAndNot(geomAndNot(RESDEF resdef_2p) resdef_2ph)

Executing: pres_1 = geomAndNot(geomAnd(poly2_cut resdef) HRES)

Executing: pres_2 = geomAndNot(pres_1 poly1_poly2)

Executing: pres = geomAndNot(pres_2 RESTRM)

Executing: zero_tc = geomGetTexted(HRES HRES_text "RPOLYZ")

Executing: rpolyzcon = geomAnd(hrescon zero_tc)

Executing: presz_1 = geomAnd(poly2_cut zero_tc)

Executing: presz = geomAnd(geomAndNot(presz_1 PPLUS) RESDEF)
	   errorLayer(presz "ILL_ELEMENT_RPOLYZ")

Executing: preszterm = geomAnd(presz_1 PPLUS)

Executing: hres = geomAndNot(HRES zero_tc)

Executing: rpolyhcon = geomAnd(hrescon hres)

Executing: presh_1 = geomAnd(poly2_cut hres)

Executing: presh = geomAnd(geomAndNot(presh_1 PPLUS) RESDEF)

Executing: preshterm = geomAnd(presh_1 PPLUS)

Executing: pdres_1 = geomAnd(pdiff_1 RESDEF)

Executing: pdres_2 = geomAvoiding(pdres_1 pres)

Executing: RDIFFP_device = geomAndNot(pdres_2 RESTRM)

Executing: ndres_1 = geomAnd(ndiff_1 RESDEF)

Executing: ndres_2 = geomAvoiding(ndres_1 pres)

Executing: RDIFFN_device = geomAndNot(ndres_2 RESTRM)

Executing: nwres_1 = geomAnd(NTUB TUBDEF)

Executing: nwres_3 = geomAvoiding(nwres_1 RDIFFP_device)

Executing: nwres_4 = geomAvoiding(nwres_3 RDIFFN_device)

Executing: RNWELL_device = geomAndNot(nwres_4 RESTRM)

Executing: net_poly1 = geomAndNot(geomAndNot(poly1_cut pres1) pfuse)

Executing: poly2_1 = geomAndNot(poly2_cut pres)

Executing: poly2_2 = geomAndNot(poly2_1 presp)

Executing: poly2_3 = geomAndNot(poly2_2 presph)

Executing: poly2_4 = geomAndNot(poly2_3 presh)

Executing: net_poly2 = geomAndNot(poly2_4 presz)

Executing: nmos30m_hvdef_a = geomGetTexted(HVDEF HVDEF_text "NMOS30M_*")

Executing: nmos18t_hvdef_a = geomGetTexted(HVDEF HVDEF_text "NMOS18T_*")

Executing: nmoshv_hvdef_filter = geomCat(nmos30m_hvdef_a nmos18t_hvdef_a)

Executing: nmos30_ntub_clos = geomSize(geomSize(geomButtOrOver(NTUB nmoshv_hvdef_filter)...

Executing: net_nwell = geomOr(geomAndNot(ntub_subdefcut RNWELL_device) nmos30_ntub_clos)

Executing: ndiff_2 = geomAndNot(ndiff_1 net_poly1)

Executing: net_ndiff = geomAndNot(ndiff_2 RDIFFN_device)

Executing: pdiff_2 = geomAndNot(pdiff_1 net_poly1)

Executing: net_pdiff = geomAndNot(pdiff_2 RDIFFP_device)

Executing: trans = geomAnd(diff_cut net_poly1)

Executing: ngate = geomAndNot(trans NTUB)

Executing: pgate = geomAnd(trans NTUB)

Executing: gate = geomOr(ngate pgate)

Executing: nmos30m_ndevx = geomAnd(ngate NPLUS)

Executing: ndev = geomAndNot(geomAnd(ngate NPLUS) HVDEF)

Executing: pdev = geomAnd(pgate PPLUS)

Executing: pnpvert_0 = geomAnd(net_pdiff geomSize(NTUB 1.1))

Executing: pnpvert_1 = drc(geomHoles(pnpvert_0) (area < 1000.0))

Executing: pnpvert_2 = geomInside(NTUB pnpvert_1)

Executing: pnpvert_3 = geomAnd(net_ndiff pnpvert_2)

Executing: geomHoles(pnpvert_3)

Executing: pnpvert_5 = geomInside(net_pdiff pnpvert_4)

Executing: pnpvert_6 = geomGetLength(pnpvert_5 ((39.9 < keep) < 40.1) contiguous fig)

Executing: pnpvert10_e = drc(pnpvert_6 ((99.9 < area) < 100.1))

Executing: VERT10_device = geomSize(pnpvert10_e 2.0)

Executing: pnplat = drc(geomHoles(pdev) (area < 10.0))

Executing: pnplat2_e = geomGetLength(pnplat ((7.5 < keep) < 8.05) contiguous fig)

Executing: LAT2_device = geomButtOnly(pdev pnplat2_e)

Executing: nwell_ill = geomButtOnly(NTUB trans)

Executing: nwell_hv_trans = geomStraddle(NTUB trans)

Executing: nwell_ovlp_good = drc(nwell_hv_trans trans ((1.6 <= ovlp) <= 1.6) opposite pa...

Executing: nwell_ovlp_bad = drc(nwell_hv_trans trans (ovlp < 2.0) opposite parallel)

Executing: ill_hvmos_nwell = geomOr(nwell_ill geomEnclose(NTUB geomAvoiding(nwell_ovlp_b...

Executing: errorLayer(geomAvoiding(geomButtOrOver(ndev ill_hvmos_nwell) nwell_ovlp_good) "DEVICE Error: Illegal nmosh device")

Executing: routp_n_trans = geomAndNot(net_poly1 trans)

Executing: waffle_poly1_1 = geomGetHoled(net_poly1)

Executing: waffle_holes = geomAnd(geomHoles(waffle_poly1_1 innermostEmpty) diff_cut)

Executing: waffle_poly1 = geomAndNot(waffle_poly1_1 geomGetHoled(geomOr(waffle_poly1_1 w...

Executing: waffle_gate = geomButtOrOver(geomAnd(geomSize(waffle_holes 3.1 edges) waffle_...

Executing: waffle_w_poly1 = geomCat(waffle_poly1_1)

Executing: waffle_w_holes_0 = geomHoles(waffle_w_poly1 innermostEmpty)

Executing: waffle_w_holes_0_diff = geomAnd(waffle_w_holes_0 DIFF)

Executing: waffle_w_holes_0_check_diffgap = geomAndNot(waffle_w_holes_0 waffle_w_holes_0...

Executing: waffle_w_holes_0 = geomAvoiding(waffle_w_holes_0_diff waffle_w_holes_0_check_...

Executing: waffle_w_holes_1 = geomGetVertex(waffle_w_holes_0 (keep == 4))

Executing: waffle_w_holes_1_edge = geomGetEdge(waffle_w_holes_1 butting waffle_poly1_1)

Executing: waffle_w_holes_1_edge_length = geomSize(geomGetLength(waffle_w_holes_1_edge (...

Executing: waffle_w_holes_good = geomButtOrOver(waffle_w_holes_1 waffle_w_holes_1_edge_l...

Executing: waffle_w_gate = geomButtOrOver(geomAnd(geomSize(waffle_w_holes_good 3.1 edges...

Executing: pmos_waffle_w = geomButtOnly(waffle_w_gate net_pdiff (keep == 2))

Executing: nmos_waffle_w = geomButtOnly(waffle_w_gate net_ndiff (keep == 2))

Executing: pmosw_device_all = geomAndNot(geomAndNot(geomAndNot(pmos_waffle_w MIDOX) LVTD...

Executing: pmosmw_device_all = geomAndNot(geomAndNot(geomAnd(pmos_waffle_w MIDOX) LVTDEF...

Executing: nmosw_device_all = geomAndNot(geomAndNot(geomAndNot(nmos_waffle_w MIDOX) LVTD...

Executing: nmosmw_device_all = geomAndNot(geomAndNot(geomAnd(nmos_waffle_w MIDOX) LVTDEF...

Executing: waffle_w_poly1_good = geomButtOrOver(waffle_w_poly1 waffle_w_holes_good)

Executing: waffle_w_ndiff_good = geomButtOrOver(net_ndiff waffle_w_poly1_good)

Executing: waffle_w_ndiff_diffc_1 = geomButtOrOver(waffle_w_ndiff_good diffcon (keep == 1))

Executing: waffle_w_ndiff_diffc_2 = geomButtOrOver(waffle_w_ndiff_good diffcon (keep == 2))

Executing: waffle_w_ndiff_diffc_4 = geomButtOrOver(waffle_w_ndiff_good diffcon (keep == 4))

Executing: waffle_w_ndiff_diffc_0 = geomAvoiding(waffle_w_ndiff_good diffcon)
	   errorLayer(waffle_w_ndiff_diffc_0 "NMOSW/NMOSMW for waffle trans we expect 1, 2, or 4 s/d conts, diffcont missing")

Executing: waffle_w_ndiff_diffc_gt4 = geomButtOrOver(waffle_w_ndiff_good diffcon (keep >...
	   errorLayer(waffle_w_ndiff_diffc_gt4 "NMOSW/NMOSMW for waffle trans we expect 1, 2, or 4 s/d conts, too much s/d cont")

Executing: waffle_w_nmosw_4n = geomButtOrOver(nmosw_device_all waffle_w_ndiff_diffc_4 (k...

Executing: waffle_w_nmosw_3n = geomAnd(geomButtOrOver(nmosw_device_all waffle_w_ndiff_di...

Executing: waffle_w_nmosw_2n = geomAnd(geomButtOrOver(nmosw_device_all waffle_w_ndiff_di...

Executing: waffle_w_nmosmw_4n = geomButtOrOver(nmosmw_device_all waffle_w_ndiff_diffc_4 ...

Executing: waffle_w_nmosmw_3n = geomAnd(geomButtOrOver(nmosmw_device_all waffle_w_ndiff_...

Executing: waffle_w_nmosmw_2n = geomAnd(geomButtOrOver(nmosmw_device_all waffle_w_ndiff_...

Executing: waffle_w_pdiff_good = geomButtOrOver(net_pdiff waffle_w_poly1_good)

Executing: waffle_w_pdiff_diffc_1 = geomButtOrOver(waffle_w_pdiff_good diffcon (keep == 1))

Executing: waffle_w_pdiff_diffc_2 = geomButtOrOver(waffle_w_pdiff_good diffcon (keep == 2))

Executing: waffle_w_pdiff_diffc_4 = geomButtOrOver(waffle_w_pdiff_good diffcon (keep == 4))

Executing: waffle_w_pdiff_diffc_0 = geomAvoiding(waffle_w_pdiff_good diffcon)
	   errorLayer(waffle_w_pdiff_diffc_0 "PMOSW/PMOSMW for waffle trans we expect 1, 2, or 4 s/d conts, diffcont missing")

Executing: waffle_w_pdiff_diffc_gt4 = geomButtOrOver(waffle_w_pdiff_good diffcon (keep >...
	   errorLayer(waffle_w_pdiff_diffc_gt4 "PMOSW/PMOSMW for waffle trans we expect 1, 2, or 4 s/d conts, too much s/d cont")

Executing: waffle_w_pmosw_4n = geomButtOrOver(pmosw_device_all waffle_w_pdiff_diffc_4 (k...

Executing: waffle_w_pmosw_3n = geomAnd(geomButtOrOver(pmosw_device_all waffle_w_pdiff_di...

Executing: waffle_w_pmosw_2n = geomAnd(geomButtOrOver(pmosw_device_all waffle_w_pdiff_di...

Executing: waffle_w_pmosmw_4n = geomButtOrOver(pmosmw_device_all waffle_w_pdiff_diffc_4 ...

Executing: waffle_w_pmosmw_3n = geomAnd(geomButtOrOver(pmosmw_device_all waffle_w_pdiff_...

Executing: waffle_w_pmosmw_2n = geomAnd(geomButtOrOver(pmosmw_device_all waffle_w_pdiff_...

Executing: pmos_waffle = geomButtOnly(geomAvoiding(waffle_gate waffle_w_gate) net_pdiff ...

Executing: nmos_waffle = geomButtOnly(geomAvoiding(waffle_gate waffle_w_gate) net_ndiff ...

Executing: pmos_1 = geomAndNot(pdev LAT2_device)

Executing: pmos_2 = geomButtOnly(pmos_1 routp_n_trans)

Executing: pmos_3 = geomButtOnly(pmos_2 net_pdiff (keep == 2))

Executing: pmos_4 = geomAndNot(pmos_3 waffle_poly1)

Executing: pmosrf_trans = geomAnd(geomAndNot(geomAndNot(pmos_4 MIDOX) LVTDEF) RFDEF)

Executing: PMOSRF_device = geomEnclose(RFDEF pmosrf_trans)

Executing: nmosh_1 = geomAndNot(geomOr(geomButtOnly(trans NTUB) geomStraddle(trans NTUB)...

Executing: nmosh = geomButtOrOver(nmosh_1 ndev)

Executing: nmoshall = geomAnd(nmosh_1 geomAnd(trans NPLUS))

Executing: nmosh_d = geomAnd(net_ndiff geomButtOrOver(NTUB nmoshall))

Executing: nmosh_d_fill = drc(nmosh_d nmosh (sep < 6.0) opposite parallel)

Executing: nmosh_d_term_1 = geomOr(nmosh_d nmosh_d_fill)

Executing: nmosh_d_term_2 = geomButtOnly(nmosh_d_term_1 nmosh)

Executing: nmosh_d_term = geomOverlap(net_nwell nmosh_d_term_2)

Executing: nmos_1 = geomAndNot(ndev nmosh)

Executing: nmos_2 = geomAvoiding(nmos_1 ill_hvmos_nwell)

Executing: nmos_3 = geomButtOnly(nmos_2 routp_n_trans)

Executing: nmos_4 = geomButtOnly(nmos_3 net_ndiff (keep == 2))

Executing: nmos_5 = geomAndNot(nmos_4 waffle_poly1)

Executing: nmosrf_trans = geomAnd(geomAndNot(geomAndNot(nmos_5 MIDOX) LVTDEF) RFDEF)

Executing: NMOSRF_device = geomEnclose(RFDEF nmosrf_trans)

Executing: cpoly = geomAnd(geomAndNot(net_poly1 HRES) poly2_cut)

Executing: cvar = geomAnd(geomAnd(pgate NPLUS) RFDEF)

Executing: cvar_all_c35 = geomAvoiding(geomAnd(pgate NPLUS) geomOr(nmosh geomOr(RFDEF HV...

Executing: CVART_device = geomAndNot(geomAnd(cvar_all_c35 NTUB) MIDOX)

Executing: CVARM_device = geomAnd(geomAnd(cvar_all_c35 NTUB) MIDOX)

Executing: net_ndiff_d_sub = geomAndNot(net_ndiff NTUB)

Executing: ndiode_1 = geomAvoiding(geomAndNot(net_ndiff NTUB) trans)

Executing: ND_device = geomAnd(ndiode_1 DIODE)

Executing: net_pdiff_d_ntub = geomAnd(net_pdiff NTUB)

Executing: pdiode_1 = geomAvoiding(geomAnd(net_pdiff NTUB) trans)

Executing: PD_device = geomAnd(pdiode_1 DIODE)

Executing: sbd_diode_definition = geomGetTexted(DIODE DIODE_text "SBD5*")

Executing: NWD_device = geomAnd(NTUB geomAndNot(DIODE sbd_diode_definition))

Executing: zdiode_1 = geomGetEdge(net_pdiff butting net_ndiff)

Executing: zdiode_2 = geomSize(zdiode_1 0.1 unmergedOut edges)

Executing: zdiode_3 = geomAnd(net_pdiff net_ndiff)

Executing: zdiode_4 = geomOr(zdiode_2 zdiode_3)

Executing: zdiode_5 = geomButtOrOver(net_pdiff zdiode_4)

Executing: zdiode_6 = geomButtOrOver(net_ndiff zdiode_4)

Executing: zdiode_7 = geomOr(zdiode_5 zdiode_6)

Executing: zdiode_8 = geomAnd(zdiode_7 ZENER)

Executing: zdiode_9 = geomEnclose(zdiode_8 zdiode_7)

Executing: zdiode_all = geomAnd(zdiode_4 zdiode_9)

Executing: zdiode_02_1 = drc(zdiode_all ((0.2 <= width) <= 0.2) parallel opposite)

Executing: zdiode_02 = geomButtOrOver(zdiode_all zdiode_02_1)

Executing: ZD2SM24_device = geomOr(zdiode_02)

Executing: net_ndiffcon = geomAndNot(geomAnd(ndiff_1 CONT) net_poly1con)

Executing: net_pdiffcon = geomAndNot(geomAnd(pdiff_1 CONT) net_poly1con)

Executing: diff_n_zener = geomAndNot(DIFF ZENER)

Executing: ndiff_n_zener = geomAndNot(net_ndiff ZENER)

Executing: pdiff_n_zener = geomAndNot(net_pdiff ZENER)

Executing: te_pro_pad = drc(PAD (area < 2401))

Executing: net_bondpad = geomAndNot(PAD te_pro_pad)

Executing: pad_ring = geomAndNot(PAD geomSize(PAD -1.0))

Executing: pad_3oa_pad_ring = geomAnd(geomAnd(pad_ring MET2) MET3)

Executing: pad_3oa_pad_ring_via = geomSize(geomAnd(pad_3oa_pad_ring VIA2) 2.0)

Executing: pad_3oa_ok = geomButtOrOver(PAD geomGetHoled(pad_3oa_pad_ring_via))

Executing: pad_4oa_pad_ring = geomAnd(geomAnd(pad_ring MET3) MET4)

Executing: pad_4oa_pad_ring_via = geomSize(geomAnd(pad_4oa_pad_ring VIA3) 2.0)

Executing: pad_4oa_ok = geomButtOrOver(PAD geomGetHoled(pad_4oa_pad_ring_via))

Executing: pad_pao_topology = geomOr(pad_4oa_ok pad_3oa_ok)

Executing: pad_st_all = geomAvoiding(geomInside(PAD MET1) pad_pao_topology)

Executing: pad_poa_all = geomOr(geomAndNot(PAD geomInside(PAD MET1)) pad_pao_topology)

Executing: pad_3oa = geomInside(pad_poa_all geomAnd(MET3 MET2))

Executing: pad_4oa = geomInside(pad_poa_all geomAnd(MET4 MET3))

Executing: pres1_w = geomGetEdge(pres1 butting RESTRM)

Executing: pres1_l = geomGetEdge(pres1 outside RESTRM)

Executing: pres1_wexp = geomSize(pres1_w 0.1)

Executing: pres1_lexp = geomSize(pres1_l 0.1)

Executing: pres1_exp = geomSize(pres1 0.1)

Executing: pres_w = geomGetEdge(pres butting RESTRM)

Executing: pres_l = geomGetEdge(pres outside RESTRM)

Executing: pres_wexp = geomSize(pres_w 0.1)

Executing: pres_lexp = geomSize(pres_l 0.1)

Executing: pres_exp = geomSize(pres 0.1)

Executing: presp_w = geomGetEdge(presp butting RESTRM)

Executing: presp_l = geomGetEdge(presp outside RESTRM)

Executing: presp_wexp = geomSize(presp_w 0.1)

Executing: presp_lexp = geomSize(presp_l 0.1)

Executing: presp_exp = geomSize(presp 0.1)

Executing: presph_w = geomGetEdge(presph butting RESTRM)

Executing: presph_l = geomGetEdge(presph outside RESTRM)

Executing: presph_wexp = geomSize(presph_w 0.1)

Executing: presph_lexp = geomSize(presph_l 0.1)

Executing: presph_exp = geomSize(presph 0.1)

Executing: nwres_w = geomGetEdge(RNWELL_device butting RESTRM)

Executing: nwres_l = geomGetEdge(RNWELL_device outside RESTRM)

Executing: nwres_wexp = geomSize(nwres_w 0.1)

Executing: nwres_lexp = geomSize(nwres_l 0.1)

Executing: nwres_exp = geomSize(RNWELL_device 0.1)

Executing: presh_w = geomGetEdge(presh butting preshterm)

Executing: presh_l = geomGetEdge(presh outside preshterm)

Executing: presh_wexp = geomSize(presh_w 0.1)

Executing: presh_lexp = geomSize(presh_l 0.1)

Executing: presh_exp = geomSize(presh 0.1)

Executing: presz_w = geomGetEdge(presz butting preszterm)

Executing: presz_l = geomGetEdge(presz outside preszterm)

Executing: presz_wexp = geomSize(presz_w 0.1)

Executing: presz_lexp = geomSize(presz_l 0.1)

Executing: presz_exp = geomSize(presz 0.1)

Executing: pres145_1 = geomGetAngledEdge(pres1 (keep == 45))

Executing: pres145 = geomSize(pres145_1 0.1 unmergedOut edges)

Executing: pres45_1 = geomGetAngledEdge(pres (keep == 45))

Executing: pres45 = geomSize(pres45_1 0.1 unmergedOut edges)

Executing: presp45_1 = geomGetAngledEdge(presp (keep == 45))

Executing: presp45 = geomSize(presp45_1 0.1 unmergedOut edges)

Executing: presph45_1 = geomGetAngledEdge(presph (keep == 45))

Executing: presph45 = geomSize(presph45_1 0.1 unmergedOut edges)

Executing: presh45_1 = geomGetAngledEdge(presh (keep == 45))

Executing: presh45 = geomSize(presh45_1 0.1 unmergedOut edges)

Executing: presz45_1 = geomGetAngledEdge(presz (keep == 45))

Executing: presz45 = geomSize(presz45_1 0.1 unmergedOut edges)

Executing: ndres45_1 = geomGetAngledEdge(RDIFFN_device (keep == 45))

Executing: ndres45 = geomSize(ndres45_1 0.1 unmergedOut edges)

Executing: pdres45_1 = geomGetAngledEdge(RDIFFP_device (keep == 45))

Executing: pdres45 = geomSize(pdres45_1 0.1 unmergedOut edges)

Executing: nwres45_1 = geomGetAngledEdge(RNWELL_device (keep == 45))

Executing: nwres45 = geomSize(nwres45_1 0.1 unmergedOut edges)

Executing: poly1check = geomGetEdge(POLY1 outside pres145)

Executing: poly2check = geomGetEdge(pres_1 outside pres45)

Executing: poly2pcheck = geomGetEdge(presp_1 outside presp45)

Executing: poly2phcheck = geomGetEdge(presph_1 outside presph45)

Executing: poly2hcheck = geomGetEdge(presh_1 outside presh45)

Executing: poly2zcheck = geomGetEdge(presz_1 outside presz45)

Executing: diffcheck_1 = geomButtOrOver(DIFF RESDEF)

Executing: diffcheck_2 = geomAndNot(diffcheck_1 RESDEF)

Executing: diffcheck_3 = geomAndNot(DIFF diffcheck_2)

Executing: diffcheck_4 = geomGetEdge(diffcheck_3 outside ndres45)

Executing: diffcheck = geomGetEdge(diffcheck_4 outside pdres45)

Executing: ntubcheck = geomGetEdge(NTUB outside nwres45)

Executing: ndiff_n_nmosh = geomAvoiding(ndiff_1 geomOr(nmosh HVDEF))

Executing: met1_withslots = geomAndNot(MET1 M1HOLE)

Executing: met2_withslots = geomAndNot(MET2 M2HOLE)

Executing: met3_withslots = geomAndNot(MET3 M3HOLE)

Executing: met4_withslots = geomAndNot(MET4 M4HOLE)

Executing: p1_or_p2 = geomOr(POLY1 POLY2)

Executing: diff_or_poly = geomOr(DIFF p1_or_p2)

Executing: implant = geomOr(NPLUS PPLUS)

Executing: net_welltap = geomAnd(net_ndiff net_nwell)

Executing: net_subtap = geomAndNot(net_pdiff net_nwell)

Executing: net_nsd = geomOverlap(net_ndiff geomAndNot(net_ndiff net_welltap))

Executing: net_psd = geomAndNot(net_pdiff net_subtap)

Executing: metcap_bottom_plate = geomEnclose(MET2 METCAP)

Executing: cmim = geomAnd(METCAP metcap_bottom_plate)

Executing: CPMIM_device = geomAnd(METCAP geomAnd(MET2 geomAnd(POLY2 POLY1)))

Executing: net_ndiff_c_ntub = geomAnd(net_ndiff NTUB)

Executing: PHDNWA850_device = geomAvoiding(geomAnd(geomAnd(NTUB net_ndiff) OPTDEF) PAD_B...

Executing: PHDNWA850_device_x = geomCat(PHDNWA850_device)
	   errorLayer(PHDNWA850_device_x "Process Modules : PHDNWA850 not available for this process module")

Executing: PHDNWB850_device = geomButtOrOver(geomAnd(geomAnd(NTUB net_ndiff) OPTDEF) PAD...

Executing: PHDNWB850_device_x = geomCat(PHDNWB850_device)
	   errorLayer(PHDNWB850_device_x "Process Modules : PHDNWB850 not available for this process module")

Executing: sbd_diode_def_ok = geomGetTexted(DIODE DIODE_text "SBD5_REV_1.0")

Executing: sbd5_err = geomAndNot(sbd_diode_definition sbd_diode_def_ok)
	   errorLayer(sbd5_err "Version od SBD5 obsolte or missing")

Executing: sbd5_ndiff_1 = geomHoles(geomAnd(ndiff_1 sbd_diode_definition) innermost)

Executing: sbdcon = geomAnd(geomAndNot(diffcon implant) sbd_diode_definition)

Executing: net_sbd_anode_diff = geomEnclose(geomAndNot(DIFF implant) sbdcon)

Executing: SBD5_device = geomCat(sbd5_ndiff_1)

Executing: SBD5_device_x = geomCat(SBD5_device)
	   errorLayer(SBD5_device_x "Process Modules : SBD5 not available for this process module")

Executing: esdpd12_hvdef_def = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDPD12_*") ge...

Executing: esdpd12_cath_ndiff_c_ntub = geomAnd(geomAnd(net_ndiff NTUB) esdpd12_hvdef_def)

Executing: esdpd12_ntub = geomEnclose(NTUB esdpd12_cath_ndiff_c_ntub)

Executing: ESDPD12_device = geomCat(esdpd12_ntub)

Executing: esdpd18_hvdef_def = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDPD18_*") ge...

Executing: esdpd18_cath_ndiff_c_ntub = geomAnd(geomAnd(net_ndiff NTUB) esdpd18_hvdef_def)

Executing: esdpd18_ntub = geomEnclose(NTUB esdpd18_cath_ndiff_c_ntub)

Executing: ESDPD18_device = geomCat(esdpd18_ntub)

Executing: esdpd26_hvdef_def = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDPD26_*") ge...

Executing: esdpd26_cath_ndiff_c_ntub = geomAnd(geomAnd(net_ndiff NTUB) esdpd26_hvdef_def)

Executing: esdpd26_ntub = geomEnclose(NTUB esdpd26_cath_ndiff_c_ntub)

Executing: ESDPD26_device = geomCat(esdpd26_ntub)

Executing: esdpd30_hvdef_def = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDPD30_*") ge...

Executing: esdpd30_cath_ndiff_c_ntub = geomAnd(geomAnd(net_ndiff NTUB) esdpd30_hvdef_def)

Executing: esdpd30_ntub = geomEnclose(NTUB esdpd30_cath_ndiff_c_ntub)

Executing: ESDPD30_device = geomCat(esdpd30_ntub)

Executing: esdfdp5_hvdef_def = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDFDP5_*") ge...

Executing: esdfdp5_anod_pdiff_d_ntub = geomAnd(geomAnd(net_pdiff NTUB) esdfdp5_hvdef_def)

Executing: ESDFDP5_device = geomCat(esdfdp5_anod_pdiff_d_ntub)

Executing: esdgcp5_hvdef_def = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDGCP5_*") ge...

Executing: esdgcp5_anod_pdiff_d_ntub = geomAnd(geomAnd(net_pdiff NTUB) esdgcp5_hvdef_def)

Executing: ESDGCP5_device = geomCat(esdgcp5_anod_pdiff_d_ntub)

Executing: esdfdn5_hvdef_def = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDFDN5_*") ge...

Executing: esdfdn5_cath_ndiff_d_sub = geomAnd(geomAndNot(net_ndiff NTUB) esdfdn5_hvdef_def)

Executing: ESDFDN5_device = geomCat(esdfdn5_cath_ndiff_d_sub)

Executing: esdgcn5_hvdef_def = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDGCN5_*") ge...

Executing: esdgcn5_cath_ndiff_d_sub = geomAnd(geomAndNot(net_ndiff NTUB) esdgcn5_hvdef_def)

Executing: ESDGCN5_device = geomCat(esdgcn5_cath_ndiff_d_sub)

Executing: ndiff_nldd = geomCat(net_ndiff)

Executing: nmos30_1 = geomEnclose(geomHoles(net_poly1 innermost) ndiff_nldd)

Executing: nmos30_2 = geomButting(net_poly1 nmos30_1)

Executing: nmos30_3 = geomStraddle(geomButtOrOver(nmos30m_ndevx nmos30_2) FIDEF)

Executing: nmos30_ndiff = geomInside(ndiff_nldd nmos30_1)

Executing: nmos30_d_fill = drc(nmos30_ndiff nmos30_3 (sep < 2.5) parallel opposite)

Executing: nmos30_4 = geomOr(geomButting(nmos30_3 nmos30_d_fill) nmos30_d_fill)

Executing: nmos30_4g = geomAnd(nmos30_4 DIFF)

Executing: nmos30m = geomButtOrOver(nmos30_4 geomInside(nmos30_4g MIDOX))

Executing: nmos18t = geomAndNot(nmos30_4 nmos30m)

Executing: nmos30_drain = geomButtOnly(nmos30_ndiff nmos30_4)

Executing: nmos30m_double = geomOr(nmos30m geomButtOnly(nmos30_drain nmos30m))

Executing: nmos18t_double = geomOr(nmos18t geomButtOnly(nmos30_drain nmos18t))

Executing: NMOS30M_device = geomCat(nmos30m_double)

Executing: NMOS18T_device = geomCat(nmos18t_double)

Executing: pmosd30m_pdiff = geomCat(net_pdiff)

Executing: pmosd30m_1 = geomEnclose(geomHoles(net_poly1 innermost) geomAnd(pmosd30m_pdif...

Executing: pmosd30m_2 = geomButting(net_poly1 pmosd30m_1)

Executing: pmosd30m_3 = geomStraddle(geomButtOrOver(pmosd30m_pdevx pmosd30m_2) PFIMP)

Executing: pmosd30m_pdiff = geomInside(pmosd30m_pdiff pmosd30m_1)

Executing: pmosd30m_d_fill = drc(pmosd30m_pdiff pmosd30m_3 (sep < 2.7) parallel opposite)

Executing: pmosd30m_4 = geomOr(geomButting(pmosd30m_3 pmosd30m_d_fill) pmosd30m_d_fill)

Executing: pmosd30m_4g = geomAnd(pmosd30m_4 DIFF)

Executing: pmosd30m_xx = geomButtOrOver(pmosd30m_4 geomInside(pmosd30m_4g MIDOX))

Executing: pmosd30m_hvdef_def = geomGetTexted(HVDEF HVDEF_text "PMOSD30M_*")

Executing: pmos30m_hvdef_def = geomGetTexted(HVDEF HVDEF_text "PMOS30M_*")

Executing: pmosd30m_drain = geomButtOrOver(geomButtOnly(pmosd30m_pdiff pmosd30m_4) pmosd...

Executing: pmosd30m_double = geomButtOrOver(geomOr(pmosd30m_xx geomButtOnly(pmosd30m_dra...

Executing: PMOSD30M_device = geomCat(pmosd30m_double)

Executing: pmos30m_drain = geomButtOrOver(geomButtOnly(pmosd30m_pdiff pmosd30m_4) pmos30...

Executing: pmos30m_double = geomButtOrOver(geomOr(pmosd30m_xx geomButtOnly(pmos30m_drain...

Executing: PMOS30M_device = geomCat(pmos30m_double)

Executing: spiral_term11_1 = geomGetTexted(geomButtOrOver(RESTRM INDDEF) MET3_pintext "P1")

Executing: spiral_term22_1 = geomGetTexted(geomButtOrOver(RESTRM INDDEF) MET3_pintext "P2")

Executing: spiral_term11_2 = geomGetTexted(geomButtOrOver(RESTRM INDDEF) MET4_pintext "P1")

Executing: spiral_term22_2 = geomGetTexted(geomButtOrOver(RESTRM INDDEF) MET4_pintext "P2")

Executing: spiral_term11 = geomOr(spiral_term11_1 spiral_term11_2)

Executing: spiral_term22 = geomOr(spiral_term22_1 spiral_term22_2)

Executing: spiral_term11_met4 = geomGetTexted(geomButtOrOver(RESTRM INDDEF) MET4_pintext...

Executing: spiral_term22_met4 = geomGetTexted(geomButtOrOver(RESTRM INDDEF) MET4_pintext...

Executing: spiral_met_all_1 = geomOr(geomAnd(MET2 INDDEF) geomAnd(MET3 INDDEF))

Executing: spiral_met_all = geomOr(spiral_met_all_1 geomAnd(MET4 INDDEF))

Executing: spiral_term_xx = geomOr(geomOr(spiral_term11 spiral_term22) geomOr(spiral_ter...

Executing: spiral_term = geomButtOrOver(geomAnd(spiral_term_xx INDDEF) spiral_met_all)

Executing: spiral_inddef = geomButtOrOver(INDDEF spiral_term (keep == 2))

Executing: spiral_body = geomAnd(spiral_inddef spiral_met_all)

Executing: SP133S300T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP100S250T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP073S250T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP060S300T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP049S300T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP047S250T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP037S250T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP033S150T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP031S250T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP024S250T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP021S200T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP020S250T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP015S250T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP011S200T_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_named_typet = geomCat(SP133S300T_device SP100S250T_device SP073S2...

Executing: SP014S300D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP018S300D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP020S180D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP023S200D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP025C200D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP026S200D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP028S300D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP028C200D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP030C200D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP037S180D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP038S300D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP040C200D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP040C300D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP045C200D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP047S180D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP050S155D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP051C300D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP068C300D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP090C200D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP090S155D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP112C300D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP140C200D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP200C200D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY014C165D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY015C200D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY016C180D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY017C165D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY019C180D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY028C160D_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_named_typed = geomCat(SY014C165D_device SP014S300D_device SY015C2...

Executing: spiral_body_di_15 = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_di_20 = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_di_25 = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_di_30 = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_di_35 = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_di_40 = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_di_45 = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_di_50 = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_di_55 = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_di_60 = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_named_type_diff = geomCat((DI15PT_device = geomCat(spiral_body_di...

Executing: SP014S300C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP018S300C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP020S180C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP023S200C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP025C200C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP026S200C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP028S300C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP028C200C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP030C200C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP037S180C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP038S300C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP040C200C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP040C300C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP045C200C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP047S180C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP050S155C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP051C300C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP068C300C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP090C200C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP090S155C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP112C300C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP140C200C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SP200C200C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY014C165C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY015C200C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY016C180C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY017C165C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY019C180C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: SY028C160C_device = geomAnd(spiral_body geomGetTexted(spiral_inddef INDDEF_te...

Executing: spiral_body_named_typec = geomCat(SY014C165C_device SP014S300C_device SY015C2...

Executing: spiral_body_named = geomCat(spiral_body_named_typet spiral_body_named_typed s...

Executing: spiral_body_unknown = geomAndNot(spiral_body spiral_body_named)

Executing: inddef_bad = geomButtOrOver(INDDEF spiral_body_unknown)
	   errorLayer(inddef_bad "ERC Warning : Name of Spiral not identified")

Executing: inddef_bad_all = geomAvoiding(INDDEF spiral_body_named)
	   errorLayer(inddef_bad_all "ERC Warning : INDDEF does not define a correct spiral or is not valid for this process")

Executing: bad_spirlay_1 = geomAnd(INDDEF DIFF)

Executing: bad_spirlay_2 = geomAnd(INDDEF implant)

Executing: bad_spirlay_3 = geomAnd(INDDEF POLY1)

Executing: bad_spirlay_4 = geomAnd(INDDEF POLY2)

Executing: bad_spirlay_5 = geomAnd(INDDEF via_cont_pin)

Executing: bad_spirlay_6_1 = geomOr(geomAnd(INDDEF MET1) geomAnd(INDDEF MET2))

Executing: bad_spirlay_6 = geomOr(bad_spirlay_6_1 geomAnd(INDDEF VIA2))

Executing: bad_spirlay_all = geomOr(bad_spirlay_1 geomOr(bad_spirlay_2 geomOr(bad_spirla...

Executing: bad_spirlay_all_1 = geomAndNot(bad_spirlay_all geomButtOrOver(INDDEF spiral_b...
	   errorLayer(bad_spirlay_all_1 "ERC Warning : illegal layer under spiral")

Executing: inddef_texted_all = geomGetTexted(INDDEF INDDEF_text "*")

Executing: inddef_not_texted = geomAndNot(INDDEF inddef_texted_all)
	   errorLayer(inddef_not_texted "ERC Warning : Each INDDEF shape must be marked with a single INDDEF text label")

Executing: inddef_text_shape = geomTextShape(INDDEF_text)

Executing: inddef_text_shape_bad = geomEnclose(INDDEF inddef_text_shape (keep > 1))
	   errorLayer(inddef_text_shape_bad "ERC Warning : multiple text on INDEF")

Executing: rmet1_1 = geomAnd(met1_withslots geomOr(METRES MET1RES))

Executing: rmet1_trm = geomAnd(geomAndNot(geomSize(rmet1_1 0.1) rmet1_1) met1_withslots)

Executing: rmet1_2 = geomGetRectangle(rmet1_1)

Executing: errorLayer(geomAndNot(rmet1_1 rmet1_2) "Error: MET1 resistors (shorts) must be rectangular")

Executing: RMET1_device = geomButtOrOver(rmet1_2 rmet1_trm (keep == 2))

Executing: errorLayer(geomAndNot(rmet1_2 RMET1_device) "Error: Number of MET1 resistor terminals != 2")

Executing: rmet2_1 = geomAnd(met2_withslots geomOr(METRES MET2RES))

Executing: rmet2_trm = geomAnd(geomAndNot(geomSize(rmet2_1 0.1) rmet2_1) met2_withslots)

Executing: rmet2_2 = geomGetRectangle(rmet2_1)

Executing: errorLayer(geomAndNot(rmet2_1 rmet2_2) "Error: MET2 resistors (shorts) must be rectangular")

Executing: RMET2_device = geomButtOrOver(rmet2_2 rmet2_trm (keep == 2))

Executing: errorLayer(geomAndNot(rmet2_2 RMET2_device) "Error: Number of MET2 resistor terminals != 2")

Executing: rmet3_1 = geomAnd(met3_withslots geomOr(METRES MET3RES))

Executing: rmet3_trm = geomAnd(geomAndNot(geomSize(rmet3_1 0.1) rmet3_1) met3_withslots)

Executing: rmet3_2 = geomGetRectangle(rmet3_1)

Executing: errorLayer(geomAndNot(rmet3_1 rmet3_2) "Error: MET3 resistors (shorts) must be rectangular")

Executing: RMET3_device = geomButtOrOver(rmet3_2 rmet3_trm (keep == 2))

Executing: errorLayer(geomAndNot(rmet3_2 RMET3_device) "Error: Number of MET3 resistor terminals != 2")

Executing: rmet4_1 = geomAnd(met4_withslots geomOr(METRES MET4RES))

Executing: rmet4_trm = geomAnd(geomAndNot(geomSize(rmet4_1 0.1) rmet4_1) met4_withslots)

Executing: rmet4_2 = geomGetRectangle(rmet4_1)

Executing: errorLayer(geomAndNot(rmet4_1 rmet4_2) "Error: MET4 resistors (shorts) must be rectangular")

Executing: RMET4_device = geomButtOrOver(rmet4_2 rmet4_trm (keep == 2))

Executing: errorLayer(geomAndNot(rmet4_2 RMET4_device) "Error: Number of MET4 resistor terminals != 2")

Executing: met1_withslots_trunc = geomAndNot(met1_withslots RMET1_device)

Executing: met2_withslots_trunc = geomAndNot(met2_withslots RMET2_device)

Executing: met3_withslots_trunc = geomAndNot(met3_withslots RMET3_device)

Executing: m1m2_commonx = geomStraddle(geomAnd(met1_withslots_trunc met2_withslots_trunc...

Executing: RVIA1_device = geomAnd(m1m2_commonx METRES_VIA1)

Executing: errorLayer(geomAnd(geomButtOrOver(geomAndNot(m1m2_commonx RVIA1_device) RVIA1_device) VIA1) "RVIA1 Definition layer: does not open all via conncetion, is shorted")

Executing: errorLayer(geomGetEdge(METRES_VIA1 inside geomButtOrOver(VIA1 RVIA1_device)) "RVIA1 Definition layer: truncates via1, device shorted")

Executing: errorLayer(geomAvoiding(METRES_VIA1 RVIA1_device) "RVIA1 Definition layer: does not define a device")

Executing: errorLayer(geomCat(geomAnd(METRES_VIA1 METRES) geomAnd(METRES_VIA1 MET1RES) geomAnd(METRES_VIA1 MET2RES)) "RVIA1 Definition layer: over METRES")

Executing: m2m3_commonx = geomStraddle(geomAnd(met2_withslots_trunc met3_withslots_trunc...

Executing: RVIA2_device = geomAnd(m2m3_commonx METRES_VIA2)

Executing: errorLayer(geomAnd(geomButtOrOver(geomAndNot(m2m3_commonx RVIA2_device) RVIA2_device) VIA2) "RVIA2 Definition layer: does not open all via conncetion, is shorted")

Executing: errorLayer(geomGetEdge(METRES_VIA2 inside geomButtOrOver(VIA2 RVIA2_device)) "RVIA2 Definition layer: truncates via2, device shorted")

Executing: errorLayer(geomAvoiding(METRES_VIA2 RVIA2_device) "RVIA2 Definition layer : does not define a device")

Executing: errorLayer(geomCat(geomAnd(METRES_VIA2 METRES) geomAnd(METRES_VIA2 MET2RES) geomAnd(METRES_VIA2 MET3RES)) "RVIA2 Definition layer: over METRES")

Executing: met4_withslots_trunc = geomAndNot(met4_withslots RMET4_device)

Executing: m3m4_commonx = geomStraddle(geomAnd(met3_withslots_trunc met4_withslots_trunc...

Executing: RVIA3_device = geomAnd(m3m4_commonx METRES_VIA3)

Executing: errorLayer(geomAnd(geomButtOrOver(geomAndNot(m3m4_commonx RVIA3_device) RVIA3_device) VIA3) "RVIA3 Definition layer: does not open all via conncetion, is shorted")

Executing: errorLayer(geomGetEdge(METRES_VIA3 inside geomButtOrOver(VIA3 RVIA3_device)) "RVIA3 Definition layer: truncates via3, device shorted")

Executing: errorLayer(geomAvoiding(METRES_VIA3 RVIA3_device) "RVIA3 Definition layer : does not define a device")

Executing: errorLayer(geomCat(geomAnd(METRES_VIA3 METRES) geomAnd(METRES_VIA3 MET2RES) geomAnd(METRES_VIA3 MET3RES)) "RVIA3 Definition layer: over METRES")

Executing: net_met1 = geomAndNot(met1_withslots spiral_body)

Executing: net_met2 = geomAndNot(met2_withslots spiral_body)

Executing: net_met3 = geomAndNot(met3_withslots spiral_body)

Executing: net_via1 = geomAndNot(VIA1 spiral_body)

Executing: net_via2_met2 = geomAndNot(via2_met2 spiral_body)

Executing: net_metcap = geomCat(METCAP)

Executing: net_met4 = geomAndNot(met4_withslots spiral_body)

Executing: net_via3 = geomAndNot(VIA3 spiral_body)

Executing: p1_not_bondpad = geomAvoiding(POLY1 net_bondpad)

Executing: POLY1_pinshape_bad = geomOutside(POLY1_pinshape net_poly1)
	   errorLayer(POLY1_pinshape_bad "ERROR : POLY1 pin outside poly1")

Executing: MET1_pinshape_bad = geomOutside(MET1_pinshape net_met1)
	   errorLayer(MET1_pinshape_bad "ERROR : MET1 pin outside met1")

Executing: MET2_pinshape_bad = geomOutside(MET2_pinshape net_met2)
	   errorLayer(MET2_pinshape_bad "ERROR : MET2 pin outside met2")

Executing: MET3_pinshape_bad = geomAvoiding(geomOutside(MET3_pinshape net_met3) INDDEF)
	   errorLayer(MET3_pinshape_bad "ERROR : MET3 pin outside met3")

Executing: MET4_pinshape_bad = geomAvoiding(geomOutside(MET4_pinshape net_met4) INDDEF)
	   errorLayer(MET4_pinshape_bad "ERROR : MET4 pin outside met4")

Executing: PAD_pinshape_bad = geomOutside(PAD_pinshape net_met4)
	   errorLayer(PAD_pinshape_bad "ERROR : PAD pin outside pad metal")

Executing: net_poly1 = geomOr(net_poly1 POLY1_pinshape)

Executing: net_met1 = geomOr(net_met1 MET1_pinshape)

Executing: net_met2 = geomOr(net_met2 MET2_pinshape)

Executing: net_met3 = geomOr(net_met3 MET3_pinshape)

Executing: net_met4 = geomOr(net_met4 MET4_pinshape)

Executing: net_optdef = geomOr(OPTDEF)

Executing: geomConnect((label POLY1_pintext net_poly1 POLY1_pinshape) (label MET1_pintex...

Executing: geomStamp(net_nwell net_welltap)

Executing: (saveInterconnect (net_ndiff "ndiff") (net_ndiffcon "CONT") (net_pdiff "pdiff...

Executing: hvdef_iso_all = geomGetTexted(HVDEF HVDEF_text "*_ISO_REV*")

Executing: nmosrf_for_stamping1 = geomCat(NMOSRF_device)

Executing: geomStamp(nmosrf_for_stamping1 net_poly1 multConnect "NMOSRF_OPEN_GATE")

Executing: pmosrf_for_stamping1 = geomCat(PMOSRF_device)

Executing: geomStamp(pmosrf_for_stamping1 net_poly1 multConnect "PMOSRF_OPEN_GATE")

Executing: nmosrf_trans_l1 = drc(nmosrf_trans (width < 4.0) opposite parallel)

Executing: nmosrf_trans_l2 = drc(nmosrf_trans ((0.35 <= width) <= 0.35) opposite parallel)

Executing: nmosrf_trans_lerr = geomAndNot(nmosrf_trans_l1 nmosrf_trans_l2)
	   errorLayer(nmosrf_trans_lerr "NMOSRF Element rule : fixed length = 0.35")

Executing: pmosrf_trans_l1 = drc(pmosrf_trans (width < 4.0) opposite parallel)

Executing: pmosrf_trans_l2 = drc(pmosrf_trans ((0.35 <= width) <= 0.35) opposite parallel)

Executing: pmosrf_trans_lerr = geomAndNot(pmosrf_trans_l1 pmosrf_trans_l2)
	   errorLayer(pmosrf_trans_lerr "PMOSRF Element rule : fixed length = 0.35")

Executing: nmosrf_w_edge = geomGetEdge(nmosrf_trans butting net_ndiff)

Executing: nmosrf_w_edge_bad1 = geomGetLength(nmosrf_w_edge ((4.95 <= ignore) <= 5.05) c...

Executing: nmosrf_w_edge_bad2 = geomGetLength(nmosrf_w_edge_bad1 ((9.95 <= ignore) <= 10...
	   errorLayer(nmosrf_w_edge_bad2 "NMOSRF Element Rule : Gate width must be 5.0 U or 10 U")

Executing: pmosrf_w_edge = geomGetEdge(pmosrf_trans butting net_pdiff)

Executing: pmosrf_w_edge_bad1 = geomGetLength(pmosrf_w_edge ((4.95 <= ignore) <= 5.05) c...

Executing: pmosrf_w_edge_bad2 = geomGetLength(pmosrf_w_edge_bad1 ((9.95 <= ignore) <= 10...
	   errorLayer(pmosrf_w_edge_bad2 "PMOSRF Element Rule : Gate width must be 5.0 U or 10 U")

Executing: nmosrf_w_edge_good5 = geomSize(geomGetLength(nmosrf_w_edge ((4.95 <= keep) <=...

Executing: nmosrf_w_edge_good10 = geomSize(geomGetLength(nmosrf_w_edge_bad1 ((9.95 <= ke...

Executing: nmosrf_trans5_all = geomButtOrOver(nmosrf_trans nmosrf_w_edge_good5)

Executing: nmosrf_trans5_bad = geomEnclose(NMOSRF_device nmosrf_trans5_all (keep > 40))
	   errorLayer(nmosrf_trans5_bad "NMOSRF Element rule stripe width 5 U : max width = 200 U")

Executing: nmosrf_trans10_all = geomButtOrOver(nmosrf_trans nmosrf_w_edge_good10)

Executing: nmosrf_trans10_bad = geomEnclose(NMOSRF_device nmosrf_trans10_all (keep > 20))
	   errorLayer(nmosrf_trans10_bad "NMOSRF Element rule stripe width 10 U : max width = 200 U")

Executing: pmosrf_w_edge_good5 = geomSize(geomGetLength(pmosrf_w_edge ((4.95 <= keep) <=...

Executing: pmosrf_w_edge_good10 = geomSize(geomGetLength(pmosrf_w_edge_bad1 ((9.95 <= ke...

Executing: pmosrf_trans5_all = geomButtOrOver(pmosrf_trans pmosrf_w_edge_good5)

Executing: pmosrf_trans5_bad = geomEnclose(PMOSRF_device pmosrf_trans5_all (keep > 30))
	   errorLayer(pmosrf_trans5_bad "PMOSRF Element rule stripe width 5 U : max width = 150 U")

Executing: pmosrf_trans10_all = geomButtOrOver(pmosrf_trans pmosrf_w_edge_good10)

Executing: pmosrf_trans10_bad = geomEnclose(PMOSRF_device pmosrf_trans10_all (keep > 15))
	   errorLayer(pmosrf_trans10_bad "PMOSRF Element rule stripe width 10 U : max width = 150 U")

Executing: pnpvert10_ntub = geomButtOrOver(NTUB VERT10_device)

Executing: pnpvert10_ntub_good = geomGetLength(pnpvert10_ntub ((55.1 < keep) < 55.3) con...

Executing: pnpvert10_ntub_bad = geomAndNot(pnpvert10_ntub pnpvert10_ntub_good)
	   errorLayer(pnpvert10_ntub_bad "VERT10_P2 Element Rule : Base Ntub Perimeter/4 = 13.8")

Executing: vert10_ptap_inside_1 = geomButtOrOver(geomHoles(net_pdiff (area < 1000.0)) VE...

Executing: vert10_ptap_inside_2 = geomGetLength(vert10_ptap_inside_1 ((59.5 < keep) < 59...

Executing: vert10_ptap_inside = geomAndNot(vert10_ptap_inside_1 vert10_ptap_inside_2)
	   errorLayer(vert10_ptap_inside "VERT10_P3 Element Rule : Ptap Inside Perimeter/4 = 14.9")

Executing: vert10_enc_good = drc(pnpvert10_ntub net_ndiff ((0.45 <= enc) <= 0.45) parall...

Executing: vert10_enc_all = drc(pnpvert10_ntub net_ndiff (enc < 8.0) parallel opposite)

Executing: vert10_enc_bad = geomAndNot(vert10_enc_all vert10_enc_good)
	   errorLayer(vert10_enc_bad "VERT10_E1 Element Rule : NTUB enclosure of ntap = 0.45")

Executing: pnplat2_peri_good = geomGetLength(pnplat ((7.95 < keep) < 8.05) contiguous fig)

Executing: pnplat2_peri_bad = geomAndNot(pnplat2_e pnplat2_peri_good)
	   errorLayer(pnplat2_peri_bad "LAT2_P1 Element Rule : Emitter Perimeter/4 = 2")

Executing: pnplat2_p2_elem_all = geomButtOrOver(pdiff_1 LAT2_device)

Executing: pnplat2_p2_elem_good = geomGetLength(pnplat2_p2_elem_all ((24.7 < keep) < 24....

Executing: pnplat2_p2_elem_bad = geomAndNot(pnplat2_p2_elem_all pnplat2_p2_elem_good)
	   errorLayer(pnplat2_p2_elem_bad "LAT2_P2 Element Rule : Collector net_pdiff Perimeter/4 = 6.2")

Executing: pnplat2_ntub_all = geomButtOrOver(NTUB LAT2_device)

Executing: pnplat2_ntub_good = geomGetLength(pnplat2_ntub_all ((39.9 < keep) < 40.1) con...

Executing: pnplat2_ntub_bad = geomAndNot(pnplat2_ntub_all pnplat2_ntub_good)
	   errorLayer(pnplat2_ntub_bad "LAT2_P3 Element Rule : Base Ntub Perimeter/4 = 10.0")

Executing: pnplat2_p4_all = geomButtOrOver(geomHoles(net_pdiff (area < 200.0)) LAT2_device)

Executing: pnplat2_p4_good = geomGetLength(pnplat2_p4_all ((44.3 < keep) < 44.5) contigu...

Executing: pnplat2_p4_bad = geomAndNot(pnplat2_p4_all pnplat2_p4_good)
	   errorLayer(pnplat2_p4_bad "LAT2_P4 Element Rule : Ptap Inside Perimeter/4 = 11.1")

Executing: pnplat2_w1_all = drc(LAT2_device (width < 1.5) parallel opposite)

Executing: pnplat2_w1_good = drc(LAT2_device ((1.0 <= width) <= 1.0) parallel opposite)

Executing: pnplat2_w1_bad = geomAndNot(pnplat2_w1_all pnplat2_w1_good)
	   errorLayer(pnplat2_w1_bad "LAT2_W1 Element Rule : Lateral Base Width = 1")

Executing: pnplat2_e1_all = drc(pnplat2_ntub_all net_ndiff (enc < 1.0) parallel opposite)

Executing: pnplat2_e1_good = drc(pnplat2_ntub_all net_ndiff ((0.45 <= enc) <= 0.45) para...

Executing: pnplat2_e1_bad = geomAndNot(pnplat2_e1_all pnplat2_e1_good)
	   errorLayer(pnplat2_e1_bad "LAT2_E1 Element Rule : NTUB enclosure of ntap = 0.45")

Executing: pnplat2_g1_all = geomButtOrOver(net_poly1 LAT2_device)

Executing: geomStamp(pnplat2_g1_all net_poly1)

Executing: pnplat2_g1_good = geomGetNet(pnplat2_g1_all "*VDD*" "*VCC*" "*vdd*" "*vcc*")

Executing: pnplat2_g1_bad = geomAndNot(pnplat2_g1_all pnplat2_g1_good)
	   errorLayer(pnplat2_g1_bad "LAT2_G1 Element Rule : gate of lat2 transistor not connected to VDD or VCC")

Executing: nmosh_draindiff = geomButtOrOver(geomAndNot(net_ndiff nmosh_d_fill) nmosh_d_t...

Executing: nmosh_s1_good = drc(nmosh_draindiff nmoshall ((2.8 <= sep) <= 2.8) opposite p...

Executing: nmosh_s1_all = drc(nmosh_draindiff nmoshall (sep < 5.5) opposite parallel)

Executing: nmosh_s1_bad = geomAndNot(nmosh_s1_all nmosh_s1_good)
	   errorLayer(nmosh_s1_bad "NMOSH_S1/NMOSMH_S1 Element Rule : Gate Drain Diff spacing = 2.8")

Executing: nmosh_e1_good = drc(net_poly1 nmoshall ((0.6 <= enc) <= 0.6) opposite parallel)

Executing: nmosh_e1_all = drc(net_poly1 nmoshall ((0 < enc) < 1.5) opposite parallel)

Executing: nmosh_e1_bad = geomAndNot(nmosh_e1_all nmosh_e1_good)
	   errorLayer(nmosh_e1_bad "NMOSH_E1/NMOSMH_E1 Element Rule : Poly Extension of gate = 0.6 U")

Executing: nmosh_l1_x = geomOr(nmosh_d_fill geomOr(nmoshall geomButtOrOver(net_ndiff nmo...

Executing: nmosh_l1_edge = geomGetEdge(nmoshall coincident nmosh_l1_x)

Executing: nmosh_l1_bad = geomGetLength(nmosh_l1_edge ((2.95 <= ignore) <= 3.05) contigu...
	   errorLayer(nmosh_l1_bad "NMOSH_L1/NMOSMH_L1 Element Rule : Gate Length = 3.0 U")

Executing: nmosh_x1 = geomGetVertex(nmosh_draindiff (ignore == 8))
	   errorLayer(nmosh_x1 "NMOSH_X1/NMOSMH_X1 Element Rule : drain angles = 45, 8 vertices")

Executing: nmosh_x1 = geomGetAngledEdge(nmosh_draindiff ((44.9 < keep) < 45.1))

Executing: nmosh_x1_bad = geomGetLength(nmosh_x1 ((0.83 <= ignore) <= 0.86) contiguous)
	   errorLayer(nmosh_x1_bad "NMOSH_X1/NMOSMH_X1 Element Rule : edge length = 0.6 * sqrt(2)")

Executing: cvart_w = geomGetEdge(CVART_device coincident POLY1)

Executing: cvarm_w = geomGetEdge(CVARM_device coincident POLY1)

Executing: cvart_l = geomGetEdge(CVART_device coincident DIFF)

Executing: cvarm_l = geomGetEdge(CVARM_device coincident DIFF)

Executing: cvart_w_bad = geomGetLength(cvart_w (keep < 10) contiguous)
	   errorLayer(cvart_w_bad "CVART_MIN_W Element Rule : cvart min w length = 10.0")

Executing: cvarm_w_bad = geomGetLength(cvarm_w (keep < 10) contiguous)
	   errorLayer(cvarm_w_bad "CVARM_MIN_W Element Rule : cvarm min w length = 10.0")

Executing: cvart_l_bad = geomGetLength(cvart_l (keep < 2) contiguous)
	   errorLayer(cvart_l_bad "CVART_MIN_L Element Rule : cvart min l length = 2.0")

Executing: cvarm_l_bad = geomGetLength(cvarm_l (keep < 2) contiguous)
	   errorLayer(cvarm_l_bad "CVART_MIN_L Element Rule : cvart min l length = 2.0")

Executing: cvar_w1_all = drc(cvar (width < 3.0) parallel opposite)

Executing: cvar_w1_good = drc(cvar ((0.65 <= width) <= 0.65) parallel opposite)

Executing: cvar_w1_bad = geomAndNot(cvar_w1_all cvar_w1_good)
	   errorLayer(cvar_w1_bad "CVAR_W1 Element Rule : Gate unit width = 0.65")

Executing: cvar_gate_w = geomGetEdge(cvar coincident net_poly1)

Executing: cvar_l1_bad = geomGetLength(cvar_gate_w ((6.55 <= ignore) <= 6.65) contiguous)
	   errorLayer(cvar_l1_bad "CVAR_L1 Element Rule : Gate unit length = 6.60")

Executing: cvar_x1_all = drc(cvar_gate_w (sep < 2.0) parallel opposite)

Executing: cvar_x1_good = drc(cvar_gate_w ((1.0 <= sep) <= 1.0) parallel opposite)

Executing: cvar_x1_bad = geomAndNot(cvar_x1_all cvar_x1_good)
	   errorLayer(cvar_x1_bad "CVAR_X1 Element Rule : Gate spacing 1.0")

Executing: cvar_ndiff = geomEnclose(ndiff_1 cvar)

Executing: cvar_y1_all = drc(cvar_ndiff (sep < 3.0) parallel opposite)

Executing: cvar_y1_good = drc(cvar_ndiff ((1.6 <= sep) <= 1.6) parallel opposite)

Executing: cvar_y1_bad = geomAndNot(cvar_y1_all cvar_y1_good)
	   errorLayer(cvar_y1_bad "CVAR_Y1 Element Rule : Diff spacing 1.6")

Executing: zdiode_bad = geomAndNot(zdiode_all zdiode_02)
	   errorLayer(zdiode_bad "Illegal device : Zener diode must have 0.2 implant ovlp")

Executing: zdiode_bad_1 = geomOr(zdiode_bad)
	   errorLayer(zdiode_bad_1 "ZD2SM24_O1 Element Rule : must have 0.2 U implant ovlp")

Executing: zdiode_a = drc(zdiode_all (width < 0.4) opposite parallel)

Executing: zdiode_nimpl = geomGetEdge(zdiode_a coincident net_ndiff)

Executing: zdiode_pimpl = geomGetEdge(zdiode_a coincident net_pdiff)

Executing: zdiode_w1_n = geomGetLength(zdiode_nimpl ((0.4 <= ignore) <= 0.41) contiguous)
	   errorLayer(zdiode_w1_n "ZD2SM24_W1 Element Rule : must have 0.40 U n-implant edge length")

Executing: zdiode_w1_p = geomGetLength(zdiode_pimpl ((0.4 <= ignore) <= 0.41) contiguous)
	   errorLayer(zdiode_w1_p "ZD2SM24_W1 Element Rule : must have 0.40 U p-implant edge length")

Executing: phdnw_a850_b850 = geomOr(diode_phdnwa850 diode_phdnwb850)

Executing: phdn1 = geomAnd(phdnw_a850_b850 PAD)

Executing: phdn2 = geomAnd(phdnw_a850_b850 POLY1)

Executing: phdn3 = geomAnd(phdnw_a850_b850 POLY2)

Executing: phdn4 = geomAnd(phdnw_a850_b850 MET1)

Executing: phdn5 = geomAnd(phdnw_a850_b850 MET2)

Executing: phdn6 = geomAnd(phdnw_a850_b850 MET3)

Executing: phdn7 = geomAnd(phdnw_a850_b850 CONT)

Executing: phdn8 = geomAnd(phdnw_a850_b850 VIA1)

Executing: phdn9 = geomAnd(phdnw_a850_b850 VIA2)

Executing: phdn10 = geomAnd(phdnw_a850_b850 MIDOX)

Executing: phdn11 = geomAnd(phdnw_a850_b850 PPLUS)

Executing: phdn12 = geomAnd(phdnw_a850_b850 HRES)

Executing: phdn14 = geomAnd(phdnw_a850_b850 RESDEF)

Executing: phdn15 = geomAnd(phdnw_a850_b850 TUBDEF)

Executing: phdn16 = geomAnd(OPTDEF DIFCUT)

Executing: phdn17 = geomAnd(phdnw_a850_b850 DIODE)

Executing: phdn18 = geomAnd(phdnw_a850_b850 ZENER)

Executing: phdn_bad_lay = geomCat(phdn1 phdn2 phdn3 phdn4 phdn5 phdn6 phdn7 phdn8 phdn9 ...
	   errorLayer(phdn_bad_lay "PHDNWA850/PHDNWB850 : Illegal layer on photo diode")

Executing: phdn19 = geomAnd(phdnw_a850_b850 MET4)

Executing: phdn20 = geomAnd(phdnw_a850_b850 VIA3)

Executing: phdn_bad_lay1 = geomCat(phdn19 phdn20)
	   errorLayer(phdn_bad_lay1 "PHDNWA850/PHDNWB850 : Illegal layer on photo diode : met4,via3")

Executing: phdn_ntub = geomButtOrOver(net_nwell geomOr(diode_phdnwa850 diode_phdnwb850))

Executing: phdn_ntub_a850 = geomButtOrOver(net_nwell diode_phdnwa850)

Executing: phdn_ntub_b850 = geomButtOrOver(net_nwell diode_phdnwb850)

Executing: phdna = geomAnd(phdn_ntub PAD)

Executing: phdnb = geomAnd(phdn_ntub POLY1)

Executing: phdnc = geomAnd(phdn_ntub POLY2)

Executing: phdnd = geomAnd(phdn_ntub MIDOX)

Executing: phdne = geomAnd(phdn_ntub PPLUS)

Executing: phdnf = geomAnd(phdn_ntub HRES)

Executing: phdng = geomAnd(phdn_ntub RESDEF)

Executing: phdnh = geomAnd(phdn_ntub TUBDEF)

Executing: phdni = geomAnd(phdn_ntub DIODE)

Executing: phdn_ntub_bad = geomCat(phdna phdnb phdnc phdnd phdne phdnf phdng phdnh phdni)
	   errorLayer(phdn_ntub_bad "PHDNWA850/PHDNWB850 : ntub must not enclose any other data")

Executing: phdn_bad_optdef_1 = geomStraddle(OPTDEF net_nwell)
	   errorLayer(phdn_bad_optdef_1 "PHDNWA850/PHDNWB850 : ntub does not enclose OPTDEF")

Executing: phdn_bad_optdef_2 = geomAndNot(OPTDEF phdnw_a850_b850)
	   errorLayer(phdn_bad_optdef_2 "PHDNWA850/PHDNWB850 : OPTDEF does not cover ntub and ndiff totally")

Executing: phdn_bad_optdef_3 = geomOutside(OPTDEF phdnw_a850_b850)
	   errorLayer(phdn_bad_optdef_3 "PHDNWA850/PHDNWB850 : OPTDEF layer outside of ntub and ndiff")

Executing: optdef_texted_all = geomGetTexted(OPTDEF OPTDEF_text "*")

Executing: optdef_not_texted = geomAndNot(OPTDEF optdef_texted_all)
	   errorLayer(optdef_not_texted "PHDNWA850/PHDNWB850 : text label for light terminal (P) missing on top level of hierarchie , please add label with terminal name on layer DEVDEF opto for correct extraction")

Executing: phdopt1 = geomAnd(OPTDEF POLY1)

Executing: phdopt2 = geomAnd(OPTDEF POLY2)

Executing: phdopt3 = geomAnd(OPTDEF MET1)

Executing: phdopt4 = geomAnd(OPTDEF MET2)

Executing: phdopt5 = geomAnd(OPTDEF MET3)

Executing: phdopt1 = geomCat(phdopt1 phdopt2 phdopt3 phdopt4 phdopt5)
	   errorLayer(phdopt1 "PHR001 PHDNWA850/PHDNWB850 : Illegal layer on photo diode OPTDEF  poly1/poly2/met1/met2/met3/met4")

Executing: phdopt6 = geomAnd(OPTDEF MET4)
	   errorLayer(phdopt6 "PHR001 PHDNWA850/PHDNWB850 : Illegal layer on photo diode  OPTDEF : met4")

Executing: phdbar1 = geomAnd(PAD_BARC POLY1)

Executing: phdbar2 = geomAnd(PAD_BARC POLY2)

Executing: phdbar3 = geomAnd(PAD_BARC MET1)

Executing: phdbar4 = geomAnd(PAD_BARC MET2)

Executing: phdbar5 = geomAnd(PAD_BARC MET3)

Executing: phdbar1 = geomCat(phdbar1 phdbar2 phdbar3 phdbar4 phdbar5)
	   errorLayer(phdbar1 "BRR001 PHDNWB850 : Illegal layer on photo diode PAD_BARC  poly1/poly2/met1/met2/met3/met4")

Executing: phdbar6 = geomAnd(PAD_BARC MET4)
	   errorLayer(phdbar6 "BRR001 PHDNWB850 : Illegal layer on photo diode PAD_BARC : met4")

Executing: phdn_barc_rect = geomGetRectangle(PAD_BARC)

Executing: phdn_barc_bad_rect = geomAndNot(PAD_BARC phdn_barc_rect)
	   errorLayer(phdn_barc_bad_rect "PHDNWB850 PAD_BARC : PAD_BARC not rectangle, ATTENTION : data prep problem also, cannot be scaled by 1.5 percent by side if no rect")

Executing: phdn_min_pad_barc_width = drc(PAD_BARC (width < 5))

Executing: xmy_substrate = geomCat(substrate_all)

Executing: xchipedge_exist = geomEnclose(xmy_substrate CHIPEDGE)

Executing: xchipedge_empty = geomOutside(xmy_substrate CHIPEDGE)

Executing: xchip_edge_for_check = geomOr(geomAnd(xchipedge_exist CHIPEDGE) xchipedge_empty)

Executing: pad_barc_single_design = geomEnclose(xchip_edge_for_check geomAndNot(PAD_BARC...

Executing: pad_barc_mult_design = geomEnclose(xchip_edge_for_check geomAndNot(PAD_BARC S...

Executing: phdn_max_barc_width_single = geomGetLength(geomAnd(PAD_BARC pad_barc_single_d...
	   errorLayer(phdn_max_barc_width_single "W2BR :  Maximum PAD_BARC width (1 PAD_BARC shape in design) = 150")

Executing: phdn_max_barc_width_multip = geomGetLength(geomAnd(PAD_BARC pad_barc_mult_des...
	   errorLayer(phdn_max_barc_width_multip "W3BR :  Maximum PAD_BARC width (multiple PAD_BARC shapes in design) = 50")

Executing: phdn_s1brbr = drc(PAD_BARC (sep < 7))

Executing: phdn_s1brm1 = drc(MET1 PAD_BARC (sep < 1.1))

Executing: phdn_s1brm2 = drc(MET2 PAD_BARC (sep < 1.4))

Executing: phdn_s1brm3 = drc(MET3 PAD_BARC (sep < 1.6))

Executing: phdn_s1brm4 = drc(MET4 PAD_BARC (sep < 2.3))

Executing: diode_phdnwa850_exists = geomEnclose(xchip_edge_for_check diode_phdnwa850)

Executing: diode_phdnwb850_exists = geomEnclose(xchip_edge_for_check diode_phdnwb850)

Executing: phd_a850_b850 = geomAnd(geomAnd(diode_phdnwa850_exists diode_phdnwb850_exists...
	   errorLayer(phd_a850_b850 "PHDNWA850/PHDNWB850 both on same design not allowed, different process option")

Executing: diode_phdnwa850_pcoat = geomAnd(diode_phdnwa850_exists PCOAT)
	   errorLayer(diode_phdnwa850_pcoat "PHDNWA850 : PCOAT not allowed for this process")

Executing: diode_phdnwb850_pcoat = geomAnd(diode_phdnwb850_exists PCOAT)
	   errorLayer(diode_phdnwb850_pcoat "PHDNWB850 : PCOAT not allowed for this process")

Executing: phdn_min_ntub_width = drc(phdn_ntub_a850 (width < 5))

Executing: phdn_max_ntub_width = geomGetLength(phdn_ntub_a850 (keep > 150) fig)
	   errorLayer(phdn_max_ntub_width "PHDNWA850_W2 :  Maximum NTUB size (W and L) = 150")

Executing: phdn_rect = geomGetRectangle(diode_phdnwa850)

Executing: phdn_bad_rect = geomAndNot(diode_phdnwa850 phdn_rect)
	   errorLayer(phdn_bad_rect "PHDNWA850 W1/W2 : PHOTO diode is not square")

Executing: phdnwa_grow_area = geomAndNot(substrate_all net_pdiff)

Executing: geomSizeAnd(diode_phdnwa850 phdnwa_grow_area 0.05 2.0)

Executing: geomSizeAnd(diode_phdnwa850 phdnwa_grow_area 0.05 2.0)

Executing: geomSizeAnd(diode_phdnwa850 phdnwa_grow_area 0.05 2.0)

Executing: geomSizeAnd(diode_phdnwa850 phdnwa_grow_area 0.05 2.0)

Executing: geomSizeAnd(diode_phdnwa850 phdnwa_grow_area 0.05 2.0)

Executing: phdnwa_2 = geomGetEdge(phdnwa_1 outside net_pdiff)

Executing: phdnwa_3 = geomSize(geomSize(phdnwa_2 -0.2) 0.1)

Executing: errorLayer(geomAndNot(substrate_all geomAndNot(substrate_all phdnwa_3)) "PHDNWA850_S1 : miss substrate ptap Fixed PDIFF to NTUB spacing = 0.4")

Executing: phdn_well_good_1 = drc(phdn_ntub_a850 net_ndiff ((0.2 <= enc) <= 0.2) paralle...

Executing: phdn_well_all_1 = drc(phdn_ntub_a850 net_ndiff (enc < 2.0) parallel opposite)

Executing: phdn_well_bad_1 = geomAndNot(phdn_well_all_1 phdn_well_good_1)
	   errorLayer(phdn_well_bad_1 "PHDNWA850_E1 : Fixed NTUB enclosure of NDIFF = 0.2")

Executing: phdn_well_good_2 = drc(net_pdiff phdn_ntub_a850 ((0.4 <= sep) <= 0.4) paralle...

Executing: phdn_well_all_2 = drc(net_pdiff phdn_ntub_a850 (sep < 2) parallel opposite)

Executing: phdn_well_bad_2 = geomAndNot(phdn_well_all_2 phdn_well_good_2)
	   errorLayer(phdn_well_bad_2 "PHDNWA850_S1 : Fixed PDIFF to NTUB spacing = 0.4")

Executing: phdn_barc_b850 = geomButtOrOver(PAD_BARC phdn_ntub_b850)

Executing: phdn_min_barc_width = drc(phdn_barc_b850 (width < 5))

Executing: phdn_max_barc_width = geomGetLength(phdn_barc_b850 (keep > 150) fig)
	   errorLayer(phdn_max_barc_width "PHDNWB850_W2 : Maximum PAD_BARC size (W and L) = 150")

Executing: phdn_rect_b850 = geomGetRectangle(diode_phdnwb850)

Executing: phdn_bad_rect_b850 = geomAndNot(diode_phdnwb850 phdn_rect_b850)
	   errorLayer(phdn_bad_rect_b850 "PHDNWB850 W1/W2 : PHOTO diode is not square")

Executing: geomSizeAnd(diode_phdnwb850 phdnwa_grow_area 0.05 2.0)

Executing: geomSizeAnd(diode_phdnwb850 phdnwa_grow_area 0.05 2.0)

Executing: geomSizeAnd(diode_phdnwb850 phdnwa_grow_area 0.05 2.0)

Executing: geomSizeAnd(diode_phdnwb850 phdnwa_grow_area 0.05 2.0)

Executing: geomSizeAnd(diode_phdnwb850 phdnwa_grow_area 0.05 2.0)

Executing: phdnwb_2 = geomGetEdge(phdnwb_1 outside net_pdiff)

Executing: phdnwb_3 = geomSize(geomSize(phdnwb_2 -0.2) 0.1)

Executing: errorLayer(geomAndNot(substrate_all geomAndNot(substrate_all phdnwb_3)) "PHDNWB850_S1: miss substrate ptap Fixed PDIFF to NTUB spacing = 0.4")

Executing: phdn_well_good_1_b850 = drc(phdn_ntub_b850 net_ndiff ((0.2 <= enc) <= 0.2) pa...

Executing: phdn_well_all_1_b850 = drc(phdn_ntub_b850 net_ndiff (enc < 2.0) parallel oppo...

Executing: phdn_well_bad_1_b850 = geomAndNot(phdn_well_all_1_b850 phdn_well_good_1_b850)
	   errorLayer(phdn_well_bad_1_b850 "PHDNWB850_E1 : Fixed NTUB enclosure of NDIFF = 0.2")

Executing: phdn_well_good_2 = drc(net_pdiff phdn_ntub_b850 ((0.4 <= sep) <= 0.4) paralle...

Executing: phdn_well_all_2 = drc(net_pdiff phdn_ntub_b850 (sep < 2) parallel opposite)

Executing: phdn_well_bad_2 = geomAndNot(phdn_well_all_2 phdn_well_good_2)
	   errorLayer(phdn_well_bad_2 "PHDNWB850_S1 : Fixed PDIFF to NTUB spacing = 0.4")

Executing: phd_barc = geomButtOrOver(PAD_BARC diode_phdnwb850)

Executing: phd_barc_ndiff_good_2 = drc(net_ndiff phd_barc ((0.5 <= enc) <= 0.5) parallel...

Executing: phd_barc_ndiff_all_2 = drc(net_ndiff phd_barc (enc < 1.5) parallel opposite)

Executing: phd_barc_ndiff_bad_2 = geomAndNot(phd_barc_ndiff_all_2 phd_barc_ndiff_good_2)
	   errorLayer(phd_barc_ndiff_bad_2 "PHDNWB850_E2 : Fixed NDIFF enclosure of PAD_BARC = 0.5")

Executing: phbarc_1_grow_area = geomButtOrOver(net_ndiff diode_phdnwb850)

Executing: geomSizeAnd(PAD_BARC phbarc_1_grow_area 0.05 0.5)

Executing: geomSizeAnd(PAD_BARC phbarc_1_grow_area 0.05 0.5)

Executing: geomSizeAnd(PAD_BARC phbarc_1_grow_area 0.05 0.5)

Executing: phbarc_2 = geomGetEdge(phbarc_1 inside net_ndiff)

Executing: phbarc_3 = geomSize(geomGetEdge(OPTDEF inside net_ndiff) -1.2)

Executing: phbarc_4 = geomGetEdge(phbarc_2 outside phbarc_3)
	   errorLayer(phbarc_4 "PHDNWB850_E2 : Fixed NDIFF enclosure of PAD_BARC = 0.5")

Executing: phd_met1 = geomAnd(MET1 phdn_ntub_b850)

Executing: phd_met1_good_2 = drc(phd_met1 PAD_BARC ((1.2 <= sep) <= 1.2) parallel opposite)

Executing: phd_met1_all_2 = drc(phd_met1 PAD_BARC (sep < 2) parallel opposite)

Executing: phd_met1_bad_2 = geomAndNot(phd_met1_all_2 phd_met1_good_2)
	   errorLayer(phd_met1_bad_2 "PHDNWB850_S2 : Fixed MET1 to PAD_BARC spacing = 1.2")

Executing: sbd_cathode_diff = geomButtOrOver(ndiff_1 sbd_diode_definition)

Executing: sbd5_v1r003 = geomAnd(VIA1 sbdcon)
	   errorLayer(sbd5_v1r003 "V1R003 : VIA1 overlapping SBDCON is not allowed")

Executing: sbd5_s1cov1 = drc(VIA1 sbdcon (sep < 0.3))

Executing: sbdcon_bad1 = geomButtOrOver(sbd_anode_diff_drc sbdcon (keep > 1))
	   errorLayer(sbdcon_bad1 "SBD5 DIODE : multiple SBDCON")

Executing: sbdcon_bad3 = drc(DIFF geomAnd(sbd5_ndiff_1 CONT) (enc < 0.3))

Executing: sbdcon_w_good = drc(sbdcon ((0.4 <= width) <= 0.4) opposite parallel)

Executing: sbdcon_w_all = drc(sbdcon (width < 3.0) opposite parallel)

Executing: sbdcon_bad = geomAndNot(sbdcon_w_all sbdcon_w_good)
	   errorLayer(sbdcon_bad "SBD5_W DIODE fixed SBDCON width 0.4")

Executing: sbdcon_bad = geomContactCheck(sbdcon (width == 0.4) (length == 12) ignore)
	   errorLayer(sbdcon_bad "SBD5_W_L1 DIODE : SBDCON must have fixed L = 12 and fixed W = 0.4")

Executing: sbdcon_x1_good = drc(sbd_anode_diff_drc sbdcon ((0.3 <= enc) <= 0.3) opposite...

Executing: sbdcon_x1_all = drc(sbd_anode_diff_drc sbdcon (enc < 1.5) opposite parallel)

Executing: sbdcon_x1_bad = geomAndNot(sbdcon_x1_all sbdcon_x1_good)
	   errorLayer(sbdcon_x1_bad "SBD5_X1 DIFF enclosure of SBDCON 0.3")

Executing: sbdcon_x2_good = drc(sbd_anode_diff_drc ndiff_1 ((0.8 <= sep) <= 0.8) opposit...

Executing: sbdcon_x2_all = drc(sbd_anode_diff_drc ndiff_1 (sep < 1.5) opposite parallel)

Executing: sbdcon_x2_bad = geomAndNot(sbdcon_x2_all sbdcon_x2_good)
	   errorLayer(sbdcon_x2_bad "SBD5_X2 DIFF spacing 0.8")

Executing: sbdcon_x3_good = drc(sbd_anode_diff_drc NPLUS ((0.55 <= sep) <= 0.55) opposit...

Executing: sbdcon_x3_all = drc(sbd_anode_diff_drc NPLUS (sep < 1.5) opposite parallel)

Executing: sbdcon_x3_bad = geomAndNot(sbdcon_x3_all sbdcon_x3_good)
	   errorLayer(sbdcon_x3_bad "SBD5_X3 DIFF spacing 0.55")

Executing: sbdcon_x4_all = drc(NTUB sbd_cathode_diff (enc < 1))

Executing: sbd_x5_1 = drc(MET1 geomAnd(CONT sbd_cathode_diff) (enc < 0.3))

Executing: sbd_x5_2 = drc(MET1 geomAnd(CONT sbd_anode_diff_drc) (enc < 0.3))

Executing: sbd_ill1 = geomAnd(sbd_diode_definition PAD)

Executing: sbd_ill2 = geomAnd(sbd_diode_definition PPLUS)

Executing: sbd_ill3 = geomAnd(sbd_diode_definition RESDEF)

Executing: sbd_ill4 = geomAnd(sbd_diode_definition TUBDEF)

Executing: sbd_ill5 = geomAnd(sbd_diode_definition ZENER)

Executing: sbd_ill6 = geomAnd(sbd_diode_definition FIDEF)

Executing: sbd_ill7 = geomAnd(sbd_diode_definition POLY1)

Executing: sbd_ill8 = geomAnd(sbd_diode_definition POLY2)

Executing: sbd_ill_sum = geomCat(sbd_ill1 sbd_ill2 sbd_ill3 sbd_ill4 sbd_ill5 sbd_ill6 s...
	   errorLayer(sbd_ill_sum "SBD5 DIODE : Illegal layer on Schottky diode")

Executing: sbdcon_l = geomGetLength(sbdcon (keep > 1))

Executing: sbdc0_l_exp = geomSize(sbdcon_l 0.1 unmergedOut edges)

Executing: sbdc0_l_exp_grow = geomAndNot(geomGrow(sbdc0_l_exp 0.1 0) sbdc0_l_exp)

Executing: sbdc0_l_exp_grow_long = drc(sbdc0_l_exp_grow (area > 0.3))

Executing: sbdc0_l_exp_grow_short = geomGetRectangle(sbdc0_l_exp_grow (width == 0.1) (le...

Executing: ntub_sbd_all_hor = geomEnclose(NTUB sbdc0_l_exp_grow_short)

Executing: ntub_sbd_all_ver = geomEnclose(NTUB sbdc0_l_exp_grow_long)

Executing: sbdcon_bad_orient = geomAnd(ntub_sbd_all_hor ntub_sbd_all_ver)
	   errorLayer(sbdcon_bad_orient "SBD5_R1 : Multiple SBD5 in a shared NTUB shape must have the same orientation")

Executing: pfuse_out_ipdef = geomAndNot(DEVDEF_pfuse geomInside(DEVDEF_pfuse IPDEF))
	   errorLayer(pfuse_out_ipdef "PFR001 : DEVDEF_pfuse outside IPDEF is not allowed")

Executing: pfuse_over_resdef = geomAnd(RESDEF DEVDEF_pfuse)
	   errorLayer(pfuse_over_resdef "Error : RESDEF over DEVDEF_pfuse not allowed")

Executing: poly2_high_ohm_0 = geomAnd(HRES geomButtOrOver(POLY2 RESDEF))

Executing: poly2_high_ohm_1 = geomAnd(HRES geomAndNot(poly2_cut poly2_high_ohm_0))

Executing: poly2_high_ohm_2 = geomEnclose(geomHoles(poly2_high_ohm_1 innermost) poly2_hi...

Executing: poly2_high_ohm = geomAvoiding(poly2_high_ohm_1 poly2_high_ohm_2)
	   errorLayer(poly2_high_ohm "ERC Warning : This poly2 over HRES layer is high ohmic, but shorted for LVS")

Executing: cpmim_rfdef = geomAnd(CPMIM_device RFDEF)
	   errorLayer(cpmim_rfdef "CPMIM not supported over RFDEF")

Executing: cpmim_metcap = geomButtOrOver(METCAP CPMIM_device)

Executing: cpmim_poly2 = geomButtOrOver(POLY2 CPMIM_device)

Executing: cpmim_poly2_bad1 = geomAndNot(cpmim_metcap cpmim_poly2)

Executing: cpmim_poly2_bad2 = geomInside(cpoly METCAP)

Executing: cpmim_bad = geomCat(cpmim_poly2_bad1 cpmim_poly2_bad2)
	   errorLayer(cpmim_bad "CPMIM error : cpmim must be totally inside POLY2")

Executing: cpmim_bad_xor = geomXor(geomSize(cpmim_metcap 1.15) cpmim_poly2)
	   errorLayer(cpmim_bad_xor "E1P2MC : Fixed poly2 enclosure of metcap 1.15")

Executing: cpmim_bad_4 = geomAnd(cpmim_metcap geomButtOrOver(MET1 cpmim_poly2))
	   errorLayer(cpmim_bad_4 "CPMIM_R1 : CPMIM overlapping MET1 is not allowed")

Executing: met2_and_cpmim_cap = geomAnd(net_met2 CPMIM_device)

Executing: met3_and_cpmim_cap = geomAnd(net_met3 CPMIM_device)

Executing: poly1_and_cpmim_cap = geomAnd(net_poly1 CPMIM_device)

Executing: poly2_and_cpmim_cap = geomAnd(net_poly2 CPMIM_device)

Executing: geomStamp(met2_and_cpmim_cap net_met2)

Executing: geomStamp(met3_and_cpmim_cap net_met3)

Executing: geomStamp(poly1_and_cpmim_cap net_poly1)

Executing: geomStamp(poly2_and_cpmim_cap net_poly2)

Executing: cpmim_conn_err_1 = geomButtOrOver(met3_and_cpmim_cap poly1_and_cpmim_cap diff...
	   errorLayer(cpmim_conn_err_1 "CPMIM_R2 Element check: met3 metcap/poly1 plates of CPMIM not connected correctly")

Executing: cpmim_conn_err_2 = geomButtOrOver(met2_and_cpmim_cap poly2_and_cpmim_cap diff...
	   errorLayer(cpmim_conn_err_2 "CPMIM_R3 Element check: met2/poly2 plates of CPMIM not connected correctly")

Executing: width_fidef_w1pw = drc(FIDEF (width < 1.7))

Executing: spac_fidef_s1pwpw = drc(FIDEF (sepNotch < 1))

Executing: spac_fidef_ntub = drc(FIDEF geomAndNot(NTUB FIDEF) (sep < 6.5))

Executing: spac_hvdef_s1hvhv = drc(HVDEF (sepNotch < 0.1))

Executing: hvdef_texted_all = geomGetTexted(HVDEF HVDEF_text "*")

Executing: hvdef_not_texted = geomAndNot(HVDEF hvdef_texted_all)
	   errorLayer(hvdef_not_texted "HVR001 Each HVDEF shape must be marked with a single HVDEF text label")

Executing: nmos18t_hvdef = geomGetTexted(HVDEF HVDEF_text "NMOS18T_*")

Executing: nmos30m_hvdef = geomGetTexted(HVDEF HVDEF_text "NMOS30M_*")

Executing: nmos18t_hvdef_ok = geomGetTexted(HVDEF HVDEF_text "NMOS18T_REV_2.0")

Executing: nmos30m_hvdef_ok = geomGetTexted(HVDEF HVDEF_text "NMOS30M_REV_3.0")

Executing: nmos18t_hvdef_obsol = geomGetTexted(HVDEF HVDEF_text "NMOS18T_REV_1.0")
	   errorLayer(nmos18t_hvdef_obsol "HVR001 : Version of NMOS18T_REV1 obsolete")

Executing: nmos30m_hvdef_obsol = geomGetTexted(HVDEF HVDEF_text "NMOS30M_REV_2.0")
	   errorLayer(nmos30m_hvdef_obsol "HVR001 : Version of NMOS30M_REV2 obsolete")

Executing: nmos18t_bad_1 = geomOutside(NMOS18T_device HVDEF)
	   errorLayer(nmos18t_bad_1 "HVR001 : No HVDEF on NMOS18T")

Executing: nmos30m_bad_1 = geomOutside(NMOS30M_device HVDEF)
	   errorLayer(nmos30m_bad_1 "HVR001 : No HVDEF on NMOS30M")

Executing: nmos18t_bad_2 = geomAndNot(nmos18t_hvdef nmos18t_hvdef_ok)
	   errorLayer(nmos18t_bad_2 "HVR001 : Version of NMOS18T obsolete or missing")

Executing: nmos30m_bad_2 = geomAndNot(nmos30m_hvdef nmos30m_hvdef_ok)
	   errorLayer(nmos30m_bad_2 "HVR001 : Version of NMOS30M obsolete or missing")

Executing: nmos18t_bad_3 = geomAvoiding(NMOS18T_device nmos18t_hvdef)
	   errorLayer(nmos18t_bad_3 "HVR001 : HVDEF has illegal name on NMOS18T")

Executing: nmos30m_bad_3 = geomAvoiding(NMOS30M_device nmos30m_hvdef)
	   errorLayer(nmos30m_bad_3 "HVR001 : HVDEF has illegal name on NMOS30M")

Executing: nmos30_devlay_ele = geomOr(nmos18t_double nmos30m_double)

Executing: nmos30_hvdef_all = geomOr(nmos18t_hvdef_ok nmos30m_hvdef_ok)

Executing: nmos30_subtap_ele = geomButtOrOver(net_subtap nmos30_hvdef_all)

Executing: nmos30_fimp_device_ele = geomButtOrOver(FIDEF nmos30_devlay_ele)

Executing: nmos30_poly_ele = geomButtOrOver(net_poly1 nmos30_devlay_ele)

Executing: nmos30_poly_holes_ele = geomHoles(nmos30_poly_ele innermost)

Executing: nmos30_poly_closed_ele = geomOr(nmos30_poly_ele nmos30_poly_holes_ele)

Executing: nmos30_ndiff_ele = geomButtOrOver(ndiff_1 nmos30_devlay_ele)

Executing: nmos30_drain_ndiff_ele = geomInside(nmos30_ndiff_ele nmos30_poly_holes_ele)

Executing: nmos30_source_ndiff_ele = geomAndNot(nmos30_ndiff_ele nmos30_drain_ndiff_ele)

Executing: nmos30_lw_ele = geomAndNot(geomAnd(nmos30_poly_ele nmos30_ndiff_ele) nmos30_f...

Executing: nmos30_ntub_stripes_ele = geomButtOrOver(NTUB nmos30_devlay_ele)

Executing: nmos30_l_edge_ele = geomGetEdge(nmos30_lw_ele coincident nmos30_source_ndiff_...

Executing: nmos30_w_edge_ele = geomGetEdge(nmos30_lw_ele coincident nmos30_poly_ele)

Executing: nmos30_l_edge_ele_bad = geomGetLength(nmos30_l_edge_ele (keep < 0.5))
	   errorLayer(nmos30_l_edge_ele_bad "NMOS18T/NMOS30M L Element Rule : Min gate length = 0.5 U")

Executing: nmos30_w_edge_ele_bad = geomGetLength(nmos30_w_edge_ele (keep < 5))
	   errorLayer(nmos30_w_edge_ele_bad "NMOS18T/M W2 Element Rule : Min gate width/2 = 5 U")

Executing: nmos30_drain_ndiff_long_ele = drc(nmos30_drain_ndiff_ele nmos30_source_ndiff_...

Executing: nmos30_drain_ndiff_ledge_ele = geomGetEdge(nmos30_drain_ndiff_ele butting nmo...

Executing: nmos30_drain_ndiff_sedge_ele = geomGetEdge(nmos30_drain_ndiff_ele outside nmo...

Executing: nmos30_x4_good_m = drc(nmos30_drain_ndiff_ele nmos30_source_ndiff_ele ((2.0 <...

Executing: nmos30_x4_bad_1 = geomAndNot(nmos30_drain_ndiff_long_ele nmos30_x4_good_m)

Executing: nmos30_x4_bad = geomAnd(nmos30_x4_bad_1 nmos30m_hvdef)
	   errorLayer(nmos30_x4_bad "NMOS30M X4 Element Rule : drain ndiff to source diff spacing (field plate) 2.0 U fixed")

Executing: nmos30_x4_good_t = drc(nmos30_drain_ndiff_ele nmos30_source_ndiff_ele ((1.8 <...

Executing: nmos30_x4_bad_1 = geomAndNot(nmos30_drain_ndiff_long_ele nmos30_x4_good_t)

Executing: nmos30_x4_bad = geomAnd(nmos30_x4_bad_1 nmos18t_hvdef)
	   errorLayer(nmos30_x4_bad "NMOS18T X4 Element Rule : drain ndiff to source diff spacing (field plate) 1.8 U fixed")

Executing: nmos30_x1_good_m = drc(nmos30_drain_ndiff_ledge_ele nmos30_poly_ele ((0.4 <= ...

Executing: nmos30_x1_all = drc(nmos30_drain_ndiff_ledge_ele nmos30_poly_ele (sep < 1.5) ...

Executing: nmos30_x1_bad_1 = geomAndNot(nmos30_x1_all nmos30_x1_good_m)

Executing: nmos30_x1_bad = geomAnd(nmos30_x1_bad_1 nmos30m_hvdef)
	   errorLayer(nmos30_x1_bad "NMOS30M X1 Element Rule : poly1 to drain diff spacing 0.4 U fixed")

Executing: nmos30_x1_good_t = drc(nmos30_drain_ndiff_ledge_ele nmos30_poly_ele ((0.35 <=...

Executing: nmos30_x1_bad_1 = geomAndNot(nmos30_x1_all nmos30_x1_good_t)

Executing: nmos30_x1_bad = geomAnd(nmos30_x1_bad_1 nmos18t_hvdef)
	   errorLayer(nmos30_x1_bad "NMOS18T X1 Element Rule : poly1 to drain diff spacing 0.35 U fixed")

Executing: nmos30_x3_2_good_m = drc(nmos30_drain_ndiff_ele nmos30_ntub_stripes_ele ((1.8...

Executing: nmos30_x3_2_all = drc(nmos30_drain_ndiff_ele nmos30_ntub_stripes_ele (ovlp < ...

Executing: nmos30_x3_2_bad_m = geomAnd(geomAndNot(nmos30_x3_2_all nmos30_x3_2_good_m) ge...
	   errorLayer(nmos30_x3_2_bad_m "NMOS30M/NMOS18T Element Rule X3 : ntub ovlp drain diff 1.85 U fixed")

Executing: nmos30_x5_all = drc(nmos30_fimp_device_ele nmos30_source_ndiff_ele (ovlp < 2....

Executing: nmos30_x5_good_m = drc(nmos30_fimp_device_ele nmos30_source_ndiff_ele ((1.5 <...

Executing: nmos30_x5_bad_m = geomAnd(geomAndNot(nmos30_x5_all nmos30_x5_good_m) nmos30m_...
	   errorLayer(nmos30_x5_bad_m "NMOS30M Element Rule X5 : source diff ovlp of fidef = 1.5")

Executing: nmos30_x5_good_t = drc(nmos30_fimp_device_ele nmos30_source_ndiff_ele ((1.8 <...

Executing: nmos30_x5_bad_t = geomAnd(geomAndNot(nmos30_x5_all nmos30_x5_good_t) nmos18t_...
	   errorLayer(nmos30_x5_bad_t "NMOS18T Element Rule X5 : source diff ovlp of fidef = 1.8")

Executing: nmos30_y1_good = drc(nmos30_drain_ndiff_sedge_ele nmos30_poly_ele ((1 <= sep)...

Executing: nmos30_y1_all = drc(nmos30_drain_ndiff_sedge_ele nmos30_poly_ele (sep < 3.0) ...

Executing: nmos30_y1_bad = geomAndNot(nmos30_y1_all nmos30_y1_good)
	   errorLayer(nmos30_y1_bad "NMOS30M/T Element Rule Y1 : poly1 to drain diff spacing 1 U fixed")

Executing: nmos30_ntub_stripesc_ele = geomSize(geomSize(nmos30_ntub_stripes_ele 1.0) -1.0)

Executing: nmos30_y2_good = drc(nmos30_ntub_stripesc_ele nmos30_drain_ndiff_sedge_ele ((...

Executing: nmos30_y2_all = drc(nmos30_ntub_stripesc_ele nmos30_drain_ndiff_sedge_ele (en...

Executing: nmos30_y2_bad = geomAndNot(nmos30_y2_all nmos30_y2_good)
	   errorLayer(nmos30_y2_bad "NMOS30M/T Element Rule Y2 : ntub stripe ovlp of drain diff = 3 ")

Executing: nmos30_test_y3 = geomSize(nmos30_drain_ndiff_sedge_ele 7.6 unmergedOut edges)

Executing: nmos30_test_y3_a = geomGetEdge(nmos30_test_y3 inside nmos30_poly_ele)

Executing: nmos30_test_y3_b = geomGetLength(nmos30_test_y3_a (keep < 2))
	   errorLayer(nmos30_test_y3_b "NMOS18T/M Y3 Element Rule : poly width of gate connect = 2 U")

Executing: nmos30_y4_test = geomSize(nmos30_drain_ndiff_sedge_ele 7.0 unmergedOut edges)

Executing: nmos30_y4_test = geomGetEdge(nmos30_y4_test inside geomAndNot(nmos30_fimp_dev...

Executing: nmos30_y4_test_1 = geomGetLength(nmos30_y4_test (keep < 2.8))
	   errorLayer(nmos30_y4_test_1 "NMOS30M/T Element Rule Y4 : fidef ovlp of ntub = 2.8 U")

Executing: nmos30_miss_stripes = geomButtOrOver(nmos30_devlay_ele NTUB (ignore == 1))
	   errorLayer(nmos30_miss_stripes "NMOS18T/M  Element Rule : nmos30m/nmos18t must have 1 ntub shape")

Executing: nmos30_y5_test = geomGetEdge(nmos30_test_y3 inside geomAndNot(HVDEF geomOr(FI...

Executing: nmos30_y5_test_1 = geomGetLength(nmos30_y5_test (keep < 1.2))
	   errorLayer(nmos30_y5_test_1 "NMOS30M/T Element Rule Y5 : fidef to bulk pdiff spacing = 1.2 ")

Executing: nmos30_y8_corn = geomGetVertex(nmos30_poly_ele (ignore == 16))
	   errorLayer(nmos30_y8_corn "NMOS18T/M Y8 Element Rule : poly must be angled")

Executing: nmos30_y8_1 = geomGetAngledEdge(nmos30_poly_holes_ele ((44.9 < keep) < 45.1))

Executing: nmos30_y8_2 = geomGetLength(nmos30_y8_1 ((0.68 <= ignore) <= 0.71))
	   errorLayer(nmos30_y8_2 "NMOS18T/M Y8 Element Rule : 45 degree poly must have length 0.7")

Executing: nmos30_y9_1 = geomGetAngledEdge(nmos30_poly_closed_ele ((44.9 < keep) < 45.1))

Executing: nmos30_y9_2 = geomGetLength(nmos30_y9_1 ((2.08 <= ignore) <= 2.17))
	   errorLayer(nmos30_y9_2 "NMOS18T/M Y9 Element Rule : 45 degree poly must have length 0.7")

Executing: nmos30_y11_corn = geomGetVertex(nmos30_fimp_device_ele (ignore == 12))
	   errorLayer(nmos30_y11_corn "NMOS18T/M Y11 Element Rule : fidef must be angled")

Executing: nmos30_y11_1 = geomGetAngledEdge(nmos30_fimp_device_ele ((44.9 < keep) < 45.1))

Executing: nmos30_y11_2 = geomGetLength(nmos30_y11_1 ((1.0 <= ignore) <= 1.1))
	   errorLayer(nmos30_y11_2 "NMOS18T/M Y11 Element Rule : fidef edge length = 0.75 * sqrt(2)")

Executing: nmos30_y10_test = geomSize(nmos30_y11_1 -0.01 unmergedOut edges)

Executing: nmos30_y10_all = drc(nmos30_source_ndiff_ele nmos30_y10_test (sep < 1.75))

Executing: width_pfimp_w2pw = drc(PFIMP (width < 0.8))

Executing: spac_pfimp_s2pwpw = drc(PFIMP (sepNotch < 1))

Executing: pwr002_pfimp = geomAndNot(PFIMP geomOr(HVDEF SFCDEF))
	   errorLayer(pwr002_pfimp "PWR002 : (PFIMP and not (HVDEF or SFCDEF)) is not allowed")

Executing: pmosd30m_hvdef = geomGetTexted(HVDEF HVDEF_text "PMOSD30M_*")

Executing: pmosd30m_hvdef_ok = geomGetTexted(HVDEF HVDEF_text "PMOSD30M_REV_2.0")

Executing: pmosd30m_hvdef_filter = geomSize(geomSize(pmosd30m_hvdef 0.1) -0.1)

Executing: pmosd30m_bad_1 = geomOutside(PMOSD30M_device HVDEF)
	   errorLayer(pmosd30m_bad_1 "HVR001 : No HVDEF on PMOSD30M")

Executing: pmosd30m_bad_2 = geomAndNot(pmosd30m_hvdef pmosd30m_hvdef_ok)
	   errorLayer(pmosd30m_bad_2 "HVR001 : Version of PMOSD30M obsolete or missing")

Executing: pmosd30m_hvdef_rev1_obsol = geomGetTexted(HVDEF HVDEF_text "PMOSD30M_REV_1.0")
	   errorLayer(pmosd30m_hvdef_rev1_obsol "HVR001 : Version of PMOSD30M is REV1 and obsolete, use rev2 ")

Executing: pmosd30m_bad_3 = geomAvoiding(PMOSD30M_device pmosd30m_hvdef)
	   errorLayer(pmosd30m_bad_3 "HVR001 : HVDEF has illegal name on PMOSD30M")

Executing: pmosd30m_devlay_ele = geomCat(PMOSD30M_device)

Executing: pmosd30m_pfimp_ele = geomButtOrOver(PFIMP pmosd30m_devlay_ele)

Executing: pmosd30m_poly_ele = geomButtOrOver(POLY1 pmosd30m_devlay_ele)

Executing: pmosd30m_poly_holes_ele = geomHoles(pmosd30m_poly_ele innermost)

Executing: pmosd30m_pdiff_ele = geomButtOrOver(pdiff_1 pmosd30m_devlay_ele)

Executing: pmosd30m_drain_pdiff_ele = geomInside(pmosd30m_pdiff_ele pmosd30m_poly_holes_...

Executing: pmosd30m_source_pdiff_ele = geomAndNot(pmosd30m_pdiff_ele pmosd30m_drain_pdif...

Executing: pmosd30m_lw_ele = geomAndNot(geomAnd(pmosd30m_poly_ele pmosd30m_pdiff_ele) pm...

Executing: pmosd30m_ntub_ele = geomButtOrOver(NTUB pmosd30m_devlay_ele)

Executing: pmosd30m_w_edge_ele = geomGetEdge(pmosd30m_lw_ele coincident pmosd30m_poly_ele)

Executing: pmosd30m_l_edge_ele = geomGetEdge(pmosd30m_lw_ele coincident pmosd30m_pdiff_ele)

Executing: pmosd30m_l_edge_ele_bad = geomGetLength(pmosd30m_l_edge_ele (keep < 0.6))
	   errorLayer(pmosd30m_l_edge_ele_bad "PMOSD30M : Minimum CHANNEL length = 0.6")

Executing: pmosd30m_w_edge_ele_bad = geomGetLength(pmosd30m_w_edge_ele (keep < 6.4))
	   errorLayer(pmosd30m_w_edge_ele_bad "PMOSD30M : Minimum CHANNEL width / N = 6.4")

Executing: pmosd30m_drain_pdiff_long_ele = drc(pmosd30m_drain_pdiff_ele pmosd30m_source_...

Executing: pmosd30m_drain_pdiff_ledge_ele = geomGetEdge(pmosd30m_drain_pdiff_ele butting...

Executing: pmosd30m_drain_pdiff_sedge_ele = geomGetEdge(pmosd30m_drain_pdiff_ele outside...

Executing: pmosd30m_x1_good = drc(pmosd30m_drain_pdiff_ledge_ele pmosd30m_poly_ele ((0.3...

Executing: pmosd30m_x1_all = drc(pmosd30m_drain_pdiff_ledge_ele pmosd30m_poly_ele (sep <...

Executing: pmosd30m_x1_bad_1 = geomAndNot(pmosd30m_x1_all pmosd30m_x1_good)
	   errorLayer(pmosd30m_x1_bad_1 "PMOSD30M X1 Element Rule : POLY1 to DRAIN-PDIFF spacing = 0.3")

Executing: pmosd30m_y1_good = drc(pmosd30m_drain_pdiff_sedge_ele pmosd30m_poly_ele ((0.3...

Executing: pmosd30m_y1_all = drc(pmosd30m_drain_pdiff_sedge_ele pmosd30m_poly_ele (sep <...

Executing: pmosd30m_y1_bad = geomAndNot(pmosd30m_y1_all pmosd30m_y1_good)
	   errorLayer(pmosd30m_y1_bad "PMOSD30M Element Rule Y1 : POLY1 to DRAIN-PDIFF spacing = 0.3")

Executing: pmosd30m_x2_good = drc(pmosd30m_drain_pdiff_ledge_ele pmosd30m_source_pdiff_e...

Executing: pmosd30m_x2_all = drc(pmosd30m_drain_pdiff_ledge_ele pmosd30m_source_pdiff_el...

Executing: pmosd30m_x2_bad_1 = geomAndNot(pmosd30m_x2_all pmosd30m_x2_good)
	   errorLayer(pmosd30m_x2_bad_1 "PMOSD30M X2 Element Rule : DRAIN-PDIFF to SOURCE-DIFF spacing (field plate) = 2.4")

Executing: pmosd30m_x3_good = drc(pmosd30m_pfimp_ele pmosd30m_source_pdiff_ele ((0.6 <= ...

Executing: pmosd30m_x3_all = drc(pmosd30m_pfimp_ele pmosd30m_source_pdiff_ele (ovlp < 1....

Executing: pmosd30m_x3_bad = geomAndNot(pmosd30m_x3_all pmosd30m_x3_good)
	   errorLayer(pmosd30m_x3_bad "PMOSD30M_X3 Element Rule : PFIMP overlap of SOURCE-DIFF = 0.6")

Executing: pmosd30m_x4_all = drc(pmosd30m_ntub_ele net_ndiff (enc < 0.8))

Executing: pmosd30m_x5_all = drc(net_subtap pmosd30m_ntub_ele (sep < 2.4))

Executing: geomSizeAnd(pmosd30m_ntub_ele pmosd30m_grow_area 0.05 2.4)

Executing: geomSizeAnd(pmosd30m_ntub_ele pmosd30m_grow_area 0.05 2.4)

Executing: geomSizeAnd(pmosd30m_ntub_ele pmosd30m_grow_area 0.05 2.4)

Executing: geomSizeAnd(pmosd30m_ntub_ele pmosd30m_grow_area 0.05 2.4)

Executing: geomSizeAnd(pmosd30m_ntub_ele pmosd30m_grow_area 0.05 2.4)

Executing: geomSizeAnd(pmosd30m_ntub_ele pmosd30m_grow_area 0.05 2.4)

Executing: pmosd30m_1 = geomSizeAnd(pmosd30m_ntub_ele pmosd30m_grow_area 0.05 2.4)

Executing: pmosd30m_2 = geomGetEdge(pmosd30m_1 outside net_pdiff)

Executing: pmosd30m_3 = geomSize(geomSize(pmosd30m_2 -0.2) 0.1)

Executing: errorLayer(geomAndNot(substrate_all geomAndNot(substrate_all pmosd30m_3)) "PMOSD30M_X5 Element Rule : miss substrate ptap Fixed PDIFF to NTUB spacing = 2.4")

Executing: pmosd30m_x5_1 = geomAndNot(geomSize(pmosd30m_ntub_ele 2.0) geomSize(pmosd30m_...

Executing: pmosd30m_x5_bad_1 = geomAnd(pmosd30m_x5_1 DIFF)

Executing: pmosd30m_x5_bad_2 = geomAnd(pmosd30m_x5_1 NPLUS)

Executing: pmosd30m_x5_bad_3 = geomAnd(pmosd30m_x5_1 PPLUS)

Executing: pmosd30m_x5_bad_4 = geomAnd(pmosd30m_x5_1 POLY1)

Executing: pmosd30m_x5_bad_5 = geomAnd(pmosd30m_x5_1 POLY2)

Executing: pmosd30m_x5_bad_all = geomCat(pmosd30m_x5_bad_1 pmosd30m_x5_bad_2 pmosd30m_x5...
	   errorLayer(pmosd30m_x5_bad_all "PMOSD30M Element Rule X5  : bad layer between ntub and subtap")

Executing: pmosd30m_x6_gate = geomAnd(pmosd30m_poly_ele pmosd30m_source_pdiff_ele)

Executing: pmosd30m_x6_good = drc(pmosd30m_x6_gate NPLUS ((0.3 <= sep) <= 0.3) parallel ...

Executing: pmosd30m_x6_all = drc(pmosd30m_x6_gate NPLUS (sep < 1.0) parallel opposite)

Executing: pmosd30m_x6_bad_1 = geomAndNot(pmosd30m_x6_all pmosd30m_x6_good)
	   errorLayer(pmosd30m_x6_bad_1 "PMOSD30M Element Rule X6 : NPLUS to PGATE spacing = 0.3")

Executing: pmosd30m_y2_good = drc(pmosd30m_pfimp_ele pmosd30m_drain_pdiff_sedge_ele ((2 ...

Executing: pmosd30m_y2_all = drc(pmosd30m_pfimp_ele pmosd30m_drain_pdiff_sedge_ele (enc ...

Executing: pmosd30m_y2_bad = geomAndNot(pmosd30m_y2_all pmosd30m_y2_good)
	   errorLayer(pmosd30m_y2_bad "PMOSD30M Element Rule Y2 : PFIMP enclosure of DRAIN-PDIFF = 2")

Executing: pmosd30m_y3_good = drc(pmosd30m_drain_pdiff_sedge_ele net_ndiff ((4.25 <= sep...

Executing: pmosd30m_y3_all = drc(pmosd30m_drain_pdiff_sedge_ele net_ndiff (sep < 8) para...

Executing: pmosd30m_y3_bad = geomAndNot(pmosd30m_y3_all pmosd30m_y3_good)
	   errorLayer(pmosd30m_y3_bad "PMOSD30M Element Rule Y3 : BULK-NDIFF to DRAIN-PDIFF spacing = 4.25")

Executing: pmosd30m_test_y4 = geomSize(pmosd30m_drain_pdiff_sedge_ele 3.0 unmergedOut ed...

Executing: pmosd30m_test_y4_a = geomGetEdge(pmosd30m_test_y4 inside pmosd30m_poly_ele)

Executing: pmosd30m_test_y4_b = geomGetLength(pmosd30m_test_y4_a (keep < 1.75))
	   errorLayer(pmosd30m_test_y4_b "PMOSD30M Element Rule Y4 : POLY1 width of gate connection = 1.75")

Executing: pmosd30m_y5_corn = geomGetVertex(pmosd30m_poly_ele (ignore == 12))
	   errorLayer(pmosd30m_y5_corn "PMOSD30M Element Rule Y5 : illegal vertices POLY1 45-deg corner (outside) = 0.55")

Executing: pmosd30m_y5_1 = geomGetAngledEdge(pmosd30m_poly_ele ((44.9 < keep) < 45.1))

Executing: pmosd30m_y5_2 = geomGetLength(pmosd30m_y5_1 ((0.76 <= ignore) <= 0.78))
	   errorLayer(pmosd30m_y5_2 "PMOSD30M Element Rule Y5 : POLY1 45-deg corner (outside) = 0.55")

Executing: pmosd30m_poly_holes_ele_good = geomGetRectangle(pmosd30m_poly_holes_ele)

Executing: pmosd30m_poly_holes_ele_bad = geomAndNot(pmosd30m_poly_holes_ele pmosd30m_pol...
	   errorLayer(pmosd30m_poly_holes_ele_bad "PMOSD30M Element Rule Y5 : poly hole must not be angled ")

Executing: pmosd30m_y8_con = geomButtOrOver(diffcon pmosd30m_hvdef_ok)

Executing: pmosd30m_y8_pplus = geomButtOrOver(PPLUS pmosd30m_hvdef_ok)

Executing: pmosd30m_y8_all = drc(pmosd30m_y8_con pmosd30m_y8_pplus (enc < 0.2) parallel ...

Executing: pmosd30m_holes = geomAnd(geomHoles(geomButtOrOver(net_pdiff pmosd30m_double) ...

Executing: pmosd30m_holes_rect = geomGetRectangle(pmosd30m_holes)

Executing: pmosd30m_pdiffx = geomButtOrOver(net_pdiff PMOSD30M_device)

Executing: pmosd30m_buttdiff = geomButtOrOver(pmosd30m_pdiffx pmosd30m_holes_rect)

Executing: pmosd30m_butt_ndiff_taps = geomCat(pmosd30m_holes_rect)

Executing: pmosd30m_butt_pdiff = geomCat(pmosd30m_buttdiff)

Executing: pmosd30m_pdiff_nobutt = geomAndNot(pmosd30m_pdiffx pmosd30m_butt_pdiff)

Executing: pmosd30m_r2_1 = geomButtOrOver(pmosd30m_butt_pdiff geomAndNot(ndiff_1 pmosd30...
	   errorLayer(pmosd30m_r2_1 "PMOSD30M_R2 Element Rule R2 : SOURCE-PDIFF cannot be butted with BULK-NDIFF ring")

Executing: pmosd30m_r2_2 = geomGetEdge(pmosd30m_pdiff_nobutt butting ndiff_1)
	   errorLayer(pmosd30m_r2_2 "PMOSD30M_R2 Element Rule R2 : SOURCE-PDIFF cannot be butted with BULK-NDIFF ring")

Executing: pmosd30m_y7_1 = geomButtOrOver(geomButtOrOver(pdiff_1 pmosd30m_hvdef_ok) pmos...

Executing: pmosd30m_y7_bad = drc(pmosd30m_y7_1 pmosd30m_y7_2 (enc < 0.2))

Executing: pmosd30m_bad_buttdiff = geomContactCheck(pmosd30m_holes_rect (width == 0.9) (...
	   errorLayer(pmosd30m_bad_buttdiff "PMOSD30M Element Rule Y7: fixed size of butting ndiff square 0.9 x 0.9")

Executing: pmosd30m_y10 = drc(pmosd30m_holes_rect (sep < 1.6))

Executing: pmosd30m_met1 = geomAnd(net_met1 geomSize(pmosd30m_hvdef_ok 0.1))

Executing: pmosd30m_met1_s = geomButtOrOver(pmosd30m_met1 pmosd30m_butt_pdiff)

Executing: pmosd30m_met1_b = geomButtOrOver(pmosd30m_met1 pmosd30m_butt_ndiff_taps)

Executing: geomStamp(pmosd30m_met1_b net_ndiff)

Executing: geomStamp(pmosd30m_met1_s net_pdiff)

Executing: pmosd30m_uncon = drc(pmosd30m_met1_s pmosd30m_met1_b (sep < 2) diffNet)

Executing: errorLayer(geomAndNot(substrate_all geomAndNot(substrate_all layer)) message)

Executing: pmosd30m_x = geomOr(pmosd30m_butt_pdiff pmosd30m_butt_ndiff_taps)

Executing: pmosd30m_x1 = geomSize(geomSize(pmosd30m_x 0.7) -0.7)

Executing: pmosd30m_y = geomAnd(pmosd30m_x1 net_met1)

Executing: pmosd30m_y1 = geomEnclose(pmosd30m_x1 pmosd30m_y (keep > 1))

Executing: errorLayer(geomAndNot(substrate_all geomAndNot(substrate_all layer)) message)

Executing: pmosd30m_single_device = geomAvoiding(geomSize(pmosd30m_hvdef_ok 0.2) pmosd30...

Executing: pmosd30m_pdiff = geomAnd(pmosd30m_single_device net_pdiff)

Executing: pmosd30m_ndiff = geomAnd(pmosd30m_single_device net_ndiff)

Executing: geomStamp(pmosd30m_pdiff net_pdiff)

Executing: geomStamp(pmosd30m_ndiff net_ndiff)

Executing: pmosd30m_uncon1 = drc(pmosd30m_pdiff pmosd30m_ndiff (sep < 1) diffNet)

Executing: errorLayer(geomAndNot(substrate_all geomAndNot(substrate_all layer)) message)

Executing: pmosd30m_for_stamp = geomSize(PMOSD30M_device 0.1)

Executing: geomStamp(pmosd30m_source_pdiff_ele net_pdiff)

Executing: geomStamp(pmosd30m_for_stamp pmosd30m_source_pdiff_ele multConnect "PMOSD30M HVR003 sources must be connected together")

Executing: pmosd30m_pfimp_good_ele = geomGetRectangle(pmosd30m_pfimp_ele)

Executing: pmosd30m_pfimp_bad_ele = geomAndNot(pmosd30m_pfimp_ele pmosd30m_pfimp_good_ele)
	   errorLayer(pmosd30m_pfimp_bad_ele "PMOSD30M Element Rule : pfimp must be rectangle")

Executing: pmosd30m_poa_par009 = geomButtOrOver(PMOSD30M_device pad_poa_all)
	   errorLayer(pmosd30m_poa_par009 " PMOSD30M : this device not supported for any pad over active application")

Executing: pmos30m_hvdef = geomGetTexted(HVDEF HVDEF_text "PMOS30M_*")

Executing: pmos30m_hvdef_ok = geomGetTexted(HVDEF HVDEF_text "PMOS30M_REV_1.0")

Executing: pmos30m_bad_1 = geomOutside(PMOS30M_device HVDEF)
	   errorLayer(pmos30m_bad_1 "HVR001 : No HVDEF on PMOS30M")

Executing: pmos30m_bad_2 = geomAndNot(pmos30m_hvdef pmos30m_hvdef_ok)
	   errorLayer(pmos30m_bad_2 "HVR001 : Version of PMOS30M obsolete or missing")

Executing: pmos30m_bad_3 = geomAvoiding(PMOS30M_device pmos30m_hvdef)
	   errorLayer(pmos30m_bad_3 "HVR001 : HVDEF has illegal name on PMOS30M")

Executing: pmos30m_devlay_ele = geomCat(PMOS30M_device)

Executing: pmos30m_pfimp_ele = geomButtOrOver(PFIMP pmos30m_devlay_ele)

Executing: pmos30m_poly_ele = geomButtOrOver(POLY1 pmos30m_devlay_ele)

Executing: pmos30m_poly_holes_ele = geomHoles(pmos30m_poly_ele innermost)

Executing: pmos30m_pdiff_ele = geomButtOrOver(pdiff_1 pmos30m_devlay_ele)

Executing: pmos30m_drain_pdiff_ele = geomInside(pmos30m_pdiff_ele pmos30m_poly_holes_ele)

Executing: pmos30m_source_pdiff_ele = geomAndNot(pmos30m_pdiff_ele pmos30m_drain_pdiff_ele)

Executing: pmos30m_lw_ele = geomAndNot(geomAnd(pmos30m_poly_ele pmos30m_pdiff_ele) pmos3...

Executing: pmos30m_ntub_ele = geomButtOrOver(NTUB pmos30m_devlay_ele)

Executing: pmos30m_w_edge_ele = geomGetEdge(pmos30m_lw_ele coincident pmos30m_poly_ele)

Executing: pmos30m_l_edge_ele = geomGetEdge(pmos30m_lw_ele coincident pmos30m_pdiff_ele)

Executing: pmos30m_l_edge_ele_bad = geomGetLength(pmos30m_l_edge_ele (keep < 0.6))
	   errorLayer(pmos30m_l_edge_ele_bad "PMOS30M : _PMOS30M_L_")

Executing: pmos30m_w_edge_ele_bad = geomGetLength(pmos30m_w_edge_ele (keep < 6.4))
	   errorLayer(pmos30m_w_edge_ele_bad "PMOS30M : _PMOS30M_W2_")

Executing: pmos30m_drain_pdiff_long_ele = drc(pmos30m_drain_pdiff_ele pmos30m_source_pdi...

Executing: pmos30m_drain_pdiff_ledge_ele = geomGetEdge(pmos30m_drain_pdiff_ele butting p...

Executing: pmos30m_drain_pdiff_sedge_ele = geomGetEdge(pmos30m_drain_pdiff_ele outside p...

Executing: pmos30m_x1_good = drc(pmos30m_drain_pdiff_ledge_ele pmos30m_poly_ele ((0.3 <=...

Executing: pmos30m_x1_all = drc(pmos30m_drain_pdiff_ledge_ele pmos30m_poly_ele (sep < 1....

Executing: pmos30m_x1_bad_1 = geomAndNot(pmos30m_x1_all pmos30m_x1_good)
	   errorLayer(pmos30m_x1_bad_1 "PMOS30M X1 Element Rule : _PMOS30M_X1_")

Executing: pmos30m_y1_good = drc(pmos30m_drain_pdiff_sedge_ele pmos30m_poly_ele ((0.3 <=...

Executing: pmos30m_y1_all = drc(pmos30m_drain_pdiff_sedge_ele pmos30m_poly_ele (sep < 0....

Executing: pmos30m_y1_bad = geomAndNot(pmos30m_y1_all pmos30m_y1_good)
	   errorLayer(pmos30m_y1_bad "PMOS30M Element Rule Y1 : _PMOS30M_Y1_")

Executing: pmos30m_x2_good = drc(pmos30m_drain_pdiff_ledge_ele pmos30m_source_pdiff_ele ...

Executing: pmos30m_x2_all = drc(pmos30m_drain_pdiff_ledge_ele pmos30m_source_pdiff_ele (...

Executing: pmos30m_x2_bad_1 = geomAndNot(pmos30m_x2_all pmos30m_x2_good)
	   errorLayer(pmos30m_x2_bad_1 "PMOS30M X2 Element Rule : _PMOS30M_X2_")

Executing: pmos30m_x3_good = drc(pmos30m_pfimp_ele pmos30m_source_pdiff_ele ((0.6 <= ovl...

Executing: pmos30m_x3_all = drc(pmos30m_pfimp_ele pmos30m_source_pdiff_ele (ovlp < 1.0) ...

Executing: pmos30m_x3_bad = geomAndNot(pmos30m_x3_all pmos30m_x3_good)
	   errorLayer(pmos30m_x3_bad "PMOS30M_X3 Element Rule : _PMOS30M_X3_")

Executing: pmos30m_x4_all = drc(pmos30m_ntub_ele net_ndiff (enc < 0.8))

Executing: pmos30m_x5_all = drc(net_subtap pmos30m_ntub_ele (sep < 2.4))

Executing: geomSizeAnd(pmos30m_ntub_ele pmos30m_grow_area 0.05 2.4)

Executing: geomSizeAnd(pmos30m_ntub_ele pmos30m_grow_area 0.05 2.4)

Executing: geomSizeAnd(pmos30m_ntub_ele pmos30m_grow_area 0.05 2.4)

Executing: geomSizeAnd(pmos30m_ntub_ele pmos30m_grow_area 0.05 2.4)

Executing: geomSizeAnd(pmos30m_ntub_ele pmos30m_grow_area 0.05 2.4)

Executing: geomSizeAnd(pmos30m_ntub_ele pmos30m_grow_area 0.05 2.4)

Executing: pmos30m_1 = geomSizeAnd(pmos30m_ntub_ele pmos30m_grow_area 0.05 2.4)

Executing: pmos30m_2 = geomGetEdge(pmos30m_1 outside net_pdiff)

Executing: pmos30m_3 = geomSize(geomSize(pmos30m_2 -0.2) 0.1)

Executing: errorLayer(geomAndNot(substrate_all geomAndNot(substrate_all pmos30m_3)) "PMOS30M_X5 Element Rule : miss substrate ptap Fixed PDIFF to NTUB spacing = 2.4")

Executing: pmos30m_x5_1 = geomAndNot(geomSize(pmos30m_ntub_ele 2.0) geomSize(pmos30m_ntu...

Executing: pmos30m_x5_bad_1 = geomAnd(pmos30m_x5_1 DIFF)

Executing: pmos30m_x5_bad_2 = geomAnd(pmos30m_x5_1 NPLUS)

Executing: pmos30m_x5_bad_3 = geomAnd(pmos30m_x5_1 PPLUS)

Executing: pmos30m_x5_bad_4 = geomAnd(pmos30m_x5_1 POLY1)

Executing: pmos30m_x5_bad_5 = geomAnd(pmos30m_x5_1 POLY2)

Executing: pmos30m_x5_bad_all = geomCat(pmos30m_x5_bad_1 pmos30m_x5_bad_2 pmos30m_x5_bad...
	   errorLayer(pmos30m_x5_bad_all "PMOS30M Element Rule X5  : bad layer between ntub and subtap")

Executing: pmos30m_y2_good = drc(pmos30m_pfimp_ele pmos30m_drain_pdiff_sedge_ele ((2.0 <...

Executing: pmos30m_y2_all = drc(pmos30m_pfimp_ele pmos30m_drain_pdiff_sedge_ele (enc < 4...

Executing: pmos30m_y2_bad = geomAndNot(pmos30m_y2_all pmos30m_y2_good)
	   errorLayer(pmos30m_y2_bad "PMOS30M Element Rule Y2 : _PMOS30M_Y2_")

Executing: pmos30m_y3_good = drc(pmos30m_drain_pdiff_sedge_ele net_ndiff ((4.25 <= sep) ...

Executing: pmos30m_y3_all = drc(pmos30m_drain_pdiff_sedge_ele net_ndiff (sep < 8) parall...

Executing: pmos30m_y3_bad = geomAndNot(pmos30m_y3_all pmos30m_y3_good)
	   errorLayer(pmos30m_y3_bad "PMOS30M Element Rule Y3 : _PMOS30M_Y3_")

Executing: pmos30m_test_y4 = geomSize(pmos30m_drain_pdiff_sedge_ele 3.0 unmergedOut edges)

Executing: pmos30m_test_y4_a = geomGetEdge(pmos30m_test_y4 inside pmos30m_poly_ele)

Executing: pmos30m_test_y4_b = geomGetLength(pmos30m_test_y4_a (keep < 1.75))
	   errorLayer(pmos30m_test_y4_b "PMOS30M Element Rule Y4 : _PMOS30M_Y4_")

Executing: pmos30m_y5_corn = geomGetVertex(pmos30m_poly_ele (ignore == 12))
	   errorLayer(pmos30m_y5_corn "PMOS30M Element Rule Y5 : illegal vertices _PMOS30M_Y5_")

Executing: pmos30m_y5_1 = geomGetAngledEdge(pmos30m_poly_ele ((44.9 < keep) < 45.1))

Executing: pmos30m_y5_2 = geomGetLength(pmos30m_y5_1 ((0.76 <= ignore) <= 0.78))
	   errorLayer(pmos30m_y5_2 "PMOS30M Element Rule Y5 : _PMOS30M_Y5_")

Executing: pmos30m_poly_holes_ele_good = geomGetRectangle(pmos30m_poly_holes_ele)

Executing: pmos30m_poly_holes_ele_bad = geomAndNot(pmos30m_poly_holes_ele pmos30m_poly_h...
	   errorLayer(pmos30m_poly_holes_ele_bad "PMOS30M Element Rule Y5 : poly hole must not be angled ")

Executing: pmos30m_for_stamp = geomSize(PMOS30M_device 0.1)

Executing: geomStamp(pmos30m_source_pdiff_ele net_pdiff)

Executing: geomStamp(pmos30m_for_stamp pmos30m_source_pdiff_ele multConnect "PMOS30M HVR003 sources must be connected together")

Executing: pmos30m_pfimp_good_ele = geomGetRectangle(pmos30m_pfimp_ele)

Executing: pmos30m_pfimp_bad_ele = geomAndNot(pmos30m_pfimp_ele pmos30m_pfimp_good_ele)
	   errorLayer(pmos30m_pfimp_bad_ele "PMOS30M Element Rule : pfimp must be rectangle")

Executing: pmos30m_poa_par009 = geomButtOrOver(PMOS30M_device pad_poa_all)
	   errorLayer(pmos30m_poa_par009 " PMOS30M : this device not supported for any pad over active application")

Executing: esdpd12_hvdef = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDPD12*") hvdef_i...

Executing: esdpd12_hvdef_ok = geomGetTexted(HVDEF HVDEF_text "ESDPD12_REV_1.0")

Executing: esdpd12_bad_2 = geomAndNot(esdpd12_hvdef esdpd12_hvdef_ok)
	   errorLayer(esdpd12_bad_2 "HVR001 : Version of ESDPD12 obsolete or missing")

Executing: esdpd12_bad_3 = geomAvoiding(ESDPD12_device esdpd12_hvdef)
	   errorLayer(esdpd12_bad_3 "HVR001 : HVDEF has illegal name on ESDPD12")

Executing: esdpd26_hvdef = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDPD26*") hvdef_i...

Executing: esdpd26_hvdef_ok = geomGetTexted(HVDEF HVDEF_text "ESDPD26_REV_1.0")

Executing: esdpd26_bad_2 = geomAndNot(esdpd26_hvdef esdpd26_hvdef_ok)
	   errorLayer(esdpd26_bad_2 "HVR001 : Version of ESDPD26 obsolete or missing")

Executing: esdpd26_bad_3 = geomAvoiding(ESDPD26_device esdpd26_hvdef)
	   errorLayer(esdpd26_bad_3 "HVR001 : HVDEF has illegal name on ESDPD26")

Executing: esdpd18_hvdef = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDPD18*") hvdef_i...

Executing: esdpd18_hvdef_ok = geomGetTexted(HVDEF HVDEF_text "ESDPD18_REV_1.0")

Executing: esdpd18_bad_2 = geomAndNot(esdpd18_hvdef esdpd18_hvdef_ok)
	   errorLayer(esdpd18_bad_2 "HVR001 : Version of ESDPD18 obsolete or missing")

Executing: esdpd18_bad_3 = geomAvoiding(ESDPD18_device esdpd18_hvdef)
	   errorLayer(esdpd18_bad_3 "HVR001 : HVDEF has illegal name on ESDPD18")

Executing: esdpd30_hvdef = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDPD30*") hvdef_i...

Executing: esdpd30_hvdef_ok = geomGetTexted(HVDEF HVDEF_text "ESDPD30_REV_1.0")

Executing: esdpd30_bad_2 = geomAndNot(esdpd30_hvdef esdpd30_hvdef_ok)
	   errorLayer(esdpd30_bad_2 "HVR001 : Version of ESDPD30 obsolete or missing")

Executing: esdpd30_bad_3 = geomAvoiding(ESDPD30_device esdpd30_hvdef)
	   errorLayer(esdpd30_bad_3 "HVR001 : HVDEF has illegal name on ESDPD30")

Executing: esdgcn5_hvdef = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDGCN5*") hvdef_i...

Executing: esdgcn5_hvdef_ok = geomGetTexted(HVDEF HVDEF_text "ESDGCN5_REV_1.0")

Executing: esdgcn5_bad_2 = geomAndNot(esdgcn5_hvdef esdgcn5_hvdef_ok)
	   errorLayer(esdgcn5_bad_2 "HVR001 : Version of ESDGCN5 obsolete or missing")

Executing: esdgcn5_bad_3 = geomAvoiding(ESDGCN5_device esdgcn5_hvdef)
	   errorLayer(esdgcn5_bad_3 "HVR001 : HVDEF has illegal name on ESDGCN5")

Executing: esdgcp5_hvdef = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDGCP5*") hvdef_i...

Executing: esdgcp5_hvdef_ok = geomGetTexted(HVDEF HVDEF_text "ESDGCP5_REV_1.0")

Executing: esdgcp5_bad_2 = geomAndNot(esdgcp5_hvdef esdgcp5_hvdef_ok)
	   errorLayer(esdgcp5_bad_2 "HVR001 : Version of ESDGCP5 obsolete or missing")

Executing: esdgcp5_bad_3 = geomAvoiding(ESDGCP5_device esdgcp5_hvdef)
	   errorLayer(esdgcp5_bad_3 "HVR001 : HVDEF has illegal name on ESDGCP5")

Executing: esdfdp5_hvdef = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDFDP5*") hvdef_i...

Executing: esdfdp5_hvdef_ok = geomGetTexted(HVDEF HVDEF_text "ESDFDP5_REV_1.0")

Executing: esdfdp5_bad_2 = geomAndNot(esdfdp5_hvdef esdfdp5_hvdef_ok)
	   errorLayer(esdfdp5_bad_2 "HVR001 : Version of ESDFDP5 obsolete or missing")

Executing: esdfdp5_bad_3 = geomAvoiding(ESDFDP5_device esdfdp5_hvdef)
	   errorLayer(esdfdp5_bad_3 "HVR001 : HVDEF has illegal name on ESDFDP5")

Executing: esdfdn5_hvdef = geomAndNot(geomGetTexted(HVDEF HVDEF_text "ESDFDN5*") hvdef_i...

Executing: esdfdn5_hvdef_ok = geomGetTexted(HVDEF HVDEF_text "ESDFDN5_REV_1.0")

Executing: esdfdn5_bad_2 = geomAndNot(esdfdn5_hvdef esdfdn5_hvdef_ok)
	   errorLayer(esdfdn5_bad_2 "HVR001 : Version of ESDFDN5 obsolete or missing")

Executing: esdfdn5_bad_3 = geomAvoiding(ESDFDN5_device esdfdn5_hvdef)
	   errorLayer(esdfdn5_bad_3 "HVR001 : HVDEF has illegal name on ESDFDN5")

Executing: device_with_hvdef = geomCat(NMOS18T_device NMOS30M_device PMOSD30M_device PMO...

Executing: hvdef_bad = geomAvoiding(HVDEF device_with_hvdef)
	   errorLayer(hvdef_bad "HVR001 : HVDEF does not enclose a valid HV-device, bad HVDEF or bad device")

Executing: net_pdiff_c_sub = geomAndNot(net_pdiff NTUB)

Executing: esdpd12_hvdef_defx = geomButtOrOver(HVDEF ESDPD12_device)

Executing: esdpd12_cath_ndiff_c_ntubx = geomAnd(geomAnd(net_ndiff_c_ntub NTUB) esdpd12_h...

Executing: esdpd12_anod_pdiff_c_subx = geomButtOrOver(net_pdiff_c_sub geomSize(esdpd12_h...

Executing: esdpd12_lw_edge_ele = geomGetEdge(ESDPD12_device)

Executing: esdpd12_l_edgex = geomGetLength(esdpd12_lw_edge_ele (keep < 2.5))

Executing: esdpd12_w_edgex = geomGetLength(esdpd12_lw_edge_ele (keep > 2.5))

Executing: esdpd12_l_edge_ele_bad = geomGetLength(esdpd12_l_edgex ((1.3 <= ignore) <= 1.3))
	   errorLayer(esdpd12_l_edge_ele_bad "ESDPD12_L Element Rule : _ESDPD12_L_")

Executing: esdpd12_w1_edge_ele_bad = geomGetLength(esdpd12_w_edgex (keep < 10.0))
	   errorLayer(esdpd12_w1_edge_ele_bad "ESDPD12_W1 Element Rule : _ESDPD12_W1_")

Executing: esdpd12_w2_edge_ele_bad = geomGetLength(esdpd12_w_edgex (keep > 1000.0))
	   errorLayer(esdpd12_w2_edge_ele_bad "ESDPD12_W2 Element Rule : _ESDPD12_W2_")

Executing: esdpd12_x2_good = drc(esdpd12_w_edgex esdpd12_cath_ndiff_c_ntubx ((0.3 <= enc...

Executing: esdpd12_x2_all = drc(esdpd12_w_edgex esdpd12_cath_ndiff_c_ntubx (enc < 1) par...

Executing: esdpd12_x2_bad = geomAndNot(esdpd12_x2_all esdpd12_x2_good)
	   errorLayer(esdpd12_x2_bad "ESDPD12_X2 Element Rule : _ESDPD12_X2_")

Executing: esdpd12_y2_good = drc(esdpd12_l_edgex esdpd12_cath_ndiff_c_ntubx ((1.5 <= enc...

Executing: esdpd12_y2_all = drc(esdpd12_l_edgex esdpd12_cath_ndiff_c_ntubx (enc < 2.5) p...

Executing: esdpd12_y2_bad = geomAndNot(esdpd12_y2_all esdpd12_y2_good)
	   errorLayer(esdpd12_y2_bad "ESDPD12_Y2 Element Rule : _ESDPD12_Y2_")

Executing: esdpd12_x3_good = drc(esdpd12_w_edgex esdpd12_anod_pdiff_c_subx ((0.5 <= sep)...

Executing: esdpd12_x3_all = drc(esdpd12_w_edgex esdpd12_anod_pdiff_c_subx (sep < 1) para...

Executing: esdpd12_x3_bad = geomAndNot(esdpd12_x3_all esdpd12_x3_good)
	   errorLayer(esdpd12_x3_bad "ESDPD12_X3 Element Rule : _ESDPD12_X3_")

Executing: esdpd12_y3_good = drc(esdpd12_l_edgex esdpd12_anod_pdiff_c_subx ((2.0 <= sep)...

Executing: esdpd12_y3_all = drc(esdpd12_l_edgex esdpd12_anod_pdiff_c_subx (sep < 2.5) pa...

Executing: esdpd12_y3_bad = geomAndNot(esdpd12_y3_all esdpd12_y3_good)
	   errorLayer(esdpd12_y3_bad "ESDPD12_Y3 Element Rule : _ESDPD12_Y3_")

Executing: esdpd12_x4_good = drc(esdpd12_anod_pdiff_c_subx ((0.7 <= width) <= 0.7) paral...

Executing: esdpd12_x4_all = drc(esdpd12_anod_pdiff_c_subx (width < 1.5) parallel opposite)

Executing: esdpd12_x4_bad = geomAndNot(esdpd12_x4_all esdpd12_x4_good)
	   errorLayer(esdpd12_x4_bad "ESDPD12_X4 Element Rule : _ESDPD12_X4_")

Executing: esdpd18_hvdef_defx = geomButtOrOver(HVDEF ESDPD18_device)

Executing: esdpd18_cath_ndiff_c_ntubx = geomAnd(geomAnd(net_ndiff_c_ntub NTUB) esdpd18_h...

Executing: esdpd18_anod_pdiff_c_subx = geomButtOrOver(net_pdiff_c_sub geomSize(esdpd18_h...

Executing: esdpd18_ntubx = geomEnclose(NTUB esdpd18_cath_ndiff_c_ntubx)

Executing: esdpd18_lw_edge_ele = geomGetEdge(ESDPD18_device)

Executing: esdpd18_l_edgex = geomGetLength(esdpd18_lw_edge_ele (keep < 2.5))

Executing: esdpd18_w_edgex = geomGetLength(esdpd18_lw_edge_ele (keep > 2.5))

Executing: esdpd18_l_edge_ele_bad = geomGetLength(esdpd18_l_edgex ((1.7 <= ignore) <= 1.7))
	   errorLayer(esdpd18_l_edge_ele_bad "ESDPD18_L Element Rule : CATHODE-NTUB length = 1.7")

Executing: esdpd18_w1_edge_ele_bad = geomGetLength(esdpd18_w_edgex (keep < 10))
	   errorLayer(esdpd18_w1_edge_ele_bad "ESDPD18_W1 Element Rule : Minimum CATHODE-NTUB width = 10")

Executing: esdpd18_w2_edge_ele_bad = geomGetLength(esdpd18_w_edgex (keep > 10000))
	   errorLayer(esdpd18_w2_edge_ele_bad "ESDPD18_W2 Element Rule : Maximum CATHODE-NTUB width = 10000")

Executing: esdpd18_x2_good = drc(esdpd18_w_edgex esdpd18_cath_ndiff_c_ntubx ((0.5 <= enc...

Executing: esdpd18_x2_all = drc(esdpd18_w_edgex esdpd18_cath_ndiff_c_ntubx (enc < 1) par...

Executing: esdpd18_x2_bad = geomAndNot(esdpd18_x2_all esdpd18_x2_good)
	   errorLayer(esdpd18_x2_bad "ESDPD18_X2 Element Rule : NTUB enclosure of NDIFF = 0.5")

Executing: esdpd18_y2_good = drc(esdpd18_l_edgex esdpd18_cath_ndiff_c_ntubx ((1.5 <= enc...

Executing: esdpd18_y2_all = drc(esdpd18_l_edgex esdpd18_cath_ndiff_c_ntubx (enc < 2.5) p...

Executing: esdpd18_y2_bad = geomAndNot(esdpd18_y2_all esdpd18_y2_good)
	   errorLayer(esdpd18_y2_bad "ESDPD18_Y2 Element Rule : NTUB enclosure of NDIFF = 1.5")

Executing: esdpd18_x3_good = drc(esdpd18_w_edgex esdpd18_anod_pdiff_c_subx ((0.5 <= sep)...

Executing: esdpd18_x3_all = drc(esdpd18_w_edgex esdpd18_anod_pdiff_c_subx (sep < 1) para...

Executing: esdpd18_x3_bad = geomAndNot(esdpd18_x3_all esdpd18_x3_good)
	   errorLayer(esdpd18_x3_bad "ESDPD18_X3 Element Rule : PDIFF to NTUB spacing = 0.5")

Executing: esdpd18_y3_good = drc(esdpd18_l_edgex esdpd18_anod_pdiff_c_subx ((2 <= sep) <...

Executing: esdpd18_y3_all = drc(esdpd18_l_edgex esdpd18_anod_pdiff_c_subx (sep < 2.5) pa...

Executing: esdpd18_y3_bad = geomAndNot(esdpd18_y3_all esdpd18_y3_good)
	   errorLayer(esdpd18_y3_bad "ESDPD18_Y3 Element Rule : PDIFF to NTUB spacing = 2")

Executing: esdpd18_x4_good = drc(esdpd18_anod_pdiff_c_subx ((0.7 <= width) <= 0.7) paral...

Executing: esdpd18_x4_all = drc(esdpd18_anod_pdiff_c_subx (width < 1.5) parallel opposite)

Executing: esdpd18_x4_bad = geomAndNot(esdpd18_x4_all esdpd18_x4_good)
	   errorLayer(esdpd18_x4_bad "ESDPD18_X4 Element Rule : PDIFF width = 0.7")

Executing: esdpd18_x5 = drc(geomAnd(esdpd18_ntubx MET1) (width < 1.6) parallel opposite)

Executing: esdpd26_hvdef_defx = geomButtOrOver(HVDEF ESDPD26_device)

Executing: esdpd26_cath_ndiff_c_ntubx = geomAnd(geomAnd(net_ndiff_c_ntub NTUB) esdpd26_h...

Executing: esdpd26_anod_pdiff_c_subx = geomButtOrOver(net_pdiff_c_sub geomSize(esdpd26_h...

Executing: esdpd26_ntubx = geomEnclose(NTUB esdpd26_cath_ndiff_c_ntubx)

Executing: esdpd26_lw_edge_ele = geomGetEdge(ESDPD26_device)

Executing: esdpd26_l_edge_ele = geomGetLength(esdpd26_lw_edge_ele (keep < 2.5))

Executing: esdpd26_w_edge_ele = geomGetLength(esdpd26_lw_edge_ele (keep > 2.5))

Executing: esdpd26_w_edgex = geomCat(esdpd26_w_edge_ele)

Executing: esdpd26_l_edgex = geomCat(esdpd26_l_edge_ele)

Executing: esdpd26_l_edge_ele_bad = geomGetLength(esdpd26_l_edge_ele ((2.1 <= ignore) <=...
	   errorLayer(esdpd26_l_edge_ele_bad "ESDPD26_L Element Rule : CATHODE-NTUB length = 2.1")

Executing: esdpd26_w1_edge_ele_bad = geomGetLength(esdpd26_w_edge_ele (keep < 10))
	   errorLayer(esdpd26_w1_edge_ele_bad "ESDPD26_W1 Element Rule : Minimum CATHODE-NTUB width = 10")

Executing: esdpd26_w2_edge_ele_bad = geomGetLength(esdpd26_w_edge_ele (keep > 10000))
	   errorLayer(esdpd26_w2_edge_ele_bad "ESDPD26_W2 Element Rule : Maximum CATHODE-NTUB width = 10000")

Executing: esdpd26_x2_good = drc(esdpd26_w_edgex esdpd26_cath_ndiff_c_ntubx ((0.7 <= enc...

Executing: esdpd26_x2_all = drc(esdpd26_w_edgex esdpd26_cath_ndiff_c_ntubx (enc < 1) par...

Executing: esdpd26_x2_bad = geomAndNot(esdpd26_x2_all esdpd26_x2_good)
	   errorLayer(esdpd26_x2_bad "ESDPD26_X2 Element Rule : NTUB enclosure of NDIFF = 0.7")

Executing: esdpd26_y2_good = drc(esdpd26_l_edgex esdpd26_cath_ndiff_c_ntubx ((1.7 <= enc...

Executing: esdpd26_y2_all = drc(esdpd26_l_edgex esdpd26_cath_ndiff_c_ntubx (enc < 2.5) p...

Executing: esdpd26_y2_bad = geomAndNot(esdpd26_y2_all esdpd26_y2_good)
	   errorLayer(esdpd26_y2_bad "ESDPD26_Y2 Element Rule : NTUB enclosure of NDIFF = 1.7")

Executing: esdpd26_x3_good = drc(esdpd26_w_edgex esdpd26_anod_pdiff_c_subx ((1 <= sep) <...

Executing: esdpd26_x3_all = drc(esdpd26_w_edgex esdpd26_anod_pdiff_c_subx (sep < 1.5) pa...

Executing: esdpd26_x3_bad = geomAndNot(esdpd26_x3_all esdpd26_x3_good)
	   errorLayer(esdpd26_x3_bad "ESDPD26_X3 Element Rule : PDIFF to NTUB spacing = 1")

Executing: esdpd26_y3_good = drc(esdpd26_l_edgex esdpd26_anod_pdiff_c_subx ((2 <= sep) <...

Executing: esdpd26_y3_all = drc(esdpd26_l_edgex esdpd26_anod_pdiff_c_subx (sep < 2.5) pa...

Executing: esdpd26_y3_bad = geomAndNot(esdpd26_y3_all esdpd26_y3_good)
	   errorLayer(esdpd26_y3_bad "ESDPD26_Y3 Element Rule : PDIFF to NTUB spacing = 2")

Executing: esdpd26_x4_good = drc(esdpd26_anod_pdiff_c_subx ((0.7 <= width) <= 0.7) paral...

Executing: esdpd26_x4_all = drc(esdpd26_anod_pdiff_c_subx (width < 1.5) parallel opposite)

Executing: esdpd26_x4_bad = geomAndNot(esdpd26_x4_all esdpd26_x4_good)
	   errorLayer(esdpd26_x4_bad "ESDPD26_X4 Element Rule : PDIFF width = 0.7")

Executing: esdpd26_x5 = drc(geomAnd(esdpd26_ntubx MET1) (width < 1.9) parallel opposite)

Executing: esdpd30_hvdef_defx = geomButtOrOver(HVDEF ESDPD30_device)

Executing: esdpd30_cath_ndiff_c_ntubx = geomAnd(geomAnd(net_ndiff_c_ntub NTUB) esdpd30_h...

Executing: esdpd30_anod_pdiff_c_subx = geomButtOrOver(net_pdiff_c_sub geomSize(esdpd30_h...

Executing: esdpd30_ntubx = geomEnclose(NTUB esdpd30_cath_ndiff_c_ntubx)

Executing: esdpd30_lw_edge_ele = geomGetEdge(ESDPD30_device)

Executing: esdpd30_l_edge_ele = geomGetLength(esdpd30_lw_edge_ele (keep < 2.5))

Executing: esdpd30_w_edge_ele = geomGetLength(esdpd30_lw_edge_ele (keep > 2.5))

Executing: esdpd30_w_edgex = geomCat(esdpd30_w_edge_ele)

Executing: esdpd30_l_edgex = geomCat(esdpd30_l_edge_ele)

Executing: esdpd30_l_edge_ele_bad = geomGetLength(esdpd30_l_edge_ele ((2.3 <= ignore) <=...
	   errorLayer(esdpd30_l_edge_ele_bad "ESDPD30_L Element Rule : CATHODE-NTUB length = 2.3")

Executing: esdpd30_w1_edge_ele_bad = geomGetLength(esdpd30_w_edge_ele (keep < 10))
	   errorLayer(esdpd30_w1_edge_ele_bad "ESDPD30_W1 Element Rule : Minimum CATHODE-NTUB width = 10")

Executing: esdpd30_w2_edge_ele_bad = geomGetLength(esdpd30_w_edge_ele (keep > 10000))
	   errorLayer(esdpd30_w2_edge_ele_bad "ESDPD30_W2 Element Rule : Maximum CATHODE-NTUB width = 10000")

Executing: esdpd30_x2_good = drc(esdpd30_w_edgex esdpd30_cath_ndiff_c_ntubx ((0.8 <= enc...

Executing: esdpd30_x2_all = drc(esdpd30_w_edgex esdpd30_cath_ndiff_c_ntubx (enc < 1.5) p...

Executing: esdpd30_x2_bad = geomAndNot(esdpd30_x2_all esdpd30_x2_good)
	   errorLayer(esdpd30_x2_bad "ESDPD30_X2 Element Rule : NTUB enclosure of NDIFF = 0.8")

Executing: esdpd30_y2_good = drc(esdpd30_l_edgex esdpd30_cath_ndiff_c_ntubx ((1.8 <= enc...

Executing: esdpd30_y2_all = drc(esdpd30_l_edgex esdpd30_cath_ndiff_c_ntubx (enc < 2.5) p...

Executing: esdpd30_y2_bad = geomAndNot(esdpd30_y2_all esdpd30_y2_good)
	   errorLayer(esdpd30_y2_bad "ESDPD30_Y2 Element Rule : NTUB enclosure of NDIFF = 1.8")

Executing: esdpd30_x3_good = drc(esdpd30_w_edgex esdpd30_anod_pdiff_c_subx ((1.5 <= sep)...

Executing: esdpd30_x3_all = drc(esdpd30_w_edgex esdpd30_anod_pdiff_c_subx (sep < 2) para...

Executing: esdpd30_x3_bad = geomAndNot(esdpd30_x3_all esdpd30_x3_good)
	   errorLayer(esdpd30_x3_bad "ESDPD30_X3 Element Rule : PDIFF to NTUB spacing = 1.5")

Executing: esdpd30_y3_good = drc(esdpd30_l_edgex esdpd30_anod_pdiff_c_subx ((2 <= sep) <...

Executing: esdpd30_y3_all = drc(esdpd30_l_edgex esdpd30_anod_pdiff_c_subx (sep < 2.5) pa...

Executing: esdpd30_y3_bad = geomAndNot(esdpd30_y3_all esdpd30_y3_good)
	   errorLayer(esdpd30_y3_bad "ESDPD30_Y3 Element Rule : PDIFF to NTUB spacing = 2")

Executing: esdpd30_x4_good = drc(esdpd30_anod_pdiff_c_subx ((0.7 <= width) <= 0.7) paral...

Executing: esdpd30_x4_all = drc(esdpd30_anod_pdiff_c_subx (width < 1.5) parallel opposite)

Executing: esdpd30_x4_bad = geomAndNot(esdpd30_x4_all esdpd30_x4_good)
	   errorLayer(esdpd30_x4_bad "ESDPD30_X4 Element Rule : PDIFF width = 0.7")

Executing: esdpd30_x5 = drc(geomAnd(esdpd30_ntubx MET1) (width < 1.9) parallel opposite)

Executing: esdfdp5_hvdef_defx = geomButtOrOver(HVDEF ESDFDP5_device)

Executing: esdfdp5_cath_ndiff_c_ntubx = geomButtOrOver(geomAnd(net_ndiff_c_ntub NTUB) ge...

Executing: esdfdp5_anod_pdiff_d_ntubx = geomAnd(geomAnd(net_pdiff_d_ntub NTUB) esdfdp5_h...

Executing: esdfdp5_lw_edge_ele = geomGetEdge(ESDFDP5_device)

Executing: esdfdp5_l_edge_ele = geomGetLength(esdfdp5_lw_edge_ele (keep < 2.5))

Executing: esdfdp5_w_edge_ele = geomGetLength(esdfdp5_lw_edge_ele (keep > 2.5))

Executing: esdfdp5_l_edge_ele_bad = geomGetLength(esdfdp5_l_edge_ele ((0.7 <= ignore) <=...
	   errorLayer(esdfdp5_l_edge_ele_bad "ESDFDP5_L Element Rule : ANODE-PDIFF length = 0.7")

Executing: esdfdp5_w1_edge_ele_bad = geomGetLength(esdfdp5_w_edge_ele (keep < 10))
	   errorLayer(esdfdp5_w1_edge_ele_bad "ESDFDP5_W1 Element Rule : Minimum ANODE-PDIFF width = 10")

Executing: esdfdp5_w2_edge_ele_bad = geomGetLength(esdfdp5_w_edge_ele (keep > 200))
	   errorLayer(esdfdp5_w2_edge_ele_bad "ESDFDP5_W2 Element Rule : Maximum ANODE-PDIFF width = 200")

Executing: esdfdp5_x2_good = drc(esdfdp5_cath_ndiff_c_ntubx esdfdp5_anod_pdiff_d_ntubx (...

Executing: esdfdp5_x2_all = drc(esdfdp5_cath_ndiff_c_ntubx esdfdp5_anod_pdiff_d_ntubx (s...

Executing: esdfdp5_x2_bad = geomAndNot(esdfdp5_x2_all esdfdp5_x2_good)
	   errorLayer(esdfdp5_x2_bad "ESDFDP5_X2 Element Rule : PDIFF to NDIFF spacing = 0.7")

Executing: esdfdp5_x3_good = drc(esdfdp5_cath_ndiff_c_ntubx ((0.7 <= width) <= 0.7) para...

Executing: esdfdp5_x3_all = drc(esdfdp5_cath_ndiff_c_ntubx (width < 1.5) parallel opposite)

Executing: esdfdp5_x3_bad = geomAndNot(esdfdp5_x3_all esdfdp5_x3_good)
	   errorLayer(esdfdp5_x3_bad "ESDFDP5_X3 Element Rule : NDIFF width = 0.7")

Executing: esdfdn5_hvdef_defx = geomButtOrOver(HVDEF ESDFDN5_device)

Executing: esdfdn5_cath_ndiff_d_subx = geomAnd(net_ndiff_d_sub esdfdn5_hvdef_defx)

Executing: esdfdn5_anod_pdiff_c_subx = geomButtOrOver(net_pdiff_c_sub geomSize(esdfdn5_h...

Executing: esdfdn5_lw_edge_ele = geomGetEdge(ESDFDN5_device)

Executing: esdfdn5_l_edge_ele = geomGetLength(esdfdn5_lw_edge_ele (keep < 2.5))

Executing: esdfdn5_w_edge_ele = geomGetLength(esdfdn5_lw_edge_ele (keep > 2.5))

Executing: esdfdn5_l_edge_ele_bad = geomGetLength(esdfdn5_l_edge_ele ((0.7 <= ignore) <=...
	   errorLayer(esdfdn5_l_edge_ele_bad "ESDFDN5_L Element Rule : CATHODE-NDIFF length = 0.7")

Executing: esdfdn5_w1_edge_ele_bad = geomGetLength(esdfdn5_w_edge_ele (keep < 10))
	   errorLayer(esdfdn5_w1_edge_ele_bad "ESDFDN5_W1 Element Rule : Minimum CATHODE-NDIFF width = 10")

Executing: esdfdn5_w2_edge_ele_bad = geomGetLength(esdfdn5_w_edge_ele (keep > 200))
	   errorLayer(esdfdn5_w2_edge_ele_bad "ESDFDN5_W2 Element Rule : Maximum CATHODE-NDIFF width = 200")

Executing: esdfdn5_x2_good = drc(esdfdn5_cath_ndiff_d_subx esdfdn5_anod_pdiff_c_subx ((0...

Executing: esdfdn5_x2_all = drc(esdfdn5_cath_ndiff_d_subx esdfdn5_anod_pdiff_c_subx (sep...

Executing: esdfdn5_x2_bad = geomAndNot(esdfdn5_x2_all esdfdn5_x2_good)
	   errorLayer(esdfdn5_x2_bad "ESDFDN5_X2 Element Rule : NDIFF to PDIFF spacing = 0.7")

Executing: esdfdn5_x3_good = drc(esdfdn5_anod_pdiff_c_subx ((0.7 <= width) <= 0.7) paral...

Executing: esdfdn5_x3_all = drc(esdfdn5_anod_pdiff_c_subx (width < 1.5) parallel opposite)

Executing: esdfdn5_x3_bad = geomAndNot(esdfdn5_x3_all esdfdn5_x3_good)
	   errorLayer(esdfdn5_x3_bad "ESDFDN5_X3 Element Rule : PDIFF width = 0.7")

Executing: esdgcn5_hvdef_defx = geomButtOrOver(HVDEF ESDGCN5_device)

Executing: esdgcn5_cath_ndiff_d_subx = geomAnd(net_ndiff_d_sub esdgcn5_hvdef_defx)

Executing: esdgcn5_anod_pdiff_c_subx = geomButtOrOver(net_pdiff_c_sub geomSize(esdgcn5_h...

Executing: esdgcn5_rect_min_ele_x = geomContactCheck(esdgcn5_cath_ndiff_d_subx (width ==...

Executing: esdgcn5_rect_min_ele = geomAndNot(esdgcn5_cath_ndiff_d_subx esdgcn5_rect_min_...

Executing: esdgcn5_rect_non_min_ele_x = geomContactCheck(esdgcn5_cath_ndiff_d_subx (widt...

Executing: esdgcn5_rect_non_min_ele = geomAndNot(esdgcn5_cath_ndiff_d_subx esdgcn5_rect_...

Executing: esdgcn5_w_edgex = geomGetLength(esdgcn5_rect_non_min_ele (keep > 0.7))

Executing: esdgcn5_a = geomAvoiding(esdgcn5_cath_ndiff_d_subx geomOr(esdgcn5_rect_min_el...

Executing: esdgcn5_a_edge = geomGetEdge(esdgcn5_a)

Executing: esdgcn5_l_edgex = geomGetLength(esdgcn5_a_edge (keep < 1.0))

Executing: esdgcn5_l_edge_ele_bad = geomGetLength(esdgcn5_l_edgex ((0.7 <= ignore) <= 0.7))
	   errorLayer(esdgcn5_l_edge_ele_bad "ESDGCN5_L Element Rule : CATHODE-NDIFF length = 0.7")

Executing: esdgcn5_w1_edge_ele_bad = geomGetLength(esdgcn5_w_edgex (keep < 0.7))
	   errorLayer(esdgcn5_w1_edge_ele_bad "ESDGCN5_W1 Element Rule : Minimum CATHODE-NDIFF width = 0.7")

Executing: esdgcn5_w2_edge_ele_bad = geomGetLength(esdgcn5_w_edgex (keep > 100))
	   errorLayer(esdgcn5_w2_edge_ele_bad "ESDGCN5_W2 Element Rule : Maximum CATHODE-NDIFF width = 100")

Executing: esdgcn5_x2_good = drc(esdgcn5_cath_ndiff_d_subx esdgcn5_anod_pdiff_c_subx ((0...

Executing: esdgcn5_x2_all = drc(esdgcn5_cath_ndiff_d_subx esdgcn5_anod_pdiff_c_subx (sep...

Executing: esdgcn5_x2_bad = geomAndNot(esdgcn5_x2_all esdgcn5_x2_good)
	   errorLayer(esdgcn5_x2_bad "ESDGCN5_X2 Element Rule : NDIFF to PDIFF spacing = 0.7")

Executing: esdgcn5_x3_good = drc(esdgcn5_anod_pdiff_c_subx ((0.7 <= width) <= 0.7) paral...

Executing: esdgcn5_x3_all = drc(esdgcn5_anod_pdiff_c_subx (width < 1.5) parallel opposite)

Executing: esdgcn5_x3_bad = geomAndNot(esdgcn5_x3_all esdgcn5_x3_good)
	   errorLayer(esdgcn5_x3_bad "ESDGCN5_X3 Element Rule : PDIFF width = 0.7")

Executing: esdgcp5_hvdef_defx = geomButtOrOver(HVDEF ESDGCP5_device)

Executing: esdgcp5_cath_ndiff_c_ntubx = geomButtOrOver(geomAnd(net_ndiff_c_ntub NTUB) ge...

Executing: esdgcp5_anod_pdiff_d_ntubx = geomAnd(geomAnd(net_pdiff_d_ntub NTUB) esdgcp5_h...

Executing: esdgcp5_rect_min_ele_x = geomContactCheck(esdgcp5_anod_pdiff_d_ntubx (width =...

Executing: esdgcp5_rect_min_ele = geomAndNot(esdgcp5_anod_pdiff_d_ntubx esdgcp5_rect_min...

Executing: esdgcp5_rect_non_min_ele_x = geomContactCheck(esdgcp5_anod_pdiff_d_ntubx (wid...

Executing: esdgcp5_rect_non_min_ele = geomAndNot(esdgcp5_anod_pdiff_d_ntubx esdgcp5_rect...

Executing: esdgcp5_w_edgex = geomGetLength(esdgcp5_rect_non_min_ele (keep > 0.7))

Executing: esdgcp5_a = geomAvoiding(esdgcp5_anod_pdiff_d_ntubx geomOr(esdgcp5_rect_min_e...

Executing: esdgcp5_a_edge = geomGetEdge(esdgcp5_a)

Executing: esdgcp5_l_edgex = geomGetLength(esdgcp5_a_edge (keep < 1.0))

Executing: esdgcp5_l_edge_ele_bad = geomGetLength(esdgcp5_l_edgex ((0.7 <= ignore) <= 0.7))
	   errorLayer(esdgcp5_l_edge_ele_bad "ESDGCP5_L Element Rule : ANODE-PDIFF length = 0.7")

Executing: esdgcp5_w1_edge_ele_bad = geomGetLength(esdgcp5_w_edgex (keep < 0.7))
	   errorLayer(esdgcp5_w1_edge_ele_bad "ESDGCP5_W1 Element Rule : Minimum ANODE-PDIFF width = 0.7")

Executing: esdgcp5_w2_edge_ele_bad = geomGetLength(esdgcp5_w_edgex (keep > 100))
	   errorLayer(esdgcp5_w2_edge_ele_bad "ESDGCP5_W2 Element Rule : Maximum ANODE-PDIFF width = 100")

Executing: esdgcp5_x2_good = drc(esdgcp5_cath_ndiff_c_ntubx esdgcp5_anod_pdiff_d_ntubx (...

Executing: esdgcp5_x2_all = drc(esdgcp5_cath_ndiff_c_ntubx esdgcp5_anod_pdiff_d_ntubx (s...

Executing: esdgcp5_x2_bad = geomAndNot(esdgcp5_x2_all esdgcp5_x2_good)
	   errorLayer(esdgcp5_x2_bad "ESDGCP5_X2 Element Rule : PDIFF to NDIFF spacing = 0.7")

Executing: esdgcp5_x3_good = drc(esdgcp5_cath_ndiff_c_ntubx ((0.7 <= width) <= 0.7) para...

Executing: esdgcp5_x3_all = drc(esdgcp5_cath_ndiff_c_ntubx (width < 1.5) parallel opposite)

Executing: esdgcp5_x3_bad = geomAndNot(esdgcp5_x3_all esdgcp5_x3_good)
	   errorLayer(esdgcp5_x3_bad "ESDGCP5_X3 Element Rule : NDIFF width = 0.7")

Executing: waffle_w_holes_1_edge_length_all = geomSize(geomGetLength(waffle_w_holes_1_ed...

Executing: waffle_w_holes_all = geomButtOrOver(waffle_holes waffle_w_holes_1_edge_length...

Executing: waffle_w_holes_bad = geomAndNot(waffle_w_holes_all waffle_w_holes_good)

Executing: waffle_w_diff_good = geomButtOrOver(DIFF waffle_w_holes_good)

Executing: waffle_w_diff_bad = geomButtOrOver(DIFF waffle_w_holes_bad)

Executing: waffle_w_diff_err = geomAnd(waffle_w_diff_good waffle_w_diff_bad)
	   errorLayer(waffle_w_diff_err "MOSW : Waffle trans : cannot mix different size of holes over same diff")

Executing: waffle_w_holes_incorrect_diff = geomAnd(waffle_w_holes_incorrect waffle_w_dif...
	   errorLayer(waffle_w_holes_incorrect_diff "MOSW : Waffle trans hole : poly hole size incorrect")

Executing: waffle_w_gate_bad = geomAnd(geomSize(waffle_w_holes_incorrect_diff 3.1 edges)...

Executing: waffle_w_gate_badx = geomAndNot(waffle_w_gate_bad geomOr(pmos_waffle_w nmos_w...
	   errorLayer(waffle_w_gate_badx "MOSW : Waffle trans gate : these gates cannot be identified correctly due to size of poly hole and are discarded from LVS")

Executing: waffle_nmosw_sd = geomButtOrOver(net_ndiff nmosw_device_all)

Executing: geomStamp(waffle_nmosw_sd net_ndiff)

Executing: waffle_nmosw_sd_short = geomAnd(drc(waffle_nmosw_sd (sep < 3.1) parallel oppo...
	   errorLayer(waffle_nmosw_sd_short "NMOSW : Waffle trans : shorted device nmosw")

Executing: waffle_nmosmw_sd = geomButtOrOver(net_ndiff nmosmw_device_all)

Executing: geomStamp(waffle_nmosmw_sd net_ndiff)

Executing: waffle_nmosmw_sd_short = geomAnd(drc(waffle_nmosmw_sd (sep < 3.1) parallel op...
	   errorLayer(waffle_nmosmw_sd_short "NMOSMW : Waffle trans : shorted device nmosmw")

Executing: waffle_pmosw_sd = geomButtOrOver(net_pdiff pmosw_device_all)

Executing: geomStamp(waffle_pmosw_sd net_pdiff)

Executing: waffle_pmosw_sd_short = geomAnd(drc(waffle_pmosw_sd (sep < 3.1) parallel oppo...
	   errorLayer(waffle_pmosw_sd_short "PMOSW : Waffle trans : shorted device pmosw")

Executing: waffle_pmosmw_sd = geomButtOrOver(net_pdiff pmosmw_device_all)

Executing: geomStamp(waffle_pmosmw_sd net_pdiff)

Executing: waffle_pmosmw_sd_short = geomAnd(drc(waffle_pmosmw_sd (sep < 3.1) parallel op...
	   errorLayer(waffle_pmosmw_sd_short "PMOSMW : Waffle trans : shorted device pmosmw")

Executing: waffle_nmosw_sd_diffcon = geomAnd(waffle_nmosw_sd net_ndiffcon)

Executing: waffle_nmosw_sd_diffcon_box_net = geomGetBBox(geomSize(geomSize(waffle_nmosw_...

Executing: geomStamp(waffle_nmosw_sd_diffcon_box_net net_ndiff)

Executing: waffle_nmosw_sd_diffcon_conn = geomAnd(drc(waffle_nmosw_sd_diffcon_box_net (s...

Executing: waffle_nmosw_sd_diffcon_net_remain = geomAvoiding(waffle_nmosw_sd_diffcon_box...
	   errorLayer(waffle_nmosw_sd_diffcon_net_remain "NMOSW : Waffle trans : s/d of waffle trans not connected to other sd over same waffle diff, Inactive Unit found, causes encreasing current flow in neighbouring devices")

Executing: waffle_nmosmw_sd_diffcon = geomAnd(waffle_nmosmw_sd net_ndiffcon)

Executing: waffle_nmosmw_sd_diffcon_box_net = geomGetBBox(geomSize(geomSize(waffle_nmosm...

Executing: geomStamp(waffle_nmosmw_sd_diffcon_box_net net_ndiff)

Executing: waffle_nmosmw_sd_diffcon_conn = geomAnd(drc(waffle_nmosmw_sd_diffcon_box_net ...

Executing: waffle_nmosmw_sd_diffcon_net_remain = geomAvoiding(waffle_nmosmw_sd_diffcon_b...
	   errorLayer(waffle_nmosmw_sd_diffcon_net_remain "NMOSMW : Waffle trans : s/d of waffle trans not connected to other sd over same waffle diff, Inactive Unit found, causes encreasing current flow in neighbouring devices")

Executing: waffle_pmosw_sd_diffcon = geomAnd(waffle_pmosw_sd net_pdiffcon)

Executing: waffle_pmosw_sd_diffcon_box_net = geomGetBBox(geomSize(geomSize(waffle_pmosw_...

Executing: geomStamp(waffle_pmosw_sd_diffcon_box_net net_pdiff)

Executing: waffle_pmosw_sd_diffcon_conn = geomAnd(drc(waffle_pmosw_sd_diffcon_box_net (s...

Executing: waffle_pmosw_sd_diffcon_net_remain = geomAvoiding(waffle_pmosw_sd_diffcon_box...
	   errorLayer(waffle_pmosw_sd_diffcon_net_remain "PMOSW : Waffle trans : s/d of waffle trans not connected to other sd over same waffle diff, Inactive Unit found, causes encreasing current flow in neighbouring devices")

Executing: waffle_pmosmw_sd_diffcon = geomAnd(waffle_pmosmw_sd net_pdiffcon)

Executing: waffle_pmosmw_sd_diffcon_box_net = geomGetBBox(geomSize(geomSize(waffle_pmosm...

Executing: geomStamp(waffle_pmosmw_sd_diffcon_box_net net_pdiff)

Executing: waffle_pmosmw_sd_diffcon_conn = geomAnd(drc(waffle_pmosmw_sd_diffcon_box_net ...

Executing: waffle_pmosmw_sd_diffcon_net_remain = geomAvoiding(waffle_pmosmw_sd_diffcon_b...
	   errorLayer(waffle_pmosmw_sd_diffcon_net_remain "PMOSMW : Waffle trans : s/d of waffle trans not connected to other sd over same waffle diff, Inactive Unit found, causes encreasing current flow in neighbouring devices")

Executing: waffle_nmosw_bad_sd = geomAndNot(nmosw_device_all geomOr(waffle_w_nmosw_4n ge...
	   errorLayer(waffle_nmosw_bad_sd " NMOSW for waffle trans we expect 1, 2, or 4 s/d conts")

Executing: waffle_nmosmw_bad_sd = geomAndNot(nmosmw_device_all geomOr(waffle_w_nmosmw_4n...
	   errorLayer(waffle_nmosmw_bad_sd " NMOSMW for waffle trans we expect 1, 2, or 4 s/d conts")

Executing: waffle_nmosw_poly1_ok = geomButtOrOver(waffle_w_poly1_good nmosw_device_all)

Executing: waffle_nmosw_holes_ok = geomButtOrOver(waffle_w_holes_good nmosw_device_all)

Executing: waffle_nmosw_w_edge = geomGetEdge(waffle_nmosw_poly1_ok butting waffle_nmosw_...

Executing: waffle_nmosw_l_edge = geomGetEdge(nmosw_device_all outside waffle_w_ndiff_good)

Executing: waffle_nmosmw_poly1_ok = geomButtOrOver(waffle_w_poly1_good nmosmw_device_all)

Executing: waffle_nmosmw_holes_ok = geomButtOrOver(waffle_w_holes_good nmosmw_device_all)

Executing: waffle_nmosmw_w_edge = geomGetEdge(waffle_nmosmw_poly1_ok butting waffle_nmos...

Executing: waffle_nmosmw_l_edge = geomGetEdge(nmosmw_device_all outside waffle_w_ndiff_g...

Executing: waffle_nmosw_w_edge_bad = geomGetLength(waffle_nmosw_w_edge ((3.95 <= ignore)...
	   errorLayer(waffle_nmosw_w_edge_bad "NMOSW_W : Waffle trans : fixed channel length 4 = 2.8 sqrt(2)")

Executing: waffle_nmosw_l_edge_bad_min = geomGetLength(waffle_nmosw_l_edge (keep < 0.49))
	   errorLayer(waffle_nmosw_l_edge_bad_min "NMOSW_L1 : Waffle trans : min channel length 0.5 = 0.35 sqrt(2)")

Executing: waffle_nmosw_l_edge_bad_max = geomGetLength(waffle_nmosw_l_edge (keep > 2.97))
	   errorLayer(waffle_nmosw_l_edge_bad_max "NMOSW_L2 : Waffle trans : max channel length 3.0 = 2.1 sqrt(2)")

Executing: waffle_nmosmw_w_edge_bad = geomGetLength(waffle_nmosmw_w_edge ((3.95 <= ignor...
	   errorLayer(waffle_nmosmw_w_edge_bad "NMOSMW_W : Waffle trans : fixed channel length 4 = 2.8 sqrt(2)")

Executing: waffle_nmosmw_l_edge_bad_min = geomGetLength(waffle_nmosmw_l_edge (keep < 0.49))
	   errorLayer(waffle_nmosmw_l_edge_bad_min "NMOSMW_L1 : Waffle trans : min channel length 0.5 = 0.35 sqrt(2)")

Executing: waffle_nmosmw_l_edge_bad_max = geomGetLength(waffle_nmosmw_l_edge (keep > 2.97))
	   errorLayer(waffle_nmosmw_l_edge_bad_max "NMOSMW_L2 : Waffle trans : max channel length 3.0 = 2.1 sqrt(2)")

Executing: waffle_nmosw_err1 = drc(nmosw_device_all net_ndiffcon (sep < 1.2))

Executing: waffle_nmosw_err2 = geomAnd(geomSize(nmosw_device_all 1.22 edges) geomSize(nd...

Executing: waffle_nmosw_err3 = geomButtOrOver(geomGetHoled(waffle_nmosw_err2) net_ndiffc...

Executing: waffle_nmosw_err4 = geomButtOrOver(geomGetVertex(waffle_nmosw_err2 (keep == 6...

Executing: waffle_nmosw_err5 = geomButtOrOver(geomGetVertex(waffle_nmosw_err2 (keep == 4...

Executing: waffle_nmosw_err = geomCat(waffle_nmosw_err1 waffle_nmosw_err3 waffle_nmosw_e...
	   errorLayer(waffle_nmosw_err "NMOSW_S1 : Waffle trans : fixed diffcon to gate spacing 1.2 0.85 * sqrt(2)")

Executing: waffle_nmosmw_err1 = drc(nmosmw_device_all net_ndiffcon (sep < 1.2))

Executing: waffle_nmosmw_err2 = geomAnd(geomSize(nmosmw_device_all 1.22 edges) geomSize(...

Executing: waffle_nmosmw_err3 = geomButtOrOver(geomGetHoled(waffle_nmosmw_err2) net_ndif...

Executing: waffle_nmosmw_err4 = geomButtOrOver(geomGetVertex(waffle_nmosmw_err2 (keep ==...

Executing: waffle_nmosmw_err5 = geomButtOrOver(geomGetVertex(waffle_nmosmw_err2 (keep ==...

Executing: waffle_nmosmw_err = geomCat(waffle_nmosmw_err1 waffle_nmosmw_err3 waffle_nmos...
	   errorLayer(waffle_nmosmw_err "NMOSMW_S1 : Waffle trans : fixed diffcon to gate spacing 1.2 0.85 * sqrt(2)")

Executing: waffle_pmosw_bad_sd = geomAndNot(pmosw_device_all geomOr(waffle_w_pmosw_4n ge...
	   errorLayer(waffle_pmosw_bad_sd " PMOSW for waffle trans we expect 1, 2, or 4 s/d conts")

Executing: waffle_pmosmw_bad_sd = geomAndNot(pmosmw_device_all geomOr(waffle_w_pmosmw_4n...
	   errorLayer(waffle_pmosmw_bad_sd " PMOSMW for waffle trans we expect 1, 2, or 4 s/d conts")

Executing: waffle_pmosw_poly1_ok = geomButtOrOver(waffle_w_poly1_good pmosw_device_all)

Executing: waffle_pmosw_holes_ok = geomButtOrOver(waffle_w_holes_good pmosw_device_all)

Executing: waffle_pmosw_w_edge = geomGetEdge(waffle_pmosw_poly1_ok butting waffle_pmosw_...

Executing: waffle_pmosw_l_edge = geomGetEdge(pmosw_device_all outside waffle_w_pdiff_good)

Executing: waffle_pmosmw_poly1_ok = geomButtOrOver(waffle_w_poly1_good pmosmw_device_all)

Executing: waffle_pmosmw_holes_ok = geomButtOrOver(waffle_w_holes_good pmosmw_device_all)

Executing: waffle_pmosmw_w_edge = geomGetEdge(waffle_pmosmw_poly1_ok butting waffle_pmos...

Executing: waffle_pmosmw_l_edge = geomGetEdge(pmosmw_device_all outside waffle_w_pdiff_g...

Executing: waffle_pmosw_w_edge_bad = geomGetLength(waffle_pmosw_w_edge ((3.95 <= ignore)...
	   errorLayer(waffle_pmosw_w_edge_bad "PMOSW_W : Waffle trans : fixed channel length 4 = 2.8 sqrt(2)")

Executing: waffle_pmosw_l_edge_bad_min = geomGetLength(waffle_pmosw_l_edge (keep < 0.49))
	   errorLayer(waffle_pmosw_l_edge_bad_min "PMOSW_L1 : Waffle trans : min channel length 0.5 = 0.35 sqrt(2)")

Executing: waffle_pmosw_l_edge_bad_max = geomGetLength(waffle_pmosw_l_edge (keep > 2.97))
	   errorLayer(waffle_pmosw_l_edge_bad_max "PMOSW_L2 : Waffle trans : max channel length 3.0 = 2.1 sqrt(2)")

Executing: waffle_pmosmw_w_edge_bad = geomGetLength(waffle_pmosmw_w_edge ((3.95 <= ignor...
	   errorLayer(waffle_pmosmw_w_edge_bad "PMOSMW_W : Waffle trans : fixed channel length 4 = 2.8 sqrt(2)")

Executing: waffle_pmosmw_l_edge_bad_min = geomGetLength(waffle_pmosmw_l_edge (keep < 0.49))
	   errorLayer(waffle_pmosmw_l_edge_bad_min "PMOSMW_L1 : Waffle trans : min channel length 0.5 = 0.35 sqrt(2)")

Executing: waffle_pmosmw_l_edge_bad_max = geomGetLength(waffle_pmosmw_l_edge (keep > 2.97))
	   errorLayer(waffle_pmosmw_l_edge_bad_max "PMOSMW_L2 : Waffle trans : max channel length 3.0 = 2.1 sqrt(2)")

Executing: waffle_pmosw_err1 = drc(pmosw_device_all net_pdiffcon (sep < 1.2))

Executing: waffle_pmosw_err2 = geomAnd(geomSize(pmosw_device_all 1.22 edges) geomSize(pd...

Executing: waffle_pmosw_err3 = geomButtOrOver(geomGetHoled(waffle_pmosw_err2) net_pdiffc...

Executing: waffle_pmosw_err4 = geomButtOrOver(geomGetVertex(waffle_pmosw_err2 (keep == 6...

Executing: waffle_pmosw_err5 = geomButtOrOver(geomGetVertex(waffle_pmosw_err2 (keep == 4...

Executing: waffle_pmosw_err = geomCat(waffle_pmosw_err1 waffle_pmosw_err3 waffle_pmosw_e...
	   errorLayer(waffle_pmosw_err "PMOSW_S1 : Waffle trans : fixed diffcon to gate spacing 1.2 0.85 * sqrt(2)")

Executing: waffle_pmosmw_err1 = drc(pmosmw_device_all net_pdiffcon (sep < 1.2))

Executing: waffle_pmosmw_err2 = geomAnd(geomSize(pmosmw_device_all 1.22 edges) geomSize(...

Executing: waffle_pmosmw_err3 = geomButtOrOver(geomGetHoled(waffle_pmosmw_err2) net_pdif...

Executing: waffle_pmosmw_err4 = geomButtOrOver(geomGetVertex(waffle_pmosmw_err2 (keep ==...

Executing: waffle_pmosmw_err5 = geomButtOrOver(geomGetVertex(waffle_pmosmw_err2 (keep ==...

Executing: waffle_pmosmw_err = geomCat(waffle_pmosmw_err1 waffle_pmosmw_err3 waffle_pmos...
	   errorLayer(waffle_pmosmw_err "PMOSMW_S1 : Waffle trans : fixed diffcon to gate spacing 1.2 0.85 * sqrt(2)")

Executing: presh_exists = geomEnclose(substrate_all presh)

Executing: presz_exists = geomEnclose(substrate_all presz)

Executing: presh_presz_exists = geomAnd(presz_exists presh_exists)
	   errorLayer(presh_presz_exists "ILL_ELEMENT_RPOLYH_RPOLYZ")

Executing: presp_exists = geomEnclose(substrate_all presp)

Executing: presph_exists = geomEnclose(substrate_all presph)

Executing: presp_presph_exists = geomAnd(presph_exists presp_exists)
	   errorLayer(presp_presph_exists "ILL_ELEMENT_RPOLY2P_RPOLY2PH")

Executing: errorLayer(geomAndNot(MET4_pinPurpose MET4) "Warning: No MET4 on MET4 Pin")

Executing: errorLayer(geomAndNot(POLY1_pinPurpose POLY1) "Warning: No POLY1 on POLY1 Pin")

Executing: errorLayer(geomAndNot(MET1_pinPurpose MET1) "Warning: No MET1 on MET1 Pin")

Executing: errorLayer(geomAndNot(MET2_pinPurpose MET2) "Warning: No MET2 on MET2 Pin")

Executing: errorLayer(geomAndNot(MET3_pinPurpose MET3) "Warning: No MET3 on MET3 Pin")

Executing: cov_global_chipedge = drc(chip_edge_for_check chip_edge_for_check (coverage <...

Executing: chipedge_rect = geomOr(cov_global_chipedge)

Executing: ntub_rec002 = geomGetNon45(NTUB)
	   errorLayer(ntub_rec002 "REC002 REC002 NTUB not multiple 45 degrees REC002")

Executing: diff_rec002 = geomGetNon45(DIFF)
	   errorLayer(diff_rec002 "REC002 REC002 DIFF not multiple 45 degrees REC002")

Executing: midox_rec002 = geomGetNon45(MIDOX)
	   errorLayer(midox_rec002 "REC002 REC002 MIDOX not multiple 45 degrees REC002")

Executing: poly1_rec002 = geomGetNon45(POLY1)
	   errorLayer(poly1_rec002 "REC002 REC002 POLY1 not multiple 45 degrees REC002")

Executing: nplus_rec002 = geomGetNon45(NPLUS)
	   errorLayer(nplus_rec002 "REC002 REC002 NPLUS not multiple 45 degrees REC002")

Executing: pplus_rec002 = geomGetNon45(PPLUS)
	   errorLayer(pplus_rec002 "REC002 REC002 PPLUS not multiple 45 degrees REC002")

Executing: hres_rec002 = geomGetNon45(HRES)
	   errorLayer(hres_rec002 "REC002 REC002 HRES not multiple 45 degrees REC002")

Executing: cont_rec002 = geomGetNon45(CONT)
	   errorLayer(cont_rec002 "REC002 REC002 CONT not multiple 45 degrees REC002")

Executing: met1_rec002 = geomGetNon45(MET1)
	   errorLayer(met1_rec002 "REC002 REC002 MET1 not multiple 45 degrees REC002")

Executing: via1_rec002 = geomGetNon45(VIA1)
	   errorLayer(via1_rec002 "REC002 REC002 VIA1 not multiple 45 degrees REC002")

Executing: met2_rec002 = geomGetNon45(MET2)
	   errorLayer(met2_rec002 "REC002 REC002 MET2 not multiple 45 degrees REC002")

Executing: via2_rec002 = geomGetNon45(VIA2)
	   errorLayer(via2_rec002 "REC002 REC002 VIA2 not multiple 45 degrees REC002")

Executing: met3_rec002 = geomGetNon45(MET3)
	   errorLayer(met3_rec002 "REC002 REC002 MET3 not multiple 45 degrees REC002")

Executing: via3_rec002 = geomGetNon45(VIA3)
	   errorLayer(via3_rec002 "REC002 REC002 VIA3 not multiple 45 degrees REC002")

Executing: met4_rec002 = geomGetNon45(MET4)
	   errorLayer(met4_rec002 "REC002 REC002 MET4 not multiple 45 degrees REC002")

Executing: pad_rec002 = geomGetNon45(PAD)
	   errorLayer(pad_rec002 "REC002 REC002 PAD not multiple 45 degrees REC002")

Executing: routingnwell_snap = geomInside(net_nwell DIFF)

Executing: routingnwell_tubres = geomButtOrOver(NTUB RNWELL_device)

Executing: routingnwell_nocheck = geomOr(routingnwell_snap routingnwell_tubres)

Executing: routingnwell_check = geomAvoiding(net_nwell routingnwell_nocheck)

Executing: geomStamp(routingnwell_check net_nwell)

Executing: nwell_cold = geomGetNet(routingnwell_check "*VDD*" "*VCC*" "*vdd*" "*vcc*" "*...

Executing: nwell_hot_filter = geomCat(nmos18t_hvdef nmos30m_hvdef esdpd12_hvdef esdpd18_...

Executing: nwell_hot = geomAndNot(geomAndNot(routingnwell_check nwell_cold) nwell_hot_fi...

Executing: width_ntub_nww1 = drc(geomOr(nwell_cold routingnwell_nocheck) (width < 1.7))

Executing: width_ntubhot_nww2 = drc(nwell_hot (width < 3))

Executing: spac_ntub_unconn_nws1_1 = drc(net_nwell (sep < 3) diffNet)

Executing: spac_ntub_unconn_nws1 = geomAndNot(spac_ntub_unconn_nws1_1 geomSize(geomSize(...
	   errorLayer(spac_ntub_unconn_nws1 "NW_S_1 Minimum spacing of NTUB with different potential = 3")

Executing: spac_ntub_conn_nws2 = drc(net_nwell (sep < 1) sameNet)

Executing: spac_ntub_notch_nws2 = drc(ntubcheck (notch < 1) opposite)
	   errorLayer(spac_ntub_notch_nws2 "NW_S_2 Minimum spacing of NTUB with same potential = 1 notch")

Executing: ngate_w = geomGetEdge(ngate coincident POLY1)

Executing: pgate_w = geomGetEdge(pgate coincident POLY1)

Executing: geomHoles(ngate)

Executing: ndiff_1_close_odw1n = geomOr(ndiff_1 width_diff_odw1n_1)

Executing: width_diff_odw1n_2 = geomGetEdge(drc(ndiff_1_close_odw1n width_diff_odw1n_1 (...

Executing: width_diff_odw1n_3 = geomGetLength(ngate_w (keep < 0.4) contiguous)

Executing: width_diff_odw1n = geomCat(width_diff_odw1n_2 width_diff_odw1n_3)
	   errorLayer(width_diff_odw1n "OD_W_1 Minimum DIFF width to define the width of NMOS/PMOS = 0.4 ngate")

Executing: geomHoles(pgate)

Executing: pdiff_1_close_odw1p = geomOr(pdiff_1 width_diff_odw1p_1)

Executing: width_diff_odw1p_2 = geomGetEdge(drc(pdiff_1_close_odw1p width_diff_odw1p_1 (...

Executing: width_diff_odw1p_3 = geomGetLength(pgate_w (keep < 0.4) contiguous)

Executing: width_diff_odw1p = geomCat(width_diff_odw1p_2 width_diff_odw1p_3)
	   errorLayer(width_diff_odw1p "OD_W_1 Minimum DIFF width to define the width of NMOS/PMOS = 0.4 pgate")

Executing: width_diff_odw2 = drc(DIFF (width < 0.3))

Executing: spac_diff_ods1 = drc(DIFF (sep < 0.6))

Executing: spac_diff_notch_ods1 = drc(diffcheck (notch < 0.6) opposite)
	   errorLayer(spac_diff_notch_ods1 "OD_S_1 Minimum DIFF spacing = 0.6 notch ")

Executing: ovlp_ntub_ndiff_odc1_1 = geomAnd(geomAndNot(NTUB geomInside(NTUB ndiff_n_nmos...

Executing: ovlp_ntub_ndiff_odc1 = drc(NTUB ovlp_ntub_ndiff_odc1_1 (enc < 0.2))

Executing: spac_ndiff_ntub_odc2_1 = drc(net_nwell ndiff_n_nmosh (sep < 1.2))

Executing: spac_ndiff_ntub_odc2 = geomAndNot(spac_ndiff_ntub_odc2_1 HVDEF)
	   errorLayer(spac_ndiff_ntub_odc2 "OD_C_2 Minimum NDIFF to NTUB spacing = 1.2")

Executing: spac_ndiff_ntubhot_odc31 = drc(nwell_hot ndiff_n_nmosh (sep < 0.1))

Executing: spac_ndiff_ntubhot_odc32 = drc(routingnwell_nocheck ndiff_n_nmosh (sep < 2.6))

Executing: spac_ndiff_ntubhot_odc33 = geomCat(spac_ndiff_ntubhot_odc31 spac_ndiff_ntubho...

Executing: spac_odc3_1 = drc(nwell_hot ndiff_n_nmosh (sep < 2.6))

Executing: spac_odc_check = geomAndNot(spac_odc3_1 geomOr(nwell_hot geomOr(ndiff_n_nmosh...

Executing: odc3_1 = geomButting(spac_odc_check ndiff_n_nmosh)

Executing: odc3_2 = geomButting(spac_odc_check nwell_hot)

Executing: odc3_3 = geomButtOrOver(odc3_1 odc3_2)

Executing: odc3_all = geomCat(spac_ndiff_ntubhot_odc33 odc3_3)
	   errorLayer(odc3_all "OD_C_3 Minimum NDIFF to HOT_NTUB spacing (no PTAP in between) = 2.6")

Executing: ovlp_ntub_pdiff_odc4_1 = geomAnd(NTUB pdiff_1)

Executing: ovlp_ntub_pdiff_odc4 = drc(NTUB ovlp_ntub_pdiff_odc4_1 (enc < 1.2))

Executing: spac_pdiff_ntub_odc5 = drc(pdiff_1 NTUB (sep < 0.2))

Executing: ovlp_buttpdiff_ngate_odc6a = drc(geomGetEdge(net_subtap butting ndiff_1) ngat...

Executing: ovlp_buttndiff_pgate_odc6b_1 = drc(geomGetEdge(net_welltap butting pdiff_1) p...

Executing: ovlp_buttndiff_pgate_odc6b = geomAndNot(ovlp_buttndiff_pgate_odc6b_1 pmosd30m...
	   errorLayer(ovlp_buttndiff_pgate_odc6b "OD_C_6b Minimum NDIFF to PGATE spacing = 0.45")

Executing: pdiff_nobutt_edge = geomGetEdge(pdiff_n_zener outside ndiff_n_zener)

Executing: ndiff_nobutt_edge = geomGetEdge(ndiff_n_zener outside pdiff_n_zener)

Executing: spac_pdiff_ndiff_ods2b_1 = geomAnd(pdiff_n_zener ndiff_n_zener)

Executing: spac_pdiff_ndiff_ods2b_2 = drc(pdiff_nobutt_edge ndiff_nobutt_edge ((0 < sep)...

Executing: spac_pdiff_ndiff_ods2b = geomCat(spac_pdiff_ndiff_ods2b_1 spac_pdiff_ndiff_od...
	   errorLayer(spac_pdiff_ndiff_ods2b "OD_S_2B Minimum NDIFF to non-butting PDIFF spacing = 0.6")

Executing: info_diff_noimpl = geomAndNot(geomAndNot(diff_n_zener implant) SBD5_device)
	   errorLayer(info_diff_noimpl "INFO: DIFF missing nplus/pplus")

Executing: width_midox_w1xm = drc(MIDOX (width < 0.6))

Executing: ovlp_midox_diff_od2e1_1 = geomAndNot(geomButtOrOver(MIDOX DIFF) geomEnclose(M...

Executing: ovlp_midox_diff_od2e1_2 = geomAnd(MIDOX DIFF)

Executing: ovlp_midox_diff_od2e1_3 = drc(MIDOX ovlp_midox_diff_od2e1_2 (enc < 0.6))

Executing: ovlp_midox_diff_od2e1 = geomCat(ovlp_midox_diff_od2e1_1 ovlp_midox_diff_od2e1_3)
	   errorLayer(ovlp_midox_diff_od2e1 "OD2_E_1 Minimum MIDOX enclosure of DIFF = 0.6")

Executing: spac_midox_od2s1 = drc(MIDOX (sepNotch < 0.6))

Executing: spac_midox_diff_od2c1 = drc(MIDOX DIFF (sep < 0.6))

Executing: ill_midox_nogate_bad1xm = geomAndNot(MIDOX geomEnclose(MIDOX gate))
	   errorLayer(ill_midox_nogate_bad1xm "BAD1XM MIDOX outside GATE is not allowed")

Executing: ngate_no_waffle_w = geomAndNot(ngate nmosmw_device_all)

Executing: pgate_no_waffle_w = geomAndNot(pgate pmosmw_device_all)

Executing: ngatem_w = geomGetEdge(geomAndNot(geomAnd(ngate_no_waffle_w MIDOX) LVTDEF) co...

Executing: pgatem_w = geomGetEdge(geomAndNot(geomAnd(pgate_no_waffle_w MIDOX) LVTDEF) co...

Executing: length_pgate_pow1a = drc(pgate_w (width < 0.35))

Executing: length_pgate_pow1b = drc(pgatem_w (width < 0.5))

Executing: length_ngate_pow2a = drc(ngate_w (width < 0.35))

Executing: length_ngate_pow2b = drc(ngatem_w (width < 0.5))

Executing: poly1_field = geomAndNot(POLY1 gate)

Executing: width_poly_pow3 = drc(poly1_field (width < 0.35))

Executing: spac_poly1_pos1 = drc(POLY1 (sep < 0.45))

Executing: spac_poly1_notch_pos1 = drc(poly1check (notch < 0.45) opposite)
	   errorLayer(spac_poly1_notch_pos1 "PO_S_1 Minimum POLY1 spacing = 0.45 notch")

Executing: spac_diff_poly_poc1 = drc(POLY1 DIFF (sep < 0.2))

Executing: diff_no_coin_poly = geomGetEdge(DIFF outside gate)

Executing: ovlp_diff_gate_poc2_1 = drc(diff_no_coin_poly ngate_w (enc < 0.5))

Executing: ovlp_diff_gate_poc2_2 = drc(diff_no_coin_poly pgate_w (enc < 0.5))

Executing: ovlp_diff_gate_poc2_3 = geomCat(ovlp_diff_gate_poc2_1 ovlp_diff_gate_poc2_2)
	   errorLayer(ovlp_diff_gate_poc2_3 "PO_C_2 Minimum DIFF extension of GATE = 0.5")

Executing: ovlp_poly1_gate_poo1 = drc(POLY1 DIFF (enc < 0.4))

Executing: width_pocap_po2w1 = drc(cpoly (width < 0.8))

Executing: spac_pocap_po2s1 = drc(cpoly (sepNotch < 0.65))

Executing: ovlp_poly1_poly2_po2e1 = drc(POLY1 cpoly (enc < 1))

Executing: ovlp_poly2_cont_po2e2 = drc(cpoly CONT (enc < 0.6))

Executing: spac_poly2_p1con_po2c1 = drc(net_poly1con cpoly (sep < 1.2))

Executing: width_poly2_po2w2 = drc(POLY2 (width < 0.65))

Executing: spac_poly2_po2s2 = drc(POLY2 (sep < 0.5))

Executing: spac_poly2_notch_po2s2 = drc(poly2check (notch < 0.5) opposite)
	   errorLayer(spac_poly2_notch_po2s2 "PO2_S_2 Minimum POLY2 spacing = 0.5 notch")

Executing: spac_poly2p_notch_po2s2 = drc(poly2pcheck (notch < 0.5) opposite)
	   errorLayer(spac_poly2p_notch_po2s2 "PO2_S_2 Minimum POLY2 spacing = 0.5 notch")

Executing: spac_poly2ph_notch_po2s2 = drc(poly2phcheck (notch < 0.5) opposite)
	   errorLayer(spac_poly2ph_notch_po2s2 "PO2_S_2 Minimum POLY2 spacing = 0.5 notch")

Executing: width_rpolyh_po2w3 = drc(presh (width < 0.8))

Executing: spac_rpolyh_po2s3 = drc(presh (sep < 0.75))

Executing: spac_rpolyh_notch_po2s3 = drc(poly2hcheck (notch < 0.75) opposite)
	   errorLayer(spac_rpolyh_notch_po2s3 "PO2_S_3 Minimum RPOLYH spacing = 0.75 notch")

Executing: spac_diff_poly2_po2c2 = drc(DIFF POLY2 (sep < 0.2))

Executing: spac_poly1_poly2_po2c3 = drc(POLY1 POLY2 (sep < 0.65))

Executing: ovlp_poly2_cont_po2e3_1 = geomStraddle(CONT POLY2)

Executing: ovlp_poly2_cont_po2e3_2 = drc(POLY2 CONT (enc < 0.25))

Executing: ovlp_poly2_cont_po2e3_3 = geomCat(ovlp_poly2_cont_po2e3_1 ovlp_poly2_cont_po2...
	   errorLayer(ovlp_poly2_cont_po2e3_3 "PO2_E_3 Minimum POLY2 enclosure of POLY2CON = 0.25")

Executing: ill_poly2_diff_po2r1 = geomAnd(POLY2 DIFF)
	   errorLayer(ill_poly2_diff_po2r1 "PO2_R_1 POLY2 on DIFF is not allowed")

Executing: width_pplus_ppw1 = drc(PPLUS (width < 0.6))

Executing: spac_pplus_pps1 = drc(PPLUS (sepNotch < 0.6))

Executing: spac_pplus_diff_ppc1 = drc(PPLUS DIFF (sep < 0.35))

Executing: spac_pplus_ngate_ppc2 = drc(PPLUS ngate (sep < 0.45))

Executing: gate_w = geomGetEdge(gate inside DIFF)

Executing: ovlp_pplus_pgate_ppc3 = drc(geomAndNot(PPLUS pmosd30m_hvdef_filter) gate_w (e...

Executing: ovlp_pplus_diff_ppo1 = drc(PPLUS DIFF (ovlp < 0.45))

Executing: ovlp_pplus_diff_ppe1 = drc(PPLUS DIFF (enc < 0.25))

Executing: spac_impl_poly_ppc5_npc5_1 = geomAnd(POLY1 NPLUS)

Executing: spac_impl_poly_ppc5_npc5_2 = geomAnd(POLY1 PPLUS)

Executing: spac_impl_poly_ppc5_npc5_3 = geomAnd(spac_impl_poly_ppc5_npc5_1 spac_impl_pol...

Executing: spac_impl_poly_ppc5_npc5_4 = drc(spac_impl_poly_ppc5_npc5_1 spac_impl_poly_pp...

Executing: spac_impl_poly_ppc5_npc5 = geomCat(spac_impl_poly_ppc5_npc5_3 spac_impl_poly_...
	   errorLayer(spac_impl_poly_ppc5_npc5 "PP_C_5 NP_C_5 NPC5/PPC5  Minimum PPLUS to NPLUS spacing on POLY1 = 0.25")

Executing: spac_pplus_nplus_diff_ppc6 = geomAnd(net_subtap geomAndNot(net_ndiff net_nwell))
	   errorLayer(spac_pplus_nplus_diff_ppc6 "PP_C_6 Minimum PPLUS to NPLUS spacing on DIFF with same potential = 0")

Executing: width_nplus_npw1 = drc(NPLUS (width < 0.6))

Executing: spac_nplus_nps1 = drc(NPLUS (sepNotch < 0.6))

Executing: spac_nplus_diff_npc1 = drc(NPLUS DIFF (sep < 0.35))

Executing: spac_nplus_pgate_npc2_1 = drc(NPLUS pgate (sep < 0.45))

Executing: spac_nplus_pgate_npc2 = geomAndNot(spac_nplus_pgate_npc2_1 pmosd30m_hvdef_fil...
	   errorLayer(spac_nplus_pgate_npc2 "NP_C_2 Minimum NPLUS to PGATE spacing = 0.45")

Executing: ovlp_nplus_ngate_npc3 = drc(NPLUS gate_w (enc < 0.45) opposite)

Executing: ovlp_nplus_diff_npo1 = drc(NPLUS DIFF (ovlp < 0.45))

Executing: ovlp_nplus_diff_ppe1 = drc(NPLUS DIFF (enc < 0.25))

Executing: spac_pplus_nplus_diff_npc6 = geomAnd(net_welltap geomAnd(pdiff_n_zener net_nw...
	   errorLayer(spac_pplus_nplus_diff_npc6 "NP_C_6 Minimum NPLUS to PPLUS spacing on DIFF with same potential = 0")

Executing: sbdcon_drc = geomAnd(geomAndNot(diffcon implant) SBD5_device)

Executing: sbd_anode_diff_drc = geomEnclose(geomAndNot(DIFF implant) sbdcon_drc)

Executing: width_cont_cow1_x = geomContactCheck(CONT (width == 0.4) (length == 0.4) ignore)

Executing: width_cont_cow1 = geomAndNot(width_cont_cow1_x sbd_anode_diff_drc)
	   errorLayer(width_cont_cow1 "CO_W_1 Fixed CONT width = 0.4")

Executing: spac_cont_cos1 = drc(CONT (sepNotch < 0.4))

Executing: spac_diffcon_gate_coc1 = drc(diffcon gate (sep < 0.3))

Executing: spac_polycon_gate_coc2 = drc(net_poly1con DIFF (sep < 0.4))

Executing: ovlp_diff_cont_coe1 = drc(DIFF diffcon (enc < 0.15))

Executing: ovlp_poly_cont_coe2 = drc(POLY1 net_poly1con (enc < 0.2))

Executing: ovlp_pplus_diffcon_coe3_1 = drc(PPLUS diffcon (enc < 0.25))

Executing: ovlp_pplus_diffcon_coe3 = geomAndNot(ovlp_pplus_diffcon_coe3_1 pmosd30m_hvdef...
	   errorLayer(ovlp_pplus_diffcon_coe3 "CO_E_3 Minimum PPLUS enclosure of PDIFFCON = 0.25")

Executing: ovlp_nplus_diffcon_coe4 = drc(NPLUS diffcon (enc < 0.25))

Executing: ill_polycont_diff_cor1 = geomAnd(net_poly1con DIFF)
	   errorLayer(ill_polycont_diff_cor1 "CO_R_1 POLY1CON on DIFF is not allowed")

Executing: ill_buttcon_cor2 = geomAnd(geomStraddle(diffcon PPLUS) geomStraddle(diffcon N...
	   errorLayer(ill_buttcon_cor2 "CO_R_2 Butted CONT is not allowed")

Executing: ill_cont_isolated_r01ct = geomAndNot(CONT diff_or_poly)
	   errorLayer(ill_cont_isolated_r01ct "R0_1_CT CONT without DIFF or POLY1 or POLY2 is not allowed")

Executing: width_met1_m1w1 = drc(met1_withslots (width < 0.5))

Executing: spac_met1_m1s1 = drc(met1_withslots (sepNotch < 0.45))

Executing: met1wide = geomWidth(met1_withslots (keep > 10))

Executing: geomSizeAnd(met1wide met1_withslots 0.2 1.0)

Executing: geomSizeAnd(met1wide met1_withslots 0.2 1.0)

Executing: met1wideext_edges = geomGetEdge(met1wideext_1)

Executing: met1_withslots_edges = geomGetEdge(met1_withslots)

Executing: met1small = geomAndNot(met1_withslots_edges met1wideext_edges)

Executing: met1wideext = geomAnd(met1_withslots_edges met1wideext_edges)

Executing: spac_met1wide_m1s2_1 = drc(met1wideext (sep < 0.8) parallel)

Executing: spac_met1wide_m1s2_2 = drc(met1wideext met1small ((0 < sep) < 0.8))

Executing: ovlp_met1_cont_m1e1_1 = geomAndNot(CONT met1_withslots)

Executing: ovlp_met1_cont_m1e1_2 = drc(met1_withslots CONT (enc < 0.15))

Executing: ovlp_met1_cont_m1e1_3 = geomCat(ovlp_met1_cont_m1e1_1 ovlp_met1_cont_m1e1_2)
	   errorLayer(ovlp_met1_cont_m1e1_3 "M1_E_1 Minimum MET1 enclosure of CONT = 0.15")

Executing: width_via1_via1w1 = geomContactCheck(VIA1 (width == 0.5) (length == 0.5) ignore)
	   errorLayer(width_via1_via1w1 "VIA1_W_1 Fixed VIA1 width = 0.5")

Executing: spac_via1_via1s1 = drc(VIA1 (sepNotch < 0.45))

Executing: ovlp_met1_via1_via1e1_1 = geomAndNot(VIA1 met1_withslots)

Executing: ovlp_met1_via1_via1e1_2 = drc(met1_withslots VIA1 (enc < 0.2))

Executing: ovlp_met1_via1_via1e1_3 = geomCat(ovlp_met1_via1_via1e1_1 ovlp_met1_via1_via1...
	   errorLayer(ovlp_met1_via1_via1e1_3 "VIA1_E_1 Minimum MET1 enclosure of VIA1 = 0.2")

Executing: ill_via1_isolated_r01v1 = geomAndNot(VIA1 MET1)
	   errorLayer(ill_via1_isolated_r01v1 "R01V1 VIA1 without MET1 is not allowed")

Executing: width_met2_m2w1 = drc(met2_withslots (width < 0.6))

Executing: spac_met2_m2s1 = drc(met2_withslots (sepNotch < 0.5))

Executing: met2wide = geomWidth(met2_withslots (keep > 10))

Executing: geomSizeAnd(met2wide met2_withslots 0.2 1.0)

Executing: geomSizeAnd(met2wide met2_withslots 0.2 1.0)

Executing: met2wideext_edges = geomGetEdge(met2wideext_1)

Executing: met2_withslots_edges = geomGetEdge(met2_withslots)

Executing: met2small = geomAndNot(met2_withslots_edges met2wideext_edges)

Executing: met2wideext = geomAnd(met2_withslots_edges met2wideext_edges)

Executing: spac_met2wide_m2s2_1 = drc(met2wideext (sep < 0.8) parallel)

Executing: spac_met2wide_m2s2_2 = drc(met2wideext met2small ((0 < sep) < 0.8))

Executing: ovlp_met2_via1_m2e1_1 = geomAndNot(VIA1 met2_withslots)

Executing: ovlp_met2_via1_m2e1_2 = drc(met2_withslots VIA1 (enc < 0.15))

Executing: ovlp_met2_via1_m2e1_3 = geomCat(ovlp_met2_via1_m2e1_1 ovlp_met2_via1_m2e1_2)
	   errorLayer(ovlp_met2_via1_m2e1_3 "M2_E_1 Minimum MET2 enclosure of VIA1 = 0.15")

Executing: width_via2_via2w1 = geomContactCheck(VIA2 (width == 0.5) (length == 0.5) ignore)
	   errorLayer(width_via2_via2w1 "VIA2_W_1 Fixed VIA2 width = 0.5")

Executing: spac_via2_via2s1 = drc(VIA2 (sepNotch < 0.45))

Executing: ovlp_met2_via2_via2e1_1 = geomAndNot(VIA2 met2_withslots)

Executing: ovlp_met2_via2_via2e1_2 = drc(met2_withslots VIA2 (enc < 0.2))

Executing: ovlp_met2_via2_via2e1_3 = geomCat(ovlp_met2_via2_via2e1_1 ovlp_met2_via2_via2...
	   errorLayer(ovlp_met2_via2_via2e1_3 "VIA2_E_1 Minimum MET2 enclosure of VIA2 = 0.2")

Executing: ill_via2_isolated_r01v2 = geomAndNot(VIA2 MET2)
	   errorLayer(ill_via2_isolated_r01v2 "R01V2 VIA2 without MET2 is not allowed")

Executing: width_met3_m3w1 = drc(met3_withslots (width < 0.6))

Executing: spac_met3_m3s1 = drc(met3_withslots (sepNotch < 0.5))

Executing: ovlp_met3_via2_m3e1_1 = geomAndNot(VIA2 met3_withslots)

Executing: ovlp_met3_via2_m3e1_2 = drc(met3_withslots VIA2 (enc < 0.15))

Executing: ovlp_met3_via2_m3e1_3 = geomCat(ovlp_met3_via2_m3e1_1 ovlp_met3_via2_m3e1_2)
	   errorLayer(ovlp_met3_via2_m3e1_3 "M3_E_1 Minimum MET3 enclosure of VIA2 = 0.15")

Executing: met3wide = geomWidth(met3_withslots (keep > 10))

Executing: geomSizeAnd(met3wide met3_withslots 0.2 1.0)

Executing: geomSizeAnd(met3wide met3_withslots 0.2 1.0)

Executing: met3wideext_edges = geomGetEdge(met3wideext_1)

Executing: met3_withslots_edges = geomGetEdge(met3_withslots)

Executing: met3small = geomAndNot(met3_withslots_edges met3wideext_edges)

Executing: met3wideext = geomAnd(met3_withslots_edges met3wideext_edges)

Executing: spac_met3wide_m3s2_1 = drc(met3wideext (sep < 0.8) parallel)

Executing: spac_met3wide_m3s2_2 = drc(met3wideext met3small ((0 < sep) < 0.8))

Executing: width_via3_via3w1 = geomContactCheck(VIA3 (width == 0.5) (length == 0.5) ignore)
	   errorLayer(width_via3_via3w1 "VIA3_W_1 Fixed VIA3 width = 0.5")

Executing: spac_via3_via3s1 = drc(VIA3 (sepNotch < 0.45))

Executing: ovlp_met3_via3_via3e1_1 = geomAndNot(VIA3 met3_withslots)

Executing: ovlp_met3_via3_via3e1_2 = drc(met3_withslots VIA3 (enc < 0.2))

Executing: ovlp_met3_via3_via3e1_3 = geomCat(ovlp_met3_via3_via3e1_1 ovlp_met3_via3_via3...
	   errorLayer(ovlp_met3_via3_via3e1_3 "VIA3_E_1 Minimum MET3 enclosure of VIA3 = 0.2")

Executing: ill_via3_isolated_r01v3 = geomAndNot(VIA3 MET3)
	   errorLayer(ill_via3_isolated_r01v3 "R01V3 VIA3 without MET3 is not allowed")

Executing: width_met4_m4w1 = drc(met4_withslots (width < 0.6))

Executing: spac_met4_m4s1 = drc(met4_withslots (sepNotch < 0.6))

Executing: ovlp_met4_via3_m4e1_1 = geomAndNot(VIA3 met4_withslots)

Executing: ovlp_met4_via3_m4e1_2 = drc(met4_withslots VIA3 (enc < 0.15))

Executing: ovlp_met4_via3_m4e1_3 = geomCat(ovlp_met4_via3_m4e1_1 ovlp_met4_via3_m4e1_2)
	   errorLayer(ovlp_met4_via3_m4e1_3 "M4_E_1 Minimum MET4 enclosure of VIA3 = 0.15")

Executing: met4wide = geomWidth(met4_withslots (keep > 10))

Executing: geomSizeAnd(met4wide met4_withslots 0.2 1.0)

Executing: geomSizeAnd(met4wide met4_withslots 0.2 1.0)

Executing: met4wideext_edges = geomGetEdge(met4wideext_1)

Executing: met4_withslots_edges = geomGetEdge(met4_withslots)

Executing: met4small = geomAndNot(met4_withslots_edges met4wideext_edges)

Executing: met4wideext = geomAnd(met4_withslots_edges met4wideext_edges)

Executing: spac_met4wide_m4s2_1 = drc(met4wideext (sep < 0.8) parallel)

Executing: spac_met4wide_m4s2_2 = drc(met4wideext met4small ((0 < sep) < 0.8))

Executing: m1pad = geomAnd(PAD MET1)

Executing: m2pad = geomAnd(PAD MET2)

Executing: m3pad = geomAnd(PAD MET3)

Executing: nomet1_under_pad_cbr1 = geomAndNot(geomButtOrOver(net_bondpad pad_st_all) m1pad)
	   errorLayer(nomet1_under_pad_cbr1 "CBR1 CB_R_1 missing met1")

Executing: nomet2_under_pad_cbr1 = geomAndNot(geomButtOrOver(net_bondpad pad_st_all) m2pad)
	   errorLayer(nomet2_under_pad_cbr1 "CBR1 CB_R_1 missing met2")

Executing: nomet3_under_pad_cbr1 = geomAndNot(geomButtOrOver(net_bondpad pad_st_all) m3pad)
	   errorLayer(nomet3_under_pad_cbr1 "CBR1 CB_R_1 missing met3")

Executing: m4pad = geomAnd(PAD MET4)

Executing: nomet4_under_pad_cbr1 = geomAndNot(geomButtOrOver(net_bondpad pad_st_all) m4pad)
	   errorLayer(nomet4_under_pad_cbr1 "CBR1 CB_R_1 missing met4")

Executing: miss_topmet4_on_pad = geomAvoiding(te_pro_pad MET4)
	   errorLayer(miss_topmet4_on_pad "ERC Warning: Missing top met4 on Test or Probe pad")

Executing: width_tepropad_w1pa = drc(te_pro_pad (width < 15))

Executing: width_bondpad_cbw1 = drc(net_bondpad (width < 70))

Executing: width_bondpad_cbw1_rec = drc(net_bondpad (width < 85.0))

Executing: spac_pad_cbs1 = drc(PAD (sepNotch < 15))

Executing: m1pad_st = geomButtOrOver(m1pad pad_st_all)

Executing: ovlp_met1_pad_cbe1 = drc(MET1 m1pad_st (enc < 5))

Executing: m2pad_st = geomButtOrOver(m2pad pad_st_all)

Executing: ovlp_met2_pad_cbe2 = drc(MET2 m2pad_st (enc < 5))

Executing: ovlp_met3_pad_cbe3 = drc(MET3 m3pad (enc < 5))

Executing: ovlp_met4_pad_cbe4 = drc(MET4 m4pad (enc < 5))

Executing: pad_allovs = geomSize(pad_st_all 5.0)

Executing: padvia = geomOverlap(VIA1 pad_allovs)

Executing: padvia2 = geomOverlap(VIA2 pad_allovs)

Executing: padvia3 = geomOverlap(VIA3 pad_allovs)

Executing: m1padpolyg = geomAnd(geomOverlap(MET1 PAD) pad_allovs)

Executing: m2padpolyg = geomAnd(geomOverlap(MET2 PAD) pad_allovs)

Executing: m3padpolyg = geomAnd(geomOverlap(MET3 PAD) pad_allovs)

Executing: ovlp_padvia_met1_cbe5 = drc(MET1 padvia (enc < 3))

Executing: pad_ring_m1_1 = geomGetEdge(m1padpolyg)

Executing: pad_ring_m1_2 = geomSize(pad_ring_m1_1 -6.0 unmergedOut edges)

Executing: pad_ring_m1 = drc(pad_ring_m1_2 (width < 6.2) opposite parallel)

Executing: pad_ring_m2_1 = geomGetEdge(m2padpolyg)

Executing: pad_ring_m2_2 = geomSize(pad_ring_m2_1 -6.0 unmergedOut edges)

Executing: pad_ring_m2 = drc(pad_ring_m2_2 (width < 6.2) opposite parallel)

Executing: pad_ring_m3_1 = geomGetEdge(m3padpolyg)

Executing: pad_ring_m3_2 = geomSize(pad_ring_m3_1 -6.0 unmergedOut edges)

Executing: pad_ring_m3 = drc(pad_ring_m3_2 (width < 6.2) opposite parallel)

Executing: padvia_merge = geomAnd(geomSize(geomSize(padvia 2.0) -2.0) net_bondpad)

Executing: padvia2_merge = geomAnd(geomSize(geomSize(padvia2 2.0) -2.0) net_bondpad)

Executing: ill_padvia_diamond_cbe5 = geomStraddle(padvia_merge pad_ring_m1 (ignore == 4))
	   errorLayer(ill_padvia_diamond_cbe5 "CB_E_5 bad diamond shape of pad via array must have 4 corners")

Executing: padvia_diamond_ok = drc(padvia_merge net_bondpad ((0.47 <= coverage) <= 0.53))

Executing: ill_padvia_diamond_cbe5x = geomAndNot(padvia_merge padvia_diamond_ok)
	   errorLayer(ill_padvia_diamond_cbe5x "CB_E_5 bad diamond shape of pad via array")

Executing: ill_padvia2_diamond_cbe7 = geomStraddle(padvia2_merge pad_ring_m2 (ignore == 4))
	   errorLayer(ill_padvia2_diamond_cbe7 "CB_E_7 bad diamond shape of padvia2 array must have 4 corners")

Executing: padvia2_diamond_ok = drc(padvia2_merge net_bondpad ((0.47 <= coverage) <= 0.53))

Executing: ill_padvia2_diamond_cbe7x = geomAndNot(padvia2_merge padvia2_diamond_ok)
	   errorLayer(ill_padvia2_diamond_cbe7x "CB_E_7 bad diamond shape of padvia2 array")

Executing: padvia3_merge = geomAnd(geomSize(geomSize(padvia3 2.0) -2.0) net_bondpad)

Executing: ill_padvia3_diamond_cbe9 = geomStraddle(padvia3_merge pad_ring_m3 (ignore == 4))
	   errorLayer(ill_padvia3_diamond_cbe9 "CB_E_9 bad diamond shape of padvia3 array must have 4 corners")

Executing: padvia3_diamond_ok = drc(padvia3_merge net_bondpad ((0.47 <= coverage) <= 0.53))

Executing: ill_padvia3_diamond_cbe9x = geomAndNot(padvia3_merge padvia3_diamond_ok)
	   errorLayer(ill_padvia3_diamond_cbe9x "CB_E_9 bad diamond shape of padvia3 array")

Executing: ovlp_padvia_met2_cbe7 = drc(MET2 padvia (enc < 3))

Executing: ovlp_padvia2_met2_cbe7 = drc(MET2 padvia2 (enc < 3))

Executing: ovlp_padvia2_met3_cbe9 = drc(MET3 padvia2 (enc < 3))

Executing: ovlp_padvia3_met3_cbe9 = drc(MET3 padvia3 (enc < 3))

Executing: ovlpmax_padvia3_met4_cbe11 = drc(MET4 padvia3 (enc < 3))

Executing: spac_padvia_cbs2 = drc(padvia (sep < 0.8))

Executing: spac_padvia2_cbs3 = drc(padvia2 (sep < 0.8))

Executing: spac_padvia3_cbs4 = drc(padvia3 (sep < 0.8))

Executing: spac_padviavia2_cbc1 = drc(padvia padvia2 (sep < 0.3))

Executing: spac_padvia2via3_cbc2 = drc(padvia3 padvia2 (sep < 0.3))
Skip! Boundary layer has no shape

Executing: ill_padvia_pad_ratio_cbr2 = geomGetCoverage(drc(padvia pad_st_all (coverage <...
	   errorLayer(ill_padvia_pad_ratio_cbr2 "CB_R_2 Minimum ratio of PADVIA1 area to PAD_ST area [%] = 5")
Skip! Boundary layer has no shape

Executing: ill_padvia2_pad_ratio_cbr3 = geomGetCoverage(drc(padvia2 pad_st_all (coverage...
	   errorLayer(ill_padvia2_pad_ratio_cbr3 "CB_R_3 Minimum ratio of PADVIA2 area to PAD_ST area [%] = 5")
Skip! Boundary layer has no shape

Executing: ill_padvia3_pad_ratio_cbr4 = geomGetCoverage(drc(padvia3 pad_st_all (coverage...
	   errorLayer(ill_padvia3_pad_ratio_cbr4 "CB_R_4 Minimum ratio of PADVIA3 area to PAD_ST area [%] = 5")

Executing: ill_padvia_padvia2 = geomAnd(padvia padvia2)
	   errorLayer(ill_padvia_padvia2 "CB_C_1 Illegal pad via stack via1/via2")

Executing: ill_padvia2_padvia3 = geomAnd(padvia2 padvia3)
	   errorLayer(ill_padvia2_padvia3 "CB_C_2 Illegal pad via stack via2/via3")

Executing: geomStamp(net_bondpad_st net_bondpad)

Executing: spac_diff_bondpad_s1dfpa = drc(DIFF net_bondpad_st (sep < 9))

Executing: spac_poly1_bondpad_s1p1pa = drc(net_bondpad_st p1_not_bondpad (sep < 9))

Executing: spac_poly2_bondpad_s1p2pa = drc(net_bondpad_st POLY2 (sep < 9))

Executing: spac_met1_bondpad_s1m1pa = drc(net_bondpad_st net_met1 (sep < 9) diffNet)

Executing: spac_met2_bondpad_s1m2pa = drc(net_bondpad_st net_met2 (sep < 9) diffNet)

Executing: spac_met3_bondpad_s1m3pa = drc(net_bondpad_st net_met3 (sep < 9) diffNet)

Executing: spac_met4_bondpad_s1m4pa = drc(net_bondpad_st net_met4 (sep < 9) diffNet)

Executing: ill_pad_missing_met4_r01pa = geomAndNot(PAD MET4)
	   errorLayer(ill_pad_missing_met4_r01pa "R01PA PAD without MET4 is not allowed")

Executing: pad_poa_all_met1 = geomInside(pad_poa_all MET1)
	   errorLayer(pad_poa_all_met1 "TOPOLOGY PROBLEM : POA pad met 4 stack found, but totally enclosed by MET1")

Executing: pad_3oa_2 = geomOr(pad_3oa)
	   errorLayer(pad_3oa_2 "Illegal POA pad met3 stack for 4 metal process")

Executing: pad_poa_all_met2 = geomInside(pad_poa_all MET2)
	   errorLayer(pad_poa_all_met2 "TOPOLOGY PROBLEM : POA pad met 4 stack found, but totally enclosed by MET2")

Executing: width_pad_4oa_cbw1 = drc(pad_4oa (width < 70.0))

Executing: width_pad_4oa_cbw1_rec1 = drc(pad_4oa (width < 85.0))

Executing: width_pad_4oa_cbw1_rec2 = drc(pad_4oa (width < 60.0))

Executing: spac_pad_4oa_via2_and = geomAnd(pad_4oa VIA2)
	   errorLayer(spac_pad_4oa_via2_and "PAR006 : PAD_4OA overlapping VIA2 is not allowed")

Executing: spac_pad_4oa_via2_out = geomAndNot(VIA2 pad_4oa)

Executing: spac_pad_4oa_via2 = drc(spac_pad_4oa_via2_out pad_4oa (sep < 0.5))

Executing: spac_pad_4oa_via3_out = geomAndNot(VIA3 pad_4oa)

Executing: spac_pad_4oa_via3 = drc(spac_pad_4oa_via3_out pad_4oa (sep < 0.25))

Executing: encl_pad_4oa_via3_and = geomAnd(pad_4oa VIA3)

Executing: encl_pad_4oa_via3 = drc(pad_4oa encl_pad_4oa_via3_and (enc < 0.2))

Executing: pad_4oa_45_edge = geomGetAngledEdge(pad_4oa (keep == 45))

Executing: pad_4oa_45_edge_size = geomSize(pad_4oa_45_edge -1.0 unmergedOut edges)

Executing: par007_pad_4oa_via3 = geomAvoiding(geomOverlap(VIA3 geomSize(pad_4oa -0.7)) p...
	   errorLayer(par007_pad_4oa_via3 "PAR007 : (PAD_4OA sized by -0.7) overlapping VIA3 is not allowed")

Executing: par002_pad_4oa_kepout = geomAnd(pad_4oa KEPOUT)
	   errorLayer(par002_pad_4oa_kepout "PAR002 KEPOUT definition : (PAD_4OA AND KEPOUT) is not allowed")

Executing: kepout_or_sfcdef = geomOr(KEPOUT SFCDEF)

Executing: s2kopa_pad_4oa_kepout_or_sfcdef = drc(pad_4oa geomOr(KEPOUT SFCDEF) (sep < 7))

Executing: net_pad_4oa = geomCat(pad_4oa)

Executing: geomStamp(net_pad_4oa PAD)

Executing: spac_pad_4oa_met3 = drc(net_pad_4oa net_met3 (sep < 7) diffNet)

Executing: spac_pad_4oa_met4 = drc(net_pad_4oa net_met4 (sep < 7) diffNet)

Executing: par010_pad_4oa_cpoly = geomAnd(cpoly pad_4oa)
	   errorLayer(par010_pad_4oa_cpoly "PAR010 : PAD_OA overlapping CPOLY is not allowed")

Executing: pad_4oa_met3 = geomButtOrOver(MET3 pad_4oa)

Executing: pad_4oa_size_ring = geomAndNot(geomSize(pad_4oa 4.55) geomSize(pad_4oa -0.7))

Executing: pad_4oa_met3_ring = geomAnd(pad_4oa_met3 pad_4oa_size_ring)

Executing: pad_4oa_met3_via = geomButtOrOver(VIA3 pad_4oa_met3)

Executing: pad_4oa_par008_1 = geomAnd(pad_4oa_met3_ring geomSize(geomSize(geomSize(pad_4...

Executing: pad_4oa_par008_a = geomAndNot(pad_4oa_met3_ring pad_4oa_par008_1)

Executing: pad_4oa_size_pad_ring = geomAndNot(geomSize(pad_4oa 0.25) geomSize(pad_4oa -0...

Executing: pad_4oa_par008_2 = geomAndNot(geomSize(pad_4oa_par008_a -0.4) pad_4oa_size_pa...

Executing: pad_4oa_par008_3 = geomAndNot(geomSize(pad_4oa_par008_2 0.2) pad_4oa_size_pad...
	   errorLayer(pad_4oa_par008_3 "PAR008 Density : Line-of-sight looking through all VIA3 rows at any angle must be blocked by at least one VIA3,via3 density probably too small for this rule")

Executing: pad_4oa_met3_pad = geomAnd(pad_4oa_met3 pad_4oa)

Executing: pad_4oa_met3_pad_ring = geomAndNot(pad_4oa_met3_pad geomSize(pad_4oa_met3_pad...

Executing: pad_4oa_met3_pad_ring_via = geomAnd(VIA3 pad_4oa_met3_pad_ring)

Executing: pad_4oa_met3_pad_cov_1 = geomAnd(pad_4oa_met3_pad geomSize(geomSize(pad_4oa_m...

Executing: pad_4oa_met3_pad_cov_2 = geomAnd(pad_4oa_met3_pad geomSize(geomButtOrOver(pad...

Executing: pad_4oa_met3_pad_cov = geomOr(pad_4oa_met3_pad_cov_1 pad_4oa_met3_pad_cov_2)

Executing: pad_4oa_met3_par008_ring = geomSize(geomAndNot(pad_4oa_met3_pad_ring pad_4oa_...
	   errorLayer(pad_4oa_met3_par008_ring "PAR008 Density : use 1 row of via3 at min ovlp of PAD poa")

Executing: pad_4oa_size_under = geomSize(pad_4oa -1.0)

Executing: pad_4oa_size_over = geomAndNot(geomSize(pad_4oa 5.9) geomSize(pad_4oa 5.8))

Executing: pad_4oa_size_err = drc(pad_4oa_size_over pad_4oa_size_under (sep < 10.0) (shi...

Executing: poa_trans = geomAnd(diff_cut POLY1)

Executing: poa_trans_lv = geomAndNot(geomAndNot(poa_trans HVDEF) nmosh)

Executing: poa_trans_hv = geomAnd(poa_trans HVDEF)

Executing: poa_trans_lv_diff = geomButtOrOver(DIFF poa_trans_lv)

Executing: poa_trans_lv_gate_pad_1 = geomOverlap(poa_trans_lv pad_poa_all)

Executing: poa_trans_lv_gate_pad_2 = geomButtOrOver(poa_trans_lv geomButtOrOver(poa_tran...

Executing: poa_trans_lv_gate_pad = geomAnd(net_poly1 geomOr(poa_trans_lv_gate_pad_1 poa_...

Executing: poa_trans_lv_conn_diff = geomButtOrOver(poa_trans_lv_diff poa_trans_lv_gate_pad)

Executing: poa_trans_lv_diff_sd = geomAndNot(poa_trans_lv_diff poa_trans_lv_gate_pad)

Executing: poa_trans_lv_ndiff_sd = geomButtOrOver(poa_trans_lv_diff_sd net_ndiff)

Executing: poa_trans_lv_pdiff_sd = geomButtOrOver(poa_trans_lv_diff_sd net_pdiff)

Executing: geomStamp(poa_trans_lv_gate_pad net_poly1)

Executing: geomStamp(poa_trans_lv_ndiff_sd net_ndiff)

Executing: geomStamp(poa_trans_lv_pdiff_sd net_pdiff)

Executing: poa_trans_lv_subtap = geomNodeRelate(poa_trans_lv_gate_pad net_subtap conn)

Executing: poa_trans_lv_welltap = geomNodeRelate(poa_trans_lv_gate_pad net_welltap conn)

Executing: poa_trans_n_lv_short_1 = drc(poa_trans_lv_ndiff_sd (sep < 0.6) parallel sameNet)

Executing: poa_trans_p_lv_short_1 = drc(poa_trans_lv_pdiff_sd (sep < 0.6) parallel sameNet)

Executing: poa_trans_n_lv_short = geomButtOrOver(poa_trans_lv_gate_pad poa_trans_n_lv_sh...

Executing: poa_trans_p_lv_short = geomButtOrOver(poa_trans_lv_gate_pad poa_trans_p_lv_sh...

Executing: poa_trans_lv_filter = geomCat(poa_trans_lv_subtap poa_trans_lv_welltap poa_tr...

Executing: poa_trans_lv_gate_pad = geomAndNot(poa_trans_lv_gate_pad poa_trans_lv_filter)

Executing: poa_trans_lv_gate_l = geomGetEdge(poa_trans_lv_gate_pad coincident poa_trans_...

Executing: poa_trans_lv_gate_l_le050 = geomGetLength(poa_trans_lv_gate_l (keep <= 0.5) c...

Executing: poa_trans_lv_gate_l_le050_size = geomSize(poa_trans_lv_gate_l_le050 0.1 edges)

Executing: poa_trans_lv_gate_l_le050_w = geomGetEdge(geomButtOrOver(poa_trans_lv_gate_pa...

Executing: poa_trans_lv_gate_l_le050_w_exp = geomSize(poa_trans_lv_gate_l_le050_w -0.1 e...

Executing: poa_trans_lv_gate_l_gt050 = geomGetLength(poa_trans_lv_gate_l (keep > 0.5) co...

Executing: poa_trans_lv_gate_l_gt050_size = geomSize(poa_trans_lv_gate_l_gt050 0.1 edges)

Executing: poa_trans_lv_gate_l_gt050_bad = geomButtOrOver(poa_trans_lv_gate_pad poa_tran...
	   errorLayer(poa_trans_lv_gate_l_gt050_bad "PAR009 :  LV_GATE L > 0.5 PAD_OA overlapping GATE is not allowed,  No valid exemption for LV_GATE, L > 0.5")

Executing: pad_oa_trans_good_lv_400 = geomButtOrOver(poa_trans_lv poa_trans_lv_gate_l_le...

Executing: poa_nmos30_hvdef_tot = geomEnclose(geomSize(HVDEF 1.0) geomOr(nmos18t_double ...

Executing: poa_nmos30_devlay_ele_1 = geomOverlap(poa_nmos30_all_x pad_poa_all)

Executing: poa_nmos30_devlay_ele_2 = geomButtOrOver(poa_nmos30_all_x geomButtOrOver(poa_...

Executing: poa_nmos30_devlay_ele = geomOr(poa_nmos30_devlay_ele_1 poa_nmos30_devlay_ele_2)

Executing: poa_nmos30_l_edge_ele = geomCat(nmos30_l_edge_ele)

Executing: poa_nmos30_w_edge_ele = geomCat(nmos30_w_edge_ele)

Executing: poa_nmos30_l_edge_ele_min = geomGetLength(poa_nmos30_l_edge_ele (keep <= 0.5))

Executing: poa_nmos30_l_edge_ele_min_exp = geomSize(poa_nmos30_l_edge_ele_min 0.1 edges)

Executing: poa_nmos30_devlay_ele_min = geomButtOrOver(poa_nmos30_devlay_ele poa_nmos30_l...

Executing: poa_nmos30_l_edge_bad = geomGetLength(poa_nmos30_l_edge_ele (keep > 0.5))

Executing: poa_nmos30_l_edge_bad_exp = geomSize(poa_nmos30_l_edge_bad 0.1 edges)

Executing: poa_nmos30_devlay_ele_bad = geomButtOrOver(poa_nmos30_devlay_ele poa_nmos30_l...
	   errorLayer(poa_nmos30_devlay_ele_bad " PAR009 : NMOS30M/NMOS18T  L > LMIN  PAD_OA overlapping GATE is not allowed,  No valid exemption for HV_GATE, L > 0.5 LMIN")

Executing: poa_nmos30_w_edge_ele_exp = geomSize(poa_nmos30_w_edge_ele -0.1)

Executing: poa_nmos30_w_edge_ele_exp_l_min = geomButtOrOver(poa_nmos30_w_edge_ele_exp po...

Executing: geomStamp(poa_nmos30_w_edge_ele_exp_l_min net_poly1)

Executing: poa_nmos30_w_edge_ele_exp_l_min_conn_tap1 = geomNodeRelate(poa_nmos30_w_edge_...

Executing: poa_nmos30_w_edge_ele_exp_l_min_conn_tap2 = geomNodeRelate(poa_nmos30_w_edge_...

Executing: poa_nmos30_w_edge_ele_exp_l_min_conn_tapx = geomOr(poa_nmos30_w_edge_ele_exp_...

Executing: poa_nmos30_w_edge_ele_exp_l_min_unconn_tap = geomAvoiding(poa_nmos30_w_edge_e...

Executing: pad_oa_trans_good_hv_400 = geomButtOrOver(poa_trans_hv poa_trans_hv_gate_l_mi...

Executing: poa_transh_lv_gate_pad = geomButtOrOver(nmosh pad_poa_all)

Executing: poa_transh_diff = geomOr(geomButtOrOver(DIFF nmosh) nmosh_d_term)

Executing: poa_transh_lv_gate_pad_diff = geomButtOrOver(poa_transh_diff pad_poa_all)

Executing: poa_transh_lv_gate_padx = drc(poa_transh_lv_gate_pad net_ndiff (sep < 6) oppo...

Executing: poa_transh_lv_gate_l = geomGetEdge(poa_transh_lv_gate_pad coincident geomOr(D...

Executing: poa_transh_lv_gate_l_le30 = geomGetLength(poa_transh_lv_gate_l (keep <= 3.0) ...

Executing: poa_transh_lv_gate_l_le30_size = geomSize(poa_transh_lv_gate_l_le30 0.1 edges)

Executing: poa_transh_lv_gate_l_le30_w = geomGetEdge(geomButtOrOver(poa_transh_lv_gate_p...

Executing: poa_transh_lv_gate_l_le30_w_exp = geomSize(poa_transh_lv_gate_l_le30_w -0.1 e...

Executing: poa_transh_lv_gate_l_gt30 = geomGetLength(poa_transh_lv_gate_l (keep > 3.0) c...

Executing: poa_transh_lv_gate_l_gt30_size = geomSize(poa_transh_lv_gate_l_gt30 0.1 edges)

Executing: poa_transh_lv_gate_l_gt30_bad = geomButtOrOver(poa_transh_lv_gate_pad poa_tra...
	   errorLayer(poa_transh_lv_gate_l_gt30_bad "PAR009 : NMOSH  L > LMIN  PAD_OA overlapping NMOSH_GATE is not allowed,  No valid exemption for NMOSH GATE, L > 3.0")

Executing: pad_oa_transh_good_lv_400 = geomButtOrOver(poa_trans_lv poa_transh_lv_gate_l_...

Executing: pad_oa_trans_good_1 = geomAnd(poa_trans geomGetTexted(HVDEF HVDEF_text "ESD*"))

Executing: poa_mos_waffle = geomCat(pmos_waffle nmos_waffle)

Executing: pad_oa_trans_good_4 = geomButtOrOver(poa_trans poa_mos_waffle)

Executing: pad_oa_trans_good_all = geomCat(pad_oa_trans_good_1 pad_oa_trans_good_lv_400 ...

Executing: poa_trans_disabled = geomButtOrOver(poa_trans geomCat(poa_trans_lv_filter poa...

Executing: poa_trans_4oa = geomOverlap(poa_trans pad_4oa)

Executing: poa_trans_4oa_err = geomAndNot(geomAndNot(poa_trans_4oa pad_oa_trans_good_all...
	   errorLayer(poa_trans_4oa_err "PAR009: PAD_4OA overlapping GATE is not allowed,  Exemptions : HV_GATE  with HVDEF text ESD*/ LV_GATE L <= 0.5, total active trans W >= 400/ HV_GATE L = MIN, total active trans W >= 400 / LV_GATE overlapping holed POLY1 ..waffel trans")

Executing: width_hres_w1hr = drc(HRES (width < 0.6))

Executing: spac_hres_s1hr = drc(HRES (sepNotch < 0.6))

Executing: ill_hres_diff_bad1hr = geomAnd(HRES DIFF)
	   errorLayer(ill_hres_diff_bad1hr "BAD1HR HRES is not allowed over DIFF")

Executing: ill_hres_nplus_bad2hr = geomAnd(HRES NPLUS)
	   errorLayer(ill_hres_nplus_bad2hr "BAD2HR HRES is not allowed over NPLUS")

Executing: ill_hres_poly1_bad3hr = geomAnd(HRES POLY1)
	   errorLayer(ill_hres_poly1_bad3hr "BAD3HR HRES is not allowed over POLY1")

Executing: ovlp_hres_poly2_e1hrp2_1 = geomAnd(HRES poly2_cut)

Executing: ovlp_hres_poly2_e1hrp2 = drc(HRES ovlp_hres_poly2_e1hrp2_1 (enc < 3))

Executing: spac_hres_poly1_s1hrp1 = drc(HRES poly1_cut (sep < 0.35))

Executing: spac_hres_poly2_s1hrp2 = drc(HRES poly2_cut (sep < 3))

Executing: spac_hres_diff_s1dfhr = drc(HRES DIFF (sep < 0.35))

Executing: width_lvtdef_w1lv = drc(LVTDEF (width < 0.6))

Executing: spac_lvtdef_s1lvlv = drc(LVTDEF (sepNotch < 0.6))

Executing: ovlp_lvtdef_diff_e1lvaa_1 = geomAndNot(geomButtOrOver(LVTDEF DIFF) geomEnclos...

Executing: ovlp_lvtdef_diff_e1lvaa_2 = drc(LVTDEF DIFF (enc < 0.25))

Executing: ovlp_lvtdef_diff_e1lvaa = geomCat(ovlp_lvtdef_diff_e1lvaa_1 ovlp_lvtdef_diff_...
	   errorLayer(ovlp_lvtdef_diff_e1lvaa "E1LVAA Minimum LVTDEF enclosure of DIFF = 0.25")

Executing: spac_lvtdef_diff_s1aalv = drc(LVTDEF DIFF (sep < 0.35))

Executing: ill_lvtdef_zener_lvr001 = geomAnd(LVTDEF ZENER)
	   errorLayer(ill_lvtdef_zener_lvr001 "LVR001 LVTDEF over ZENER is not allowed")

Executing: ill_lvtdef_nogate_lvr002 = geomAndNot(LVTDEF geomEnclose(LVTDEF gate))
	   errorLayer(ill_lvtdef_nogate_lvr002 "LVR002 LVTDEF outside GATE is not allowed")

Executing: lvta_out_sfcdef = geomAndNot(LVTA SFCDEF)
	   errorLayer(lvta_out_sfcdef "LVR003: LVTA outside SFCDEF will be removed and regenerated")

Executing: lvptub_out_sfcdef = geomAndNot(LVPTUB SFCDEF)
	   errorLayer(lvptub_out_sfcdef "LFR001: LVPTUB outside SFCDEF will be removed and regenerated")

Executing: nmosml_w = geomGetEdge(geomAnd(geomAnd(ngate MIDOX) LVTDEF) coincident POLY1)

Executing: length_nmosml_r1 = drc(nmosml_w (width < 0.5))

Executing: pmosml_w = geomGetEdge(geomAnd(geomAnd(pgate MIDOX) LVTDEF) coincident POLY1)

Executing: length_pmosml_r1 = drc(pmosml_w (width < 0.5))

Executing: width_metc_w1mc = drc(geomEnclose(METCAP VIA2) (width < 4))

Executing: width_metc_dummy_w2mc = drc(geomAvoiding(METCAP VIA2) (width < 0.5))

Executing: width_metc_max_w3mc_rect = geomSize(geomSize(METCAP -0.8) 0.8)

Executing: width_metc_max_w3mc = geomGetLength(width_metc_max_w3mc_rect (keep > 30) fig)
	   errorLayer(width_metc_max_w3mc "W3MC Maximum METCAP size = 30")

Executing: width_metc_bottmax_w1m2 = geomGetLength(metcap_bottom_plate (keep > 35) fig)
	   errorLayer(width_metc_bottmax_w1m2 "W1M2  Maximum MET2 width (capacitor bottom plate ) = 35")

Executing: spac_metc_s1mcmc = drc(METCAP (sep < 0.8))

Executing: spac_metc_bott_s1m2m2 = drc(metcap_bottom_plate MET2 (sep < 0.8))

Executing: spac_metc_via1_s1mcv1_a = geomStraddle(VIA1 METCAP)

Executing: spac_metc_via1_s1mcv1_b = drc(VIA1 METCAP (sep < 0.5))

Executing: spac_metc_via1_s1mcv1 = geomCat(spac_metc_via1_s1mcv1_b spac_metc_via1_s1mcv1_a)
	   errorLayer(spac_metc_via1_s1mcv1 "S1MCV1 Minimum spacing between VIA1 and METCAP = 0.5")

Executing: spac_metc_via2_s1mcv2_a = geomStraddle(VIA2 METCAP)

Executing: spac_metc_via2_s1mcv2_b = drc(VIA2 METCAP (sep < 0.5))

Executing: spac_metc_via2_s1mcv2 = geomCat(spac_metc_via2_s1mcv2_b spac_metc_via2_s1mcv2_a)
	   errorLayer(spac_metc_via2_s1mcv2 "S1MCV2 Minimum spacing between VIA2 and METCAP = 0.5")

Executing: spac_metc_via2_s1v2v2 = drc(geomAndNot(geomAnd(VIA2 metcap_bottom_plate) METC...

Executing: spac_metc_via2_s2v2v2 = drc(geomAnd(VIA2 METCAP) (sep < 3.5))

Executing: ovlp_metc_bott_e1m2mc_a = geomStraddle(METCAP MET2)

Executing: ovlp_metc_bott_e1m2mc_b = drc(metcap_bottom_plate METCAP (enc < 1))

Executing: ovlp_metc_bott_e1m2mc = geomCat(ovlp_metc_bott_e1m2mc_a ovlp_metc_bott_e1m2mc_b)
	   errorLayer(ovlp_metc_bott_e1m2mc "E1M2MC Minimum MET2 enclosure of METCAP = 1")

Executing: cmim_ovs = geomSize(cmim 2.0)

Executing: via2_near_cmim = geomInside(VIA2 cmim_ovs)

Executing: via1_near_cmim = geomInside(VIA1 cmim_ovs)

Executing: ovlp_metc_via1bott_e1m2v1 = drc(metcap_bottom_plate via1_near_cmim (enc < 0.2))

Executing: ovlp_metc_via2bott_e1m2v2 = drc(metcap_bottom_plate via2_near_cmim (enc < 0.2))

Executing: ovlp_metc_via2_e1mcv2 = drc(METCAP ovlp_metc_via2_e1mcv2_1 (enc < 0.5))

Executing: cov_global_metcap = drc(METCAP chipedge_rect (coverage <= 1.0))
Skip! Boundary layer has no shape

Executing: errorLayer(geomGetCoverage(cov_global_metcap ((0 < keep) < 0.03)) "R1MC Minimum METCAP density [%] = 3")
Skip! Boundary layer has no shape

Executing: ill_metc_via2_ratio_r1v2 = geomGetCoverage(drc(geomAnd(VIA2 METCAP) METCAP (c...
	   errorLayer(ill_metc_via2_ratio_r1v2 "R1V2 Minimum VIA2 density inside METCAP [%] = 1")

Executing: ill_metc_met1_bad1m1 = geomAnd(MET1 METCAP)
	   errorLayer(ill_metc_met1_bad1m1 "BAD1M1 MET1 under METCAP region is not allowed")

Executing: dev1 = geomOr(geomOr(geomOr(geomOr(geomOr(pres presz) presh) RDIFFP_device) R...

Executing: dev2 = geomOr(geomOr(geomOr(trans cvar) ZD2SM24_device) ND_device)

Executing: dev3 = geomOr(geomOr(geomOr(geomOr(PD_device NWD_device) VERT10_device) LAT2_...

Executing: dev_all = geomOr(geomOr(dev1 dev2) dev3)

Executing: ill_metc_over_device_rec022 = geomAnd(METCAP dev_all)
	   errorLayer(ill_metc_over_device_rec022 "CMIM_G1: cmim device over active or passive device not allowed")

Executing: ill_pplus_cpoly_rec004 = geomAnd(PPLUS cpoly)
	   errorLayer(ill_pplus_cpoly_rec004 "CPOLY_G1 PPLUS on CPOLY is not allowed")

Executing: ill_nplus_cpoly_rec005 = geomAnd(NPLUS cpoly)
	   errorLayer(ill_nplus_cpoly_rec005 "CPOLY_G2 NPLUS on CPOLY is not allowed")

Executing: ill_pplus_rpoly1_rec012 = geomAnd(PPLUS pres1)
	   errorLayer(ill_pplus_rpoly1_rec012 "RPOLY1_R1 PPLUS on RPOLY1 is not allowed")

Executing: ill_nplus_rpoly1_rec013 = geomAnd(NPLUS pres1)
	   errorLayer(ill_nplus_rpoly1_rec013 "RPOLY1_R2 NPLUS on RPOLY1 is not allowed")

Executing: ill_pplus_rpoly2_rec012 = geomAnd(PPLUS pres)
	   errorLayer(ill_pplus_rpoly2_rec012 "RPOLY2_R1 PPLUS on RPOLY2 is not allowed")

Executing: ill_nplus_rpoly2_rec013 = geomAnd(NPLUS pres)
	   errorLayer(ill_nplus_rpoly2_rec013 "RPOLY2_R2 NPLUS on RPOLY2 is not allowed")

Executing: ill_pplus_rpoly2p_rec012 = geomAnd(PPLUS presp)
	   errorLayer(ill_pplus_rpoly2p_rec012 "RPOLY2P_R1 PPLUS on RPOLY2P is not allowed")

Executing: ill_nplus_rpoly2p_rec013 = geomAnd(NPLUS presp)
	   errorLayer(ill_nplus_rpoly2p_rec013 "RPOLY2P_R2 NPLUS on RPOLY2P is not allowed")

Executing: ill_pplus_rpoly2ph_rec012 = geomAnd(PPLUS presph)
	   errorLayer(ill_pplus_rpoly2ph_rec012 "RPOLY2PH_R1 PPLUS on RPOLY2PH is not allowed")

Executing: ill_nplus_rpoly2ph_rec013 = geomAnd(NPLUS presph)
	   errorLayer(ill_nplus_rpoly2ph_rec013 "RPOLY2PH_R2 NPLUS on RPOLY2PH is not allowed")

Executing: ovlp_pplus_rphcon_e1ipct = drc(PPLUS rpolyhcon (enc < 0.6))

Executing: ill_net_poly2con_e1ipct = geomAndNot(rpolyhcon PPLUS)
	   errorLayer(ill_net_poly2con_e1ipct "E1IPCT Minimum PPLUS enclosure of POLY2CON = 0.6 missing pplus")

Executing: spac_pplus_rpolyh_s1ipp2_1 = drc(geomInside(POLY2 hres) PPLUS (sep < 0.35))

Executing: spac_pplus_rpolyh_s1ipp2_2 = drc(geomGetEdge(presh outside geomEnclose(presht...

Executing: spac_pplus_rpolyh_s1ipp2 = geomCat(spac_pplus_rpolyh_s1ipp2_1 spac_pplus_rpol...
	   errorLayer(spac_pplus_rpolyh_s1ipp2 "S1IPP2 Minimum PPLUS to RPOLYH spacing = 0.35")

Executing: width_rpolyh_g2 = drc(presh_1 (width < 2))

Executing: width_rpolyz_w4p2 = drc(presz (width < 0.8))

Executing: spac_rpolyz_s4p2p2 = drc(presz (sep < 0.75))

Executing: spac_rpolyz_notch_s4p2p2 = drc(poly2zcheck (notch < 0.75) opposite)
	   errorLayer(spac_rpolyz_notch_s4p2p2 "S4P2P2 Minimum RPOLYZ spacing = 0.75 notch")

Executing: ovlp_pplus_rphcon_e2ipct = drc(PPLUS rpolyzcon (enc < 0.6))

Executing: ill_net_poly2con_e2ipct = geomAndNot(rpolyzcon PPLUS)
	   errorLayer(ill_net_poly2con_e2ipct "E2IPCT Minimum PPLUS enclosure of POLY2CON = 0.6 missing pplus")

Executing: spac_pplus_rpolyz_s2ipp2_1 = drc(geomInside(POLY2 zero_tc) PPLUS (sep < 0.35))

Executing: spac_pplus_rpolyz_s2ipp2_2 = drc(geomGetEdge(presz outside geomEnclose(preszt...

Executing: spac_pplus_rpolyz_s2ipp2 = geomCat(spac_pplus_rpolyz_s2ipp2_1 spac_pplus_rpol...
	   errorLayer(spac_pplus_rpolyz_s2ipp2 "S2IPP2 Minimum PPLUS to RPOLYZ spacing = 0.35")

Executing: width_rpolyz_g2 = drc(presz_1 (width < 2))

Executing: met4_floatrect_1 = geomAvoiding(MET4 VIA3)

Executing: met4_floatrect_2 = drc(met4_floatrect_1 (area < 225.0))

Executing: met4_block_bad = geomContactCheck(met4_floatrect_2 (width == 2.0) (length == ...
	   errorLayer(met4_block_bad "AMTW1 AMTL1 fixed with of dummy MTOP thin blocks 2.0 x 5.0 U")

Executing: met4_block_bad_spac = drc(met4_floatrect_2 MET4 (sep < 2))

Executing: met4_gt_10 = geomWidth(MET4 (keep > 10))

Executing: met4_lt_10 = geomAndNot(MET4 met4_gt_10)

Executing: met4_lt_10_ovs = geomAndNot(geomSize(met4_lt_10 5.0) met4_gt_10)

Executing: met4_f1 = geomOr(met4_lt_10_ovs met4_lt_10_ovs)

Executing: met4_f2 = geomSize(geomAnd(geomSizeAndNot(met4_f1 met4_gt_10 1.0 10.0) substr...

Executing: met4_f3 = geomSize(geomAnd(geomSizeAndNot(met4_f2 met4_gt_10 1.0 10.0) substr...

Executing: met4_f4 = geomSize(geomAnd(geomSizeAndNot(met4_f3 met4_gt_10 1.0 10.0) substr...

Executing: met4_f5 = geomSize(geomAnd(geomSizeAndNot(met4_f4 met4_gt_10 1.0 10.0) substr...

Executing: met4_f6 = geomSize(geomAnd(geomSizeAndNot(met4_f5 met4_gt_10 1.0 10.0) substr...

Executing: met4_f7 = geomSize(geomAnd(geomSizeAndNot(met4_f6 met4_gt_10 1.0 10.0) substr...

Executing: met4_f8 = geomSize(geomAnd(geomSizeAndNot(met4_f7 met4_gt_10 1.0 10.0) substr...

Executing: met4_f9 = geomSize(geomAnd(geomSizeAndNot(met4_f8 met4_gt_10 1.0 10.0) substr...

Executing: met4_f10 = geomSize(geomAnd(geomSizeAndNot(met4_f9 met4_gt_10 1.0 10.0) subst...

Executing: met4_blockfillarea = geomAndNot(geomAndNot(met4_f10 met4_lt_10_ovs) NOFILL)
	   errorLayer(met4_blockfillarea "AMTS1 Maximum MTOP spacing when the width of one or both MTOP shapes is less than 10um = 10")

Executing: met4_block_badx = geomContactCheck(MET4 (width == 2.0) (length == 5.0) ignore)

Executing: met4_block = geomAndNot(MET4 met4_block_badx)

Executing: amts3_x = geomSizeAndNot(met4_block met4_block_badx 0.5 6.0)

Executing: met4_not_met4block = geomAndNot(MET4 met4_block)

Executing: amts3_y_1 = drc(amts3_x met4_not_met4block (sep < 4.0) parallel opposite)

Executing: amts3_y_2 = geomOverlap(amts3_y_1 MET4)

Executing: amts3_y = geomAndNot(amts3_y_1 amts3_y_2)

Executing: amts3_z_1 = drc(amts3_y met4_block (sep < 6.5) parallel opposite)

Executing: amts3_z_2 = geomOverlap(amts3_z_1 MET4)

Executing: amts3_z = geomAndNot(amts3_z_1 amts3_z_2)

Executing: amts3_u = geomAndNot(geomOr(amts3_y amts3_z) MET4)

Executing: amts3_error = geomButtOnly(amts3_u met4_block)
	   errorLayer(amts3_error "AMTS3 maximum met4 to met4 block spacing")

Executing: amts4_error = drc(met4_block (sep < 2))

Executing: errorLayer(geomAnd(NTUB KEPOUT) "NWR001 NTUB overlapping KEPOUT is not allowed")

Executing: errorLayer(drc(kepout_or_sfcdef NTUB (sep < 3)) "S1KONW Minimum NTUB spacing to KEPOUT or SFCDEF = 3")

Executing: errorLayer(geomAnd(DIFF KEPOUT) "AAR001 DIFF overlapping KEPOUT is not allowed")

Executing: errorLayer(drc(kepout_or_sfcdef DIFF (sep < 0.6)) "S1AAKO Minimum DIFF spacing to KEPOUT or SFCDEF = 0.6")

Executing: errorLayer(geomAnd(MIDOX KEPOUT) "XMR002 MIDOX overlapping KEPOUT is not allowed")

Executing: errorLayer(drc(kepout_or_sfcdef MIDOX (sep < 0.6)) "S1KOXM Minimum MIDOX spacing to KEPOUT or SFCDEF = 0.6")

Executing: errorLayer(geomAnd(POLY1 KEPOUT) "P1R002 POLY1 overlapping KEPOUT is not allowed")

Executing: errorLayer(drc(kepout_or_sfcdef POLY1 (sep < 0.45)) "S1KOP1 Minimum POLY1 spacing to KEPOUT or SFCDEF = 0.45")

Executing: errorLayer(geomAnd(NPLUS KEPOUT) "NSR001 NPLUS overlapping KEPOUT is not allowed")

Executing: errorLayer(drc(kepout_or_sfcdef NPLUS (sep < 0.6)) "S1KONS Minimum NPLUS spacing to KEPOUT or SFCDEF = 0.6")

Executing: errorLayer(geomAnd(PPLUS KEPOUT) "PSR001 PPLUS overlapping KEPOUT is not allowed")

Executing: errorLayer(drc(kepout_or_sfcdef PPLUS (sep < 0.6)) "S1KOPS Minimum PPLUS spacing to KEPOUT or SFCDEF = 0.6")

Executing: errorLayer(geomAnd(HRES KEPOUT) "HRR004 HRES overlapping KEPOUT is not allowed")

Executing: errorLayer(drc(kepout_or_sfcdef HRES (sep < 0.6)) "S1HRKO Minimum HRES spacing to KEPOUT or SFCDEF = 0.6")

Executing: errorLayer(geomAnd(POLY2 KEPOUT) "P2R002 POLY2 overlapping KEPOUT is not allowed")

Executing: errorLayer(drc(kepout_or_sfcdef POLY2 (sep < 0.6)) "S1KOP2 Minimum POLY2 spacing to KEPOUT or SFCDEF = 0.6")

Executing: errorLayer(geomAnd(CONT KEPOUT) "COR002 CONT overlapping KEPOUT is not allowed")

Executing: errorLayer(drc(kepout_or_sfcdef CONT (sep < 0.4)) "S1COKO Minimum CONT spacing to KEPOUT or SFCDEF = 0.4")

Executing: errorLayer(geomAnd(MET1 KEPOUT) "M1R002 MET1 overlapping KEPOUT is not allowed")

Executing: errorLayer(drc(kepout_or_sfcdef MET1 (sep < 0.45)) "S1KOM1 Minimum MET1 spacing to KEPOUT or SFCDEF = 0.45")

Executing: errorLayer(geomAnd(VIA1 KEPOUT) "V1R002 VIA1 overlapping KEPOUT is not allowed")

Executing: errorLayer(drc(kepout_or_sfcdef VIA1 (sep < 0.45)) "S1KOV1 Minimum VIA1 spacing to KEPOUT or SFCDEF = 0.45")

Executing: errorLayer(geomAnd(MET2 KEPOUT) "M2R002 MET2 overlapping KEPOUT is not allowed")

Executing: errorLayer(drc(kepout_or_sfcdef MET2 (sep < 0.5)) "S1KOM2 0.5")

Executing: errorLayer(geomAnd(VIA2 KEPOUT) "V2R002 VIA2 overlapping KEPOUT is not allowed")

Executing: errorLayer(drc(kepout_or_sfcdef VIA2 (sep < 0.45)) "S1KOV2 Minimum VIA2 spacing to KEPOUT or SFCDEF = 0.45")

Executing: errorLayer(geomAnd(MET3 KEPOUT) "M3R002 MET3 overlapping KEPOUT is not allowed")

Executing: errorLayer(drc(kepout_or_sfcdef MET3 (sep < 0.6)) "S1KOM3 Minimum MET3 spacing to KEPOUT or SFCDEF = 0.6")

Executing: errorLayer(geomAnd(PAD KEPOUT) "PAR002 PAD overlapping KEPOUT is not allowed")

Executing: errorLayer(drc(kepout_or_sfcdef PAD (sep < 9)) "S1KOPA Minimum PAD spacing to KEPOUT or SFCDEF (not shown) = 9")

Executing: errorLayer(geomAnd(LVTDEF KEPOUT) "LVR004 LVTDEF overlapping KEPOUT is not allowed")

Executing: errorLayer(drc(kepout_or_sfcdef LVTDEF (sep < 0.6)) "S1KOLV Minimum LVTDEF spacing to KEPOUT or SFCDEF = 0.6")

Executing: errorLayer(geomAnd(METCAP KEPOUT) "MCR002 METCAP overlapping KEPOUT is not allowed")

Executing: errorLayer(drc(kepout_or_sfcdef METCAP (sep < 0.8)) "S1MCKO Minimum METCAP spacing to KEPOUT or SFCDEF = 0.8")

Executing: errorLayer(geomAnd(VIA3 KEPOUT) "V3R002 VIA3 overlapping KEPOUT is not allowed")

Executing: errorLayer(drc(kepout_or_sfcdef VIA3 (sep < 0.45)) "S1KOV3 Minimum VIA3 spacing to KEPOUT or SFCDEF = 0.45")

Executing: errorLayer(geomAnd(MET4 KEPOUT) "M4R002 MET4 overlapping KEPOUT is not allowed")

Executing: errorLayer(drc(kepout_or_sfcdef MET4 (sep < 0.6)) "S1KOM4 Minimum MET4 spacing to KEPOUT or SFCDEF = 0.6")

Executing: ovlp_restrm_resdef_rec = drc(RESTRM RESDEF (enc < 0.1))

Executing: ovlp_restrm_tubdef_rec = drc(RESTRM TUBDEF (enc < 0.1))

Executing: resdef_good1 = geomStraddle(RESDEF RESTRM (keep == 2))

Executing: resdef_good2 = geomStraddle(TUBDEF RESTRM (keep == 2))

Executing: resdef_bad1 = geomAndNot(RESDEF geomOr(resdef_good1 resdef_good2))

Executing: resdef_bad2 = geomAndNot(resdef_bad1 HRES)
	   errorLayer(resdef_bad2 "Warning: Illegal Layout Convention: RESDEF/TUBDEF missing RESTRM")

Executing: restrm_bad = geomAvoiding(RESTRM geomOr(TUBDEF geomOr(RESDEF INDDEF)))
	   errorLayer(restrm_bad "Warning: Illegal Layout Convention: RESTRM missing RESDEF")

Executing: fimp_out_sfc_pwr001 = geomAndNot(FIMP SFCDEF)
	   errorLayer(fimp_out_sfc_pwr001 "PWR001: FIMP outside SFCDEF will be removed and regenerated")

Executing: nldd_out_sfc_ldr001 = geomAndNot(NLDD SFCDEF)
	   errorLayer(nldd_out_sfc_ldr001 "LDR001: NLDD outside SFCDEF will be removed and regenerated")

Executing: nldd50_out_sfc_l2r001 = geomAndNot(NLDD50 SFCDEF)
	   errorLayer(nldd50_out_sfc_l2r001 " L2R001: NLDD50 outside SFCDEF will be removed and regenerated")

Executing: pcoat_outside_sfc_pyr001 = geomAndNot(PCOAT SFCDEF)
	   errorLayer(pcoat_outside_sfc_pyr001 "PYR001 PCOAT outside SFCDEF will be removed and regenerated")

Executing: width_pcoat = drc(PCOAT (width < 15))

Executing: spac_pcoat = drc(PCOAT (sepNotch < 15))

Executing: pcoat_rec002 = geomGetNon45(PCOAT)
	   errorLayer(pcoat_rec002 "REC002 PCOAT not multiple 45 degrees PCOAT")

Executing: width_pcoat_black = drc(PCOAT_black (width < 2.0))

Executing: spac_pcoat_black = drc(PCOAT_black (sepNotch < 2.0))

Executing: spac_pcoat_black_pad = drc(PCOAT_black PAD (sep < 3.0))

Executing: ovlp_chip_edge_for_check_pcoat_black = drc(chip_edge_for_check PCOAT_black (e...

Executing: width_pcoat_clear = drc(PCOAT_clear (width < 2.0))

Executing: spac_pcoat_clear = drc(PCOAT_clear (sepNotch < 2.0))

Executing: spac_pcoat_clear_pad = drc(PCOAT_clear PAD (sep < 3.0))

Executing: ovlp_chip_edge_for_check_pcoat_clear = drc(chip_edge_for_check PCOAT_clear (e...

Executing: width_pcoat_green = drc(PCOAT_green (width < 2.0))

Executing: spac_pcoat_green = drc(PCOAT_green (sepNotch < 2.0))

Executing: spac_pcoat_green_pad = drc(PCOAT_green PAD (sep < 3.0))

Executing: ovlp_chip_edge_for_check_pcoat_green = drc(chip_edge_for_check PCOAT_green (e...

Executing: width_pcoat_redxx = drc(PCOAT_red (width < 2.0))

Executing: spac_pcoat_redxx = drc(PCOAT_red (sepNotch < 2.0))

Executing: spac_pcoat_redxx_pad = drc(PCOAT_red PAD (sep < 3.0))

Executing: ovlp_chip_edge_for_check_pcoat_redxx = drc(chip_edge_for_check PCOAT_red (enc...

Executing: width_pcoat_bluex = drc(PCOAT_blue (width < 2.0))

Executing: spac_pcoat_bluex = drc(PCOAT_blue (sepNotch < 2.0))

Executing: spac_pcoat_bluex_pad = drc(PCOAT_blue PAD (sep < 3.0))

Executing: ovlp_chip_edge_for_check_pcoat_bluex = drc(chip_edge_for_check PCOAT_blue (en...

Executing: poly1_copy1 = geomOr(net_poly1)

Executing: geomConnect((via poly1_copy1 net_poly1 poly1_copy2))

Executing: processAntenna(((gate sum (gate net_poly1)) (antenna sum net_poly1) (poly1Rat...
running in speedup mode

Executing: geomConnect((via net_ndiffcon net_met1 net_ndiff) (via net_pdiffcon net_met1 ...

Executing: processAntenna(((gate sum (gate net_poly1)) (antenna sum net_met1) (diffusion...
running in speedup mode

Executing: geomConnect((via net_ndiffcon net_met1 net_ndiff) (via net_pdiffcon net_met1 ...

Executing: processAntenna(((gate sum (gate net_poly1)) (antenna sum net_met2) (diffusion...
running in speedup mode

Executing: geomConnect((via net_ndiffcon net_met1 net_ndiff) (via net_pdiffcon net_met1 ...

Executing: processAntenna(((gate sum (gate net_poly1)) (antenna sum net_met3) (diffusion...
running in speedup mode

Executing: geomConnect((via net_ndiffcon net_met1 net_ndiff) (via net_pdiffcon net_met1 ...

Executing: processAntenna(((gate sum (gate net_poly1)) (antenna sum net_met4) (diffusion...
running in speedup mode

Executing: geomConnect((via pres1_exp pres1_lexp pres1_wexp))

Executing: processAntenna(((gate sum (pres1_wexp pres1_exp)) (antenna sum pres1_lexp) (p...
running in speedup mode

Executing: geomConnect((via pres_exp pres_lexp pres_wexp))

Executing: processAntenna(((gate sum (pres_wexp pres_exp)) (antenna sum pres_lexp) (pres...
running in speedup mode

Executing: geomConnect((via presp_exp presp_lexp presp_wexp))

Executing: processAntenna(((gate sum (presp_wexp presp_exp)) (antenna sum presp_lexp) (p...
running in speedup mode

Executing: geomConnect((via presph_exp presph_lexp presph_wexp))

Executing: processAntenna(((gate sum (presph_wexp presph_exp)) (antenna sum presph_lexp)...
running in speedup mode

Executing: geomConnect((via nwres_exp nwres_lexp nwres_wexp))

Executing: processAntenna(((gate sum (nwres_wexp nwres_exp)) (antenna sum nwres_lexp) (n...
running in speedup mode

Executing: geomConnect((via presh_exp presh_lexp presh_wexp))

Executing: processAntenna(((gate sum (presh_wexp presh_exp)) (antenna sum presh_lexp) (p...
running in speedup mode

Executing: geomConnect((via presz_exp presz_lexp presz_wexp))

Executing: processAntenna(((gate sum (presz_wexp presz_exp)) (antenna sum presz_lexp) (p...
running in speedup mode

Executing: geomConnect((overlap net_poly2con POLY2) (overlap net_poly1con POLY1))

Executing: processAntenna(((gate sum (net_poly1con POLY1)) (antenna sum POLY1) (poly1Rat...
running in speedup mode

Executing: processAntenna(((gate sum (net_poly2con POLY2)) (antenna sum POLY2) (poly2Rat...
running in speedup mode

Executing: via_pad = geomInside(padvia m1pad_st)

Executing: via2_pad = geomInside(padvia2 m2pad_st)

Executing: m3pad_st = geomButtOrOver(m3pad pad_st_all)

Executing: m4pad_st = geomButtOrOver(m4pad pad_st_all)

Executing: via3_pad = geomInside(padvia3 m3pad_st)

Executing: geomConnect((via via2_pad m3pad_st m2pad_st) (via via_pad m2pad_st m1pad_st) ...

Executing: ill_met2_met1_bondpad_cbr1 = geomOverlap(m2pad_st m1pad_st diffNet)
	   errorLayer(ill_met2_met1_bondpad_cbr1 "CBR1 PAD met2 not connected to met1")

Executing: ill_met3_met2_bondpad_cbr1 = geomOverlap(m3pad_st m2pad_st diffNet)
	   errorLayer(ill_met3_met2_bondpad_cbr1 "CBR1 PAD met3 not connected to met2")

Executing: ill_met4_met3_bondpad_cbr1 = geomOverlap(m4pad_st m3pad_st diffNet)
	   errorLayer(ill_met4_met3_bondpad_cbr1 "CBR1 PAD met4 not connected to met3")

Finished running rules. Task processor time in main process:
cpu: 0.28  elap: 0  pf: 0  in: 0  out: 2224  virt: 194M  phys: 993M

Started output post-processing ...

Nothing to postprocess: No grid cells in the design

Finished output post-processing
cpu: 0.10  elap: 0  pf: 0  in: 0  out: 0  virt: 341M  phys: 1331M

Finished building the persistent database.
cpu: 0.01  elap: 0  pf: 0  in: 0  out: 6448  virt: 346M  phys: 1347M


*****  aveng terminated normally  *****


Finished /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/aveng

Starting /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/avrpt /home/oj23092/VLSI_Design_Lab/ASSURA_DRC/NAND3_temp/NAND3_temp.rsf
Loading all available p-cell functions
AMS_DB set to cds

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets
@(#)$CDS: avrpt_64 version av4.1:Production:dfII6.1.8-64b:IC6.1.8-64b.500.25 09/19/2022 00:36 (sjfhw885) $
sub-version 4.1_USR6_EHF13, integ signature 2022-09-19-0008

run on it075710.wks.bris.ac.uk from /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618/tools.lnx86/assura/bin/64bit/avrpt on Fri Feb 23 15:47:06 2024


   Creating Error Database 'NAND3_temp'...

   Reading VDB ...
2024/02/23 15:47:06 WARNING This OS does not appear to be a Cadence supported Linux configuration.
2024/02/23 15:47:06 For more info, please run CheckSysConf in <cdsRoot/tools.lnx86/bin/checkSysConf <productId>
--------------------------------------------------------------------------------
Rule      Message                                    FlatCount     RealCount
--------------------------------------------------------------------------------
(    1)  dataAuditErrors                                     0            0
(    2)  ILL_LAYER_PPLUS_DPL                                 0            0
(    3)  ILL_LAYER_METCAP                                    0            0
(    4)  ILL_ELEMENT_RPOLY2P                                 0            0
(    5)  ILL_ELEMENT_RPOLYZ                                  0            0
(    6)  DEVICE Error: Illegal nmosh device                  0            0
(    7)  ILL_LAYER_LVTDEF                                    0            0
(    8)  NMOSW/NMOSMW for waffle trans we expect             0            0
(    9)  NMOSW/NMOSMW for waffle trans we expect             0            0
(   10)  PMOSW/PMOSMW for waffle trans we expect             0            0
(   11)  PMOSW/PMOSMW for waffle trans we expect             0            0
(   12)  Process Modules : PHDNWA850 not availabl            0            0
(   13)  Process Modules : PHDNWB850 not availabl            0            0
(   14)  Version od SBD5 obsolte or missing                  0            0
(   15)  Process Modules : SBD5 not available for            0            0
(   16)  ILL_LAYER_PFIMP                                     0            0
(   17)  ERC Warning : Name of Spiral not identif            0            0
(   18)  ERC Warning : INDDEF does not define a c            0            0
(   19)  ERC Warning : illegal layer under spiral            0            0
(   20)  ERC Warning : Each INDDEF shape must be             0            0
(   21)  ERC Warning : multiple text on INDEF                0            0
(   22)  Error: MET1 resistors (shorts) must be r            0            0
(   23)  Error: Number of MET1 resistor terminals            0            0
(   24)  Error: MET2 resistors (shorts) must be r            0            0
(   25)  Error: Number of MET2 resistor terminals            0            0
(   26)  Error: MET3 resistors (shorts) must be r            0            0
(   27)  Error: Number of MET3 resistor terminals            0            0
(   28)  Error: MET4 resistors (shorts) must be r            0            0
(   29)  Error: Number of MET4 resistor terminals            0            0
(   30)  RVIA1 Definition layer: does not open al            0            0
(   31)  RVIA1 Definition layer: truncates via1,             0            0
(   32)  RVIA1 Definition layer: does not define             0            0
(   33)  RVIA1 Definition layer: over METRES                 0            0
(   34)  RVIA2 Definition layer: does not open al            0            0
(   35)  RVIA2 Definition layer: truncates via2,             0            0
(   36)  RVIA2 Definition layer : does not define            0            0
(   37)  RVIA2 Definition layer: over METRES                 0            0
(   38)  RVIA3 Definition layer: does not open al            0            0
(   39)  RVIA3 Definition layer: truncates via3,             0            0
(   40)  RVIA3 Definition layer : does not define            0            0
(   41)  RVIA3 Definition layer: over METRES                 0            0
(   42)  ERROR : POLY1 pin outside poly1                     0            0
(   43)  ERROR : MET1 pin outside met1                       0            0
(   44)  ERROR : MET2 pin outside met2                       0            0
(   45)  ERROR : MET3 pin outside met3                       0            0
(   46)  ERROR : MET4 pin outside met4                       0            0
(   47)  ERROR : PAD pin outside pad metal                   0            0
(   48)  NMOSRF_OPEN_GATE                                    0            0
(   49)  PMOSRF_OPEN_GATE                                    0            0
(   50)  NMOSRF Element rule : fixed length = 0.3            0            0
(   51)  PMOSRF Element rule : fixed length = 0.3            0            0
(   52)  NMOSRF Element Rule : Gate width must be            0            0
(   53)  PMOSRF Element Rule : Gate width must be            0            0
(   54)  NMOSRF Element rule stripe width 5 U : m            0            0
(   55)  NMOSRF Element rule stripe width 10 U :             0            0
(   56)  PMOSRF Element rule stripe width 5 U : m            0            0
(   57)  PMOSRF Element rule stripe width 10 U :             0            0
(   58)  VERT10_P2 Element Rule : Base Ntub Perim            0            0
(   59)  VERT10_P3 Element Rule : Ptap Inside Per            0            0
(   60)  VERT10_E1 Element Rule : NTUB enclosure             0            0
(   61)  LAT2_P1 Element Rule : Emitter Perimeter            0            0
(   62)  LAT2_P2 Element Rule : Collector net_pdi            0            0
(   63)  LAT2_P3 Element Rule : Base Ntub Perimet            0            0
(   64)  LAT2_P4 Element Rule : Ptap Inside Perim            0            0
(   65)  LAT2_W1 Element Rule : Lateral Base Widt            0            0
(   66)  LAT2_E1 Element Rule : NTUB enclosure of            0            0
(   67)  LAT2_G1 Element Rule : gate of lat2 tran            0            0
(   68)  NMOSH_O1/NMOSMH_O1 Element Rule : Gate O            0            0
(   69)  NMOSH_S1/NMOSMH_S1 Element Rule : Gate D            0            0
(   70)  NMOSH_E1/NMOSMH_E1 Element Rule : Poly E            0            0
(   71)  NMOSH_L1/NMOSMH_L1 Element Rule : Gate L            0            0
(   72)  NMOSH_X1/NMOSMH_X1 Element Rule : drain             0            0
(   73)  NMOSH_X1/NMOSMH_X1 Element Rule : edge l            0            0
(   74)  CVART_MIN_W Element Rule : cvart min w l            0            0
(   75)  CVARM_MIN_W Element Rule : cvarm min w l            0            0
(   76)  CVART_MIN_L Element Rule : cvart min l l            0            0
(   77)  CVART_MIN_L Element Rule : cvart min l l            0            0
(   78)  CVAR_W1 Element Rule : Gate unit width =            0            0
(   79)  CVAR_L1 Element Rule : Gate unit length             0            0
(   80)  CVAR_X1 Element Rule : Gate spacing 1.0             0            0
(   81)  CVAR_Y1 Element Rule : Diff spacing 1.6             0            0
(   82)  Illegal device : Zener diode must have 0            0            0
(   83)  ZD2SM24_O1 Element Rule : must have 0.2             0            0
(   84)  ZD2SM24_W1 Element Rule : must have 0.40            0            0
(   85)  ZD2SM24_W1 Element Rule : must have 0.40            0            0
(   86)  PHDNWA850/PHDNWB850 : Illegal layer on p            0            0
(   87)  PHDNWA850/PHDNWB850 : Illegal layer on p            0            0
(   88)  PHDNWA850/PHDNWB850 : ntub must not encl            0            0
(   89)  PHDNWA850/PHDNWB850 : ntub does not encl            0            0
(   90)  PHDNWA850/PHDNWB850 : OPTDEF does not co            0            0
(   91)  PHDNWA850/PHDNWB850 : OPTDEF layer outsi            0            0
(   92)  PHDNWA850/PHDNWB850 : text label for lig            0            0
(   93)  PHR001 PHDNWA850/PHDNWB850 : Illegal lay            0            0
(   94)  PHR001 PHDNWA850/PHDNWB850 : Illegal lay            0            0
(   95)  BRR001 PHDNWB850 : Illegal layer on phot            0            0
(   96)  BRR001 PHDNWB850 : Illegal layer on phot            0            0
(   97)  PHDNWB850 PAD_BARC : PAD_BARC not rectan            0            0
(   98)  W1BR PHDNWB850 : Minimum PAD_BARC width             0            0
(   99)  ILL_LAYER_CHIPEDGE chipedge is only used            0            0
(  100)  ATTENTION : Layer SFCDEF should not be u            0            0
(  101)  W2BR :  Maximum PAD_BARC width (1 PAD_BA            0            0
(  102)  W3BR :  Maximum PAD_BARC width (multiple            0            0
(  103)  S1BRBR : Minimum PAD_BARC spacing = 7               0            0
(  104)  S1BRM1 : Minimum MET1 to PAD_BARC spacin            0            0
(  105)  S1BRM2 : Minimum MET2 to PAD_BARC spacin            0            0
(  106)  S1BRM3 : Minimum MET3 to PAD_BARC spacin            0            0
(  107)  S1BRM4 : Minimum MET4 to PAD_BARC spacin            0            0
(  108)  PHDNWA850/PHDNWB850 both on same design             0            0
(  109)  PHDNWA850 : PCOAT not allowed for this p            0            0
(  110)  PHDNWB850 : PCOAT not allowed for this p            0            0
(  111)  PHDNWA850_W1 : Minimum NTUB size (W and             0            0
(  112)  PHDNWA850_W2 :  Maximum NTUB size (W and            0            0
(  113)  PHDNWA850 W1/W2 : PHOTO diode is not squ            0            0
(  114)  PHDNWA850_S1 : miss substrate ptap Fixed            0            0
(  115)  PHDNWA850_E1 : Fixed NTUB enclosure of N            0            0
(  116)  PHDNWA850_S1 : Fixed PDIFF to NTUB spaci            0            0
(  117)  PHDNWB850_W1 : Minimum PAD_BARC size (W             0            0
(  118)  PHDNWB850_W2 : Maximum PAD_BARC size (W             0            0
(  119)  PHDNWB850 W1/W2 : PHOTO diode is not squ            0            0
(  120)  PHDNWB850_S1: miss substrate ptap Fixed             0            0
(  121)  PHDNWB850_E1 : Fixed NTUB enclosure of N            0            0
(  122)  PHDNWB850_S1 : Fixed PDIFF to NTUB spaci            0            0
(  123)  PHDNWB850_E2 : Fixed NDIFF enclosure of             0            0
(  124)  PHDNWB850_E2 : Fixed NDIFF enclosure of             0            0
(  125)  PHDNWB850_S2 : Fixed MET1 to PAD_BARC sp            0            0
(  126)  V1R003 : VIA1 overlapping SBDCON is not             0            0
(  127)  S1COV1 : Minimum VIA1 spacing to SBDCON             0            0
(  128)  SBD5 DIODE : multiple SBDCON                        0            0
(  129)  SDB5 DIODE : bad sbdcon                             0            0
(  130)  SBD5_W DIODE fixed SBDCON width 0.4                 0            0
(  131)  SBD5_W_L1 DIODE : SBDCON must have fixed            0            0
(  132)  SBD5_X1 DIFF enclosure of SBDCON 0.3                0            0
(  133)  SBD5_X2 DIFF spacing 0.8                            0            0
(  134)  SBD5_X3 DIFF spacing 0.55                           0            0
(  135)  SBD5_X4 minimum NTUB ovlp ndiff 1.0                 0            0
(  136)  SBD5_CATHODE_X5 SBD5_X5 minimum MET1 ovl            0            0
(  137)  SBD5_ANODE_X5 SBD5_X5 minimum MET1 ovlp             0            0
(  138)  SBD5 DIODE : Illegal layer on Schottky d            0            0
(  139)  SBD5_R1 : Multiple SBD5 in a shared NTUB            0            0
(  140)  PFR001 : DEVDEF_pfuse outside IPDEF is n            0            0
(  141)  Error : RESDEF over DEVDEF_pfuse not all            0            0
(  142)  ERC Warning : This poly2 over HRES layer            0            0
(  143)  CPMIM not supported over RFDEF                      0            0
(  144)  CPMIM error : cpmim must be totally insi            0            0
(  145)  E1P2MC : Fixed poly2 enclosure of metcap            0            0
(  146)  CPMIM_R1 : CPMIM overlapping MET1 is not            0            0
(  147)  CPMIM_R2 Element check: met3 metcap/poly            0            0
(  148)  CPMIM_R3 Element check: met2/poly2 plate            0            0
(  149)  W1PW : Minimum FIDEF width = 1.7                    0            0
(  150)   S1PWPW : Minimum FIDEF spacing = 1                 0            0
(  151)  S1NWPW : Minimum FIDEF to NTUB spacing =            0            0
(  152)  S1HVHV Minimum HVDEF spacing = 0.1                  0            0
(  153)  HVR001 Each HVDEF shape must be marked w            0            0
(  154)  HVR001 : Version of NMOS18T_REV1 obsolet            0            0
(  155)  HVR001 : Version of NMOS30M_REV2 obsolet            0            0
(  156)  HVR001 : No HVDEF on NMOS18T                        0            0
(  157)  HVR001 : No HVDEF on NMOS30M                        0            0
(  158)  HVR001 : Version of NMOS18T obsolete or             0            0
(  159)  HVR001 : Version of NMOS30M obsolete or             0            0
(  160)  HVR001 : HVDEF has illegal name on NMOS1            0            0
(  161)  HVR001 : HVDEF has illegal name on NMOS3            0            0
(  162)  NMOS18T/NMOS30M L Element Rule : Min gat            0            0
(  163)  NMOS18T/M W2 Element Rule : Min gate wid            0            0
(  164)  NMOS30M X4 Element Rule : drain ndiff to            0            0
(  165)  NMOS18T X4 Element Rule : drain ndiff to            0            0
(  166)  NMOS30M X1 Element Rule : poly1 to drain            0            0
(  167)  NMOS18T X1 Element Rule : poly1 to drain            0            0
(  168)  NMOS30M/NMOS18T Element Rule X3 : ntub o            0            0
(  169)  NMOS30M Element Rule X5 : source diff ov            0            0
(  170)  NMOS18T Element Rule X5 : source diff ov            0            0
(  171)  NMOS30M/T Element Rule Y1 : poly1 to dra            0            0
(  172)  NMOS30M/T Element Rule Y2 : ntub stripe             0            0
(  173)  NMOS18T/M Y3 Element Rule : poly width o            0            0
(  174)  NMOS30M/T Element Rule Y4 : fidef ovlp o            0            0
(  175)  NMOS18T/M  Element Rule : nmos30m/nmos18            0            0
(  176)  NMOS30M/T Element Rule Y5 : fidef to bul            0            0
(  177)  NMOS18T/M Y8 Element Rule : poly must be            0            0
(  178)  NMOS18T/M Y8 Element Rule : 45 degree po            0            0
(  179)  NMOS18T/M Y9 Element Rule : 45 degree po            0            0
(  180)  NMOS18T/M Y11 Element Rule : fidef must             0            0
(  181)  NMOS18T/M Y11 Element Rule : fidef edge             0            0
(  182)  NMOS18T/M Element Rule Y10 : fidef verte            0            0
(  183)  W2PW : Minimum PFIMP width = 0.8                    0            0
(  184)   S2PWPW : Minimum PFIMP spacing = 1                 0            0
(  185)  PWR002 : (PFIMP and not (HVDEF or SFCDEF            0            0
(  186)  HVR001 : No HVDEF on PMOSD30M                       0            0
(  187)  HVR001 : Version of PMOSD30M obsolete or            0            0
(  188)  HVR001 : Version of PMOSD30M is REV1 and            0            0
(  189)  HVR001 : HVDEF has illegal name on PMOSD            0            0
(  190)  PMOSD30M : Minimum CHANNEL length = 0.6             0            0
(  191)  PMOSD30M : Minimum CHANNEL width / N = 6            0            0
(  192)  PMOSD30M X1 Element Rule : POLY1 to DRAI            0            0
(  193)  PMOSD30M Element Rule Y1 : POLY1 to DRAI            0            0
(  194)  PMOSD30M X2 Element Rule : DRAIN-PDIFF t            0            0
(  195)  PMOSD30M_X3 Element Rule : PFIMP overlap            0            0
(  196)  PMOSD30M_X4 Element Rule : Minimum NTUB             0            0
(  197)  PMOSD30M_X5 Element Rule : NTUB to SUBST            0            0
(  198)  PMOSD30M_X5 Element Rule : miss substrat            0            0
(  199)  PMOSD30M Element Rule X5  : bad layer be            0            0
(  200)  PMOSD30M Element Rule X6 : NPLUS to PGAT            0            0
(  201)  PMOSD30M Element Rule Y2 : PFIMP enclosu            0            0
(  202)  PMOSD30M Element Rule Y3 : BULK-NDIFF to            0            0
(  203)  PMOSD30M Element Rule Y4 : POLY1 width o            0            0
(  204)  PMOSD30M Element Rule Y5 : illegal verti            0            0
(  205)  PMOSD30M Element Rule Y5 : POLY1 45-deg             0            0
(  206)  PMOSD30M Element Rule Y5 : poly hole mus            0            0
(  207)  PMOSD30M Element Rule Y8 : Minimum PPLUS            0            0
(  208)  PMOSD30M_R2 Element Rule R2 : SOURCE-PDI            0            0
(  209)  PMOSD30M_R2 Element Rule R2 : SOURCE-PDI            0            0
(  210)  PMOSD30M Element Rule Y7 : Minimum PDIFF            0            0
(  211)  PMOSD30M Element Rule Y7: fixed size of             0            0
(  212)  PMOSD30M INFO : min spacing of butting n            0            0
(  213)  PMOSD30M_R1: Bulk and source must be con            0            0
(  214)  PMOSD30M_R1: Bulk and source must be con            0            0
(  215)  PMOSD30M_R1: Bulk and source must be con            0            0
(  216)  PMOSD30M_HVR003_sources_must_be_connecte            0            0
(  217)  PMOSD30M Element Rule : pfimp must be re            0            0
(  218)   PMOSD30M : this device not supported fo            0            0
(  219)  HVR001 : No HVDEF on PMOS30M                        0            0
(  220)  HVR001 : Version of PMOS30M obsolete or             0            0
(  221)  HVR001 : HVDEF has illegal name on PMOS3            0            0
(  222)  PMOS30M : _PMOS30M_L_                               0            0
(  223)  PMOS30M : _PMOS30M_W2_                              0            0
(  224)  PMOS30M X1 Element Rule : _PMOS30M_X1_              0            0
(  225)  PMOS30M Element Rule Y1 : _PMOS30M_Y1_              0            0
(  226)  PMOS30M X2 Element Rule : _PMOS30M_X2_              0            0
(  227)  PMOS30M_X3 Element Rule : _PMOS30M_X3_              0            0
(  228)  PMOS30M_X4 Element Rule : _PMOS30M_X4_              0            0
(  229)  PMOS30M_X5 Element Rule : _PMOS30M_X5_              0            0
(  230)  PMOS30M_X5 Element Rule : miss substrate            0            0
(  231)  PMOS30M Element Rule X5  : bad layer bet            0            0
(  232)  PMOS30M Element Rule Y2 : _PMOS30M_Y2_              0            0
(  233)  PMOS30M Element Rule Y3 : _PMOS30M_Y3_              0            0
(  234)  PMOS30M Element Rule Y4 : _PMOS30M_Y4_              0            0
(  235)  PMOS30M Element Rule Y5 : illegal vertic            0            0
(  236)  PMOS30M Element Rule Y5 : _PMOS30M_Y5_              0            0
(  237)  PMOS30M Element Rule Y5 : poly hole must            0            0
(  238)  PMOS30M_HVR003_sources_must_be_connected            0            0
(  239)  PMOS30M Element Rule : pfimp must be rec            0            0
(  240)   PMOS30M : this device not supported for            0            0
(  241)  HVR001 : Version of ESDPD12 obsolete or             0            0
(  242)  HVR001 : HVDEF has illegal name on ESDPD            0            0
(  243)  HVR001 : Version of ESDPD26 obsolete or             0            0
(  244)  HVR001 : HVDEF has illegal name on ESDPD            0            0
(  245)  HVR001 : Version of ESDPD18 obsolete or             0            0
(  246)  HVR001 : HVDEF has illegal name on ESDPD            0            0
(  247)  HVR001 : Version of ESDPD30 obsolete or             0            0
(  248)  HVR001 : HVDEF has illegal name on ESDPD            0            0
(  249)  HVR001 : Version of ESDGCN5 obsolete or             0            0
(  250)  HVR001 : HVDEF has illegal name on ESDGC            0            0
(  251)  HVR001 : Version of ESDGCP5 obsolete or             0            0
(  252)  HVR001 : HVDEF has illegal name on ESDGC            0            0
(  253)  HVR001 : Version of ESDFDP5 obsolete or             0            0
(  254)  HVR001 : HVDEF has illegal name on ESDFD            0            0
(  255)  HVR001 : Version of ESDFDN5 obsolete or             0            0
(  256)  HVR001 : HVDEF has illegal name on ESDFD            0            0
(  257)  HVR001 : HVDEF does not enclose a valid             0            0
(  258)  ESDPD12_L Element Rule : _ESDPD12_L_                0            0
(  259)  ESDPD12_W1 Element Rule : _ESDPD12_W1_              0            0
(  260)  ESDPD12_W2 Element Rule : _ESDPD12_W2_              0            0
(  261)  ESDPD12_X2 Element Rule : _ESDPD12_X2_              0            0
(  262)  ESDPD12_Y2 Element Rule : _ESDPD12_Y2_              0            0
(  263)  ESDPD12_X3 Element Rule : _ESDPD12_X3_              0            0
(  264)  ESDPD12_Y3 Element Rule : _ESDPD12_Y3_              0            0
(  265)  ESDPD12_X4 Element Rule : _ESDPD12_X4_              0            0
(  266)  ESDPD18_L Element Rule : CATHODE-NTUB le            0            0
(  267)  ESDPD18_W1 Element Rule : Minimum CATHOD            0            0
(  268)  ESDPD18_W2 Element Rule : Maximum CATHOD            0            0
(  269)  ESDPD18_X2 Element Rule : NTUB enclosure            0            0
(  270)  ESDPD18_Y2 Element Rule : NTUB enclosure            0            0
(  271)  ESDPD18_X3 Element Rule : PDIFF to NTUB             0            0
(  272)  ESDPD18_Y3 Element Rule : PDIFF to NTUB             0            0
(  273)  ESDPD18_X4 Element Rule : PDIFF width =             0            0
(  274)  ESDPD18_X5 Element Rule : Minimum CATHOD            0            0
(  275)  ESDPD26_L Element Rule : CATHODE-NTUB le            0            0
(  276)  ESDPD26_W1 Element Rule : Minimum CATHOD            0            0
(  277)  ESDPD26_W2 Element Rule : Maximum CATHOD            0            0
(  278)  ESDPD26_X2 Element Rule : NTUB enclosure            0            0
(  279)  ESDPD26_Y2 Element Rule : NTUB enclosure            0            0
(  280)  ESDPD26_X3 Element Rule : PDIFF to NTUB             0            0
(  281)  ESDPD26_Y3 Element Rule : PDIFF to NTUB             0            0
(  282)  ESDPD26_X4 Element Rule : PDIFF width =             0            0
(  283)  ESDPD26_X5 Element Rule : Minimum CATHOD            0            0
(  284)  ESDPD30_L Element Rule : CATHODE-NTUB le            0            0
(  285)  ESDPD30_W1 Element Rule : Minimum CATHOD            0            0
(  286)  ESDPD30_W2 Element Rule : Maximum CATHOD            0            0
(  287)  ESDPD30_X2 Element Rule : NTUB enclosure            0            0
(  288)  ESDPD30_Y2 Element Rule : NTUB enclosure            0            0
(  289)  ESDPD30_X3 Element Rule : PDIFF to NTUB             0            0
(  290)  ESDPD30_Y3 Element Rule : PDIFF to NTUB             0            0
(  291)  ESDPD30_X4 Element Rule : PDIFF width =             0            0
(  292)  ESDPD30_X5 Element Rule : Minimum CATHOD            0            0
(  293)  ESDFDP5_L Element Rule : ANODE-PDIFF len            0            0
(  294)  ESDFDP5_W1 Element Rule : Minimum ANODE-            0            0
(  295)  ESDFDP5_W2 Element Rule : Maximum ANODE-            0            0
(  296)  ESDFDP5_X2 Element Rule : PDIFF to NDIFF            0            0
(  297)  ESDFDP5_X3 Element Rule : NDIFF width =             0            0
(  298)  ESDFDN5_L Element Rule : CATHODE-NDIFF l            0            0
(  299)  ESDFDN5_W1 Element Rule : Minimum CATHOD            0            0
(  300)  ESDFDN5_W2 Element Rule : Maximum CATHOD            0            0
(  301)  ESDFDN5_X2 Element Rule : NDIFF to PDIFF            0            0
(  302)  ESDFDN5_X3 Element Rule : PDIFF width =             0            0
(  303)  ESDGCN5_L Element Rule : CATHODE-NDIFF l            0            0
(  304)  ESDGCN5_W1 Element Rule : Minimum CATHOD            0            0
(  305)  ESDGCN5_W2 Element Rule : Maximum CATHOD            0            0
(  306)  ESDGCN5_X2 Element Rule : NDIFF to PDIFF            0            0
(  307)  ESDGCN5_X3 Element Rule : PDIFF width =             0            0
(  308)  ESDGCP5_L Element Rule : ANODE-PDIFF len            0            0
(  309)  ESDGCP5_W1 Element Rule : Minimum ANODE-            0            0
(  310)  ESDGCP5_W2 Element Rule : Maximum ANODE-            0            0
(  311)  ESDGCP5_X2 Element Rule : PDIFF to NDIFF            0            0
(  312)  ESDGCP5_X3 Element Rule : NDIFF width =             0            0
(  313)  MOSW : Waffle trans : cannot mix differe            0            0
(  314)  MOSW : Waffle trans hole : poly hole siz            0            0
(  315)  MOSW : Waffle trans gate : these gates c            0            0
(  316)  NMOSW : Waffle trans : shorted device nm            0            0
(  317)  NMOSMW : Waffle trans : shorted device n            0            0
(  318)  PMOSW : Waffle trans : shorted device pm            0            0
(  319)  PMOSMW : Waffle trans : shorted device p            0            0
(  320)  NMOSW : Waffle trans : s/d of waffle tra            0            0
(  321)  NMOSMW : Waffle trans : s/d of waffle tr            0            0
(  322)  PMOSW : Waffle trans : s/d of waffle tra            0            0
(  323)  PMOSMW : Waffle trans : s/d of waffle tr            0            0
(  324)   NMOSW for waffle trans we expect 1, 2,             0            0
(  325)   NMOSMW for waffle trans we expect 1, 2,            0            0
(  326)  NMOSW_W : Waffle trans : fixed channel l            0            0
(  327)  NMOSW_L1 : Waffle trans : min channel le            0            0
(  328)  NMOSW_L2 : Waffle trans : max channel le            0            0
(  329)  NMOSMW_W : Waffle trans : fixed channel             0            0
(  330)  NMOSMW_L1 : Waffle trans : min channel l            0            0
(  331)  NMOSMW_L2 : Waffle trans : max channel l            0            0
(  332)  NMOSW_S1 : Waffle trans : fixed diffcon             0            0
(  333)  NMOSMW_S1 : Waffle trans : fixed diffcon            0            0
(  334)   PMOSW for waffle trans we expect 1, 2,             0            0
(  335)   PMOSMW for waffle trans we expect 1, 2,            0            0
(  336)  PMOSW_W : Waffle trans : fixed channel l            0            0
(  337)  PMOSW_L1 : Waffle trans : min channel le            0            0
(  338)  PMOSW_L2 : Waffle trans : max channel le            0            0
(  339)  PMOSMW_W : Waffle trans : fixed channel             0            0
(  340)  PMOSMW_L1 : Waffle trans : min channel l            0            0
(  341)  PMOSMW_L2 : Waffle trans : max channel l            0            0
(  342)  PMOSW_S1 : Waffle trans : fixed diffcon             0            0
(  343)  PMOSMW_S1 : Waffle trans : fixed diffcon            0            0
(  344)  ILL_LAYER_LVTA                                      0            0
(  345)  ILL_LAYER_LVPTUB                                    0            0
(  346)  ILL_ELEMENT_RPOLYH_RPOLYZ                           0            0
(  347)  ILL_ELEMENT_RPOLY2P_RPOLY2PH                        0            0
(  348)  NTUB net layer must not be used in layou            0            0
(  349)  POLY1 net layer must not be used in layo            0            0
(  350)  POLY2 net layer must not be used in layo            0            0
(  351)  CONT net layer must not be used in layou            0            0
(  352)  MET1 net layer must not be used in layou            0            0
(  353)  VIA1 net layer must not be used in layou            0            0
(  354)  MET2 net layer must not be used in layou            0            0
(  355)  VIA2 net layer must not be used in layou            0            0
(  356)  MET3 net layer must not be used in layou            0            0
(  357)  VIA3 net layer must not be used in layou            0            0
(  358)  MET4 net layer must not be used in layou            0            0
(  359)  Warning: No MET4 on MET4 Pin                        0            0
(  360)  Warning: No POLY1 on POLY1 Pin                      0            0
(  361)  Warning: No MET1 on MET1 Pin                        0            0
(  362)  Warning: No MET2 on MET2 Pin                        0            0
(  363)  Warning: No MET3 on MET3 Pin                        0            0
(  364)  REC002 REC002 NTUB not multiple 45 degre            0            0
(  365)  REC002 REC002 DIFF not multiple 45 degre            0            0
(  366)  REC002 REC002 MIDOX not multiple 45 degr            0            0
(  367)  REC002 REC002 POLY1 not multiple 45 degr            0            0
(  368)  REC002 REC002 NPLUS not multiple 45 degr            0            0
(  369)  REC002 REC002 PPLUS not multiple 45 degr            0            0
(  370)  REC002 REC002 HRES not multiple 45 degre            0            0
(  371)  REC002 REC002 CONT not multiple 45 degre            0            0
(  372)  REC002 REC002 MET1 not multiple 45 degre            0            0
(  373)  REC002 REC002 VIA1 not multiple 45 degre            0            0
(  374)  REC002 REC002 MET2 not multiple 45 degre            0            0
(  375)  REC002 REC002 VIA2 not multiple 45 degre            0            0
(  376)  REC002 REC002 MET3 not multiple 45 degre            0            0
(  377)  REC002 REC002 VIA3 not multiple 45 degre            0            0
(  378)  REC002 REC002 MET4 not multiple 45 degre            0            0
(  379)  REC002 REC002 PAD not multiple 45 degree            0            0
(  380)  NW_W_1 Minimum NTUB width = 1.7                     0            0
(  381)  NW_W_2 Minimum HOT_NTUB width = 3                   0            0
(  382)  NW_S_1 Minimum spacing of NTUB with diff            0            0
(  383)  NW_S_2 Minimum spacing of NTUB with same            0            0
(  384)  NW_S_2 Minimum spacing of NTUB with same            0            0
(  385)  OD_W_1 Minimum DIFF width to define the             0            0
(  386)  OD_W_1 Minimum DIFF width to define the             0            0
(  387)  OD_W_2 Minimum DIFF width for interconne            0            0
(  388)  OD_S_1 Minimum DIFF spacing = 0.6                   0            0
(  389)  OD_S_1 Minimum DIFF spacing = 0.6 notch             0            0
(  390)  OD_C_1 Minimum NTUB enclosure of NDIFF =            0            0
(  391)  OD_C_2 Minimum NDIFF to NTUB spacing = 1            0            0
(  392)  OD_C_3 Minimum NDIFF to HOT_NTUB spacing            0            0
(  393)  OD_C_4 Minimum NTUB enclosure of PDIFF =            0            0
(  394)  OD_C_5 Minimum PDIFF to NTUB spacing = 0            0            0
(  395)  OD_C_6a Minimum PDIFF to NGATE spacing =            0            0
(  396)  OD_C_6b Minimum NDIFF to PGATE spacing =            0            0
(  397)  OD_S_2B Minimum NDIFF to non-butting PDI            0            0
(  398)  INFO: DIFF missing nplus/pplus                      0            0
(  399)  W1XM Minimum MIDOX width = 0.6                      0            0
(  400)  OD2_E_1 Minimum MIDOX enclosure of DIFF             0            0
(  401)  OD2_S_1 Minimum MIDOX spacing = 0.6                 0            0
(  402)  OD2_C_1 Minimum MIDOX to DIFF spacing =             0            0
(  403)  BAD1XM MIDOX outside GATE is not allowed            0            0
(  404)  PO_W_1a Minimum GATE length of PMOS = 0.            0            0
(  405)  PO_W_1b Minimum GATE length of PMOSM = 0            0            0
(  406)  PO_W_2a Minimum GATE length of NMOS = 0.            0            0
(  407)  PO_W_2b Minimum GATE length of NMOSM = 0            0            0
(  408)  PO_W_3 Minimum POLY1 width for interconn            0            0
(  409)  PO_S_1 Minimum POLY1 spacing = 0.45                 0            0
(  410)  PO_S_1 Minimum POLY1 spacing = 0.45 notc            0            0
(  411)  PO_C_1 Minimum POLY1 to DIFF spacing = 0            0            0
(  412)  PO_C_2 Minimum DIFF extension of GATE =             0            0
(  413)  PO_O_1 Minimum POLY1 extension of GATE =            0            0
(  414)  PO2_W_1 Minimum CPOLY width = 0.8                   0            0
(  415)  PO2_S_1 Minimum CPOLY spacing = 0.65                0            0
(  416)  PO2_E_1 Minimum POLY1 enclosure of CPOLY            0            0
(  417)  PO2_E_2 Minimum CPOLY enclosure of POLY2            0            0
(  418)  PO2_C_1 Minimum POLY1CON to CPOLY spacin            0            0
(  419)  PO2_W_2 Minimum POLY2 width = 0.65                  0            0
(  420)  PO2_S_2 Minimum POLY2 spacing = 0.5                 0            0
(  421)  PO2_S_2 Minimum POLY2 spacing = 0.5 notc            0            0
(  422)  PO2_S_2 Minimum POLY2 spacing = 0.5 notc            0            0
(  423)  PO2_S_2 Minimum POLY2 spacing = 0.5 notc            0            0
(  424)  PO2_W_3 Minimum RPOLYH width = 0.8                  0            0
(  425)  PO2_S_3 Minimum RPOLYH spacing = 0.75               0            0
(  426)  PO2_S_3 Minimum RPOLYH spacing = 0.75 no            0            0
(  427)  PO2_C_2 Minimum DIFF to POLY2 spacing =             0            0
(  428)  PO2_C_3 Minimum POLY1 to POLY2 spacing =            0            0
(  429)  PO2_E_3 Minimum POLY2 enclosure of POLY2            0            0
(  430)  PO2_R_1 POLY2 on DIFF is not allowed                0            0
(  431)  PP_W_1 Minimum PPLUS width = 0.6                    0            0
(  432)  PP_S_1 Minimum PPLUS spacing = 0.6                  0            0
(  433)  PP_C_1 Minimum PPLUS to DIFF spacing = 0            0            0
(  434)  PP_C_2 Minimum PPLUS to NGATE spacing =             0            0
(  435)  PP_C_3 Minimum PPLUS extension of PGATE             0            0
(  436)  PP_O_1  Minimum overlap of PPLUS and DIF            0            0
(  437)  PP_E_1 Minimum PPLUS extension of DIFF =            0            0
(  438)  PP_C_5 NP_C_5 NPC5/PPC5  Minimum PPLUS t            0            0
(  439)  PP_C_6 Minimum PPLUS to NPLUS spacing on            0            0
(  440)  NP_W_1 Minimum NPLUS width = 0.6                    0            0
(  441)  NP_S_1 Minimum NPLUS spacing = 0.6                  0            0
(  442)  NP_C_1 Minimum NPLUS to DIFF spacing = 0            0            0
(  443)  NP_C_2 Minimum NPLUS to PGATE spacing =             0            0
(  444)  NP_C_3 Minimum NPLUS extension of NGATE             0            0
(  445)  NP_O_1  Minimum overlap of NPLUS and DIF            0            0
(  446)  NP_E_1 Minimum NPLUS extension of DIFF =            0            0
(  447)  NP_C_6 Minimum NPLUS to PPLUS spacing on            0            0
(  448)  CO_W_1 Fixed CONT width = 0.4                       0            0
(  449)  CO_S_1 Minimum CONT spacing = 0.4                   0            0
(  450)  CO_C_1 Minimum DIFFCON to GATE spacing =            0            0
(  451)  CO_C_2  Minimum POLY1CON to DIFF spacing            0            0
(  452)  CO_E_1 Minimum DIFF enclosure of DIFFCON            0            0
(  453)  CO_E_2 Minimum POLY1 enclosure of POLY1C            0            0
(  454)  CO_E_3 Minimum PPLUS enclosure of PDIFFC            0            0
(  455)  CO_E_4  Minimum NPLUS enclosure of NDIFF            0            0
(  456)  CO_R_1 POLY1CON on DIFF is not allowed              0            0
(  457)  CO_R_2 Butted CONT is not allowed                   0            0
(  458)  R0_1_CT CONT without DIFF or POLY1 or PO            0            0
(  459)  M1_W_1 Minimum MET1 width = 0.5                     0            0
(  460)  M1_S_1  Minimum MET1 spacing = 0.45                 0            0
(  461)  M1_S_2 Minimum MET1 to WIDE_MET1 spacing            0            0
(  462)  M1_S_2 Minimum MET1 to WIDE_MET1 spacing            0            0
(  463)  M1_E_1 Minimum MET1 enclosure of CONT =             0            0
(  464)  VIA1_W_1 Fixed VIA1 width = 0.5                     0            0
(  465)  VIA1_S_1 Minimum VIA1 spacing = 0.45                0            0
(  466)  VIA1_E_1 Minimum MET1 enclosure of VIA1             0            0
(  467)  R01V1 VIA1 without MET1 is not allowed              0            0
(  468)  M2_W_1 Minimum MET2 width = 0.6                     0            0
(  469)  M2_S_1 Minimum MET2 spacing = 0.5                   0            0
(  470)  M2_S_2 Minimum MET2 to WIDE_MET2 spacing            0            0
(  471)  M2_S_2 Minimum MET2 to WIDE_MET2 spacing            0            0
(  472)  M2_E_1 Minimum MET2 enclosure of VIA1 =             0            0
(  473)  VIA2_W_1 Fixed VIA2 width = 0.5                     0            0
(  474)  VIA2_S_1 Minimum VIA2 spacing = 0.45                0            0
(  475)  VIA2_E_1 Minimum MET2 enclosure of VIA2             0            0
(  476)  R01V2 VIA2 without MET2 is not allowed              0            0
(  477)  M3_W_1  Minimum MET3 width = 0.6                    0            0
(  478)  M3_S_1 Minimum MET3 spacing = 0.5                   0            0
(  479)  M3_E_1 Minimum MET3 enclosure of VIA2 =             0            0
(  480)  M3S2 Minimum MET3 to WIDE_MET3 spacing =            0            0
(  481)  M3_S_2 Minimum MET3 to WIDE_MET3 spacing            0            0
(  482)  VIA3_W_1 Fixed VIA3 width = 0.5                     0            0
(  483)  VIA3_S_1 Minimum VIA3 spacing = 0.45                0            0
(  484)  VIA3_E_1 Minimum MET3 enclosure of VIA3             0            0
(  485)  R01V3 VIA3 without MET3 is not allowed              0            0
(  486)  M4_W_1 Minimum MET4 width = 0.6                     0            0
(  487)  M4_S_1 Minimum MET4 spacing = 0.6                   0            0
(  488)  M4_E_1 Minimum MET4 enclosure of VIA3 =             0            0
(  489)  M4_S_2 Minimum MET4 to WIDE_MET4 spacing            0            0
(  490)  M4_S_2 Minimum MET4 to WIDE_MET4 spacing            0            0
(  491)  CBR1 CB_R_1 missing met1                            0            0
(  492)  CBR1 CB_R_1 missing met2                            0            0
(  493)  CBR1 CB_R_1 missing met3                            0            0
(  494)  CBR1 CB_R_1 missing met4                            0            0
(  495)  ERC Warning: Missing top met4 on Test or            0            0
(  496)  W1PA Minimum PAD width = 15                         0            0
(  497)  CB_W_1 Minimum bonding PAD width (85um p            0            0
(  498)  CB_W_1_G1 Minimum bonding PAD width (85u            0            0
(  499)  CB_S_1 Minimum PAD spacing = 15                     0            0
(  500)  CB_E_1 Minimum MET1 enclosure of PAD_ST             0            0
(  501)  CB_E_2 Minimum MET2 enclosure of PAD_3OA            0            0
(  502)  CB_E_3 Minimum MET3 enclosure of PAD = 5            0            0
(  503)  CB_E_4 Minimum MET4 enclosure of PAD = 5            0            0
(  504)  CB_E_5 Minimum MET1 enclosure of the nea            0            0
(  505)  CB_E_5 bad diamond shape of pad via arra            0            0
(  506)  CB_E_5 bad diamond shape of pad via arra            0            0
(  507)  CB_E_7 bad diamond shape of padvia2 arra            0            0
(  508)  CB_E_7 bad diamond shape of padvia2 arra            0            0
(  509)  CB_E_9 bad diamond shape of padvia3 arra            0            0
(  510)  CB_E_9 bad diamond shape of padvia3 arra            0            0
(  511)  CB_E_7 Minimum MET2 enclosure of the nea            0            0
(  512)  CB_E_7 Minimum MET2 enclosure of the nea            0            0
(  513)  CB_E_9  Minimum MET3 enclosure of the ne            0            0
(  514)  CB_E_9 Minimum MET3 enclosure of the nea            0            0
(  515)  CB_E_11 Minimum MET4 enclosure of the ne            0            0
(  516)  CB_S_2 Minimum PADVIA1 spacing = 0.8                0            0
(  517)  CB_S_3 Minimum PADVIA2 spacing = 0.8                0            0
(  518)  CB_S_4 Minimum PADVIA3 spacing = 0.8                0            0
(  519)  CB_C_1 Minimum PADVIA2 to PADVIA1 spacin            0            0
(  520)  CB_C_2 Minimum PADVIA3 to PADVIA2 spacin            0            0
(  521)  CB_R_2 Minimum ratio of PADVIA1 area to             0            0
(  522)  CB_R_3 Minimum ratio of PADVIA2 area to             0            0
(  523)  CB_R_4 Minimum ratio of PADVIA3 area to             0            0
(  524)  CB_C_1 Illegal pad via stack via1/via2              0            0
(  525)  CB_C_2 Illegal pad via stack via2/via3              0            0
(  526)  S1DFPA Minimum PAD_ST to DIFF spacing =             0            0
(  527)  S1P1PA Minimum PAD_ST to POLY1 spacing =            0            0
(  528)  S1P2PA Minimum PAD_ST to POLY2 spacing =            0            0
(  529)  S1M1PA Minimum PAD_ST to MET1 spacing (d            0            0
(  530)  S1M2PA Minimum PAD_ST to MET2 spacing (d            0            0
(  531)  S1M3PA Minimum PAD_ST to MET3 spacing (d            0            0
(  532)  S1M4PA Minimum PAD_ST to MET4 spacing (d            0            0
(  533)  R01PA PAD without MET4 is not allowed               0            0
(  534)  TOPOLOGY PROBLEM : POA pad met 4 stack f            0            0
(  535)  Illegal POA pad met3 stack for 4 metal p            0            0
(  536)  TOPOLOGY PROBLEM : POA pad met 4 stack f            0            0
(  537)  CB_W_1_G1 Minimum bonding PAD width (85u            0            0
(  538)  CB_W_1_G1 Minimum bonding PAD width (85u            0            0
(  539)  CB_W_1_G1 Minimum bonding PAD width (85u            0            0
(  540)  PAR006 : PAD_4OA overlapping VIA2 is not            0            0
(  541)  S2PAV2 : Minimum PAD_4OA to VIA2 spacing            0            0
(  542)  S1PAV3 : Minimum PAD_4OA to VIA3 spacing            0            0
(  543)  E1PAV3 Minimum PAD_4OA enclosure of VIA3            0            0
(  544)  PAR007 : (PAD_4OA sized by -0.7) overlap            0            0
(  545)  PAR002 KEPOUT definition : (PAD_4OA AND             0            0
(  546)  S2KOPA KEPOUT definition : Minimum spaci            0            0
(  547)  S2M3PA Minimum PAD_4OA to MET3 spacing (            0            0
(  548)  S2M4PA Minimum PAD_4OA to MET4 spacing (            0            0
(  549)  PAR010 : PAD_OA overlapping CPOLY is not            0            0
(  550)  PAR008 Density : Line-of-sight looking t            0            0
(  551)  PAR008 Density : use 1 row of via3 at mi            0            0
(  552)  PAR008 : Line-of-sight looking through a            0            0
(  553)  PAR009 :  LV_GATE L > 0.5 PAD_OA overlap            0            0
(  554)  PAR009 : LV_GATE L=LMIN W < 400  PAD_OA             0            0
(  555)   PAR009 : NMOS30M/NMOS18T  L > LMIN  PAD            0            0
(  556)  PAR009 : NMOS30M/NMOS18T  L=LMIN W < 400            0            0
(  557)  PAR009 : NMOSH  L > LMIN  PAD_OA overlap            0            0
(  558)  PAR009 : NMOSH  L = LMIN < 400 PAD_OA ov            0            0
(  559)  PAR009: PAD_4OA overlapping GATE is not             0            0
(  560)  W1HR Minimum HRES width = 0.6                       0            0
(  561)  S1HRHR Minimum HRES spacing = 0.6                   0            0
(  562)  BAD1HR HRES is not allowed over DIFF                0            0
(  563)  BAD2HR HRES is not allowed over NPLUS               0            0
(  564)  BAD3HR HRES is not allowed over POLY1               0            0
(  565)  E1HRP2 Minimum HRES enclosure of POLY2 =            0            0
(  566)  S1HRP1 Minimum HRES to POLY1 spacing = 0            0            0
(  567)  S1HRP2 Minimum HRES to POLY2 spacing = 3            0            0
(  568)  S1DFHR  Minimum HRES to DIFF spacing = 0            0            0
(  569)  W1LV Minimum LVTDEF width = 0.6                     0            0
(  570)  S1LVLV Minimum LVTDEF spacing = 0.6                 0            0
(  571)  E1LVAA Minimum LVTDEF enclosure of DIFF             0            0
(  572)  S1AALV Minimum LVTDEF to DIFF spacing =             0            0
(  573)  LVR001 LVTDEF over ZENER is not allowed             0            0
(  574)  LVR002 LVTDEF outside GATE is not allowe            0            0
(  575)  LVR003: LVTA outside SFCDEF will be remo            0            0
(  576)  LFR001: LVPTUB outside SFCDEF will be re            0            0
(  577)  NMOSML_R1 Minimum GATE length of NMOSML             0            0
(  578)  PMOSML_R1 Minimum GATE length of PMOSML             0            0
(  579)  W1MC Minimum METCAP width = 4                       0            0
(  580)  W2MC Minimum dummy METCAP width = 0.5               0            0
(  581)  W3MC Maximum METCAP size = 30                       0            0
(  582)  W1M2  Maximum MET2 width (capacitor bott            0            0
(  583)  S1MCMC Minimum METCAP spacing = 0.8                 0            0
(  584)  S1M2M2 Minimum MET2 spacing (capacitor b            0            0
(  585)  S1MCV1 Minimum spacing between VIA1 and             0            0
(  586)  S1MCV2 Minimum spacing between VIA2 and             0            0
(  587)  S1V2V2  Minimum VIA2 spacing on MET2 bot            0            0
(  588)  S2V2V2  Minimum VIA2 spacing on METCAP =            0            0
(  589)  E1M2MC Minimum MET2 enclosure of METCAP             0            0
(  590)  E1M2V1 Minimum MET2 enclosure of VIA1 (c            0            0
(  591)  E1M2V2 Minimum MET2 enclosure of VIA2 (c            0            0
(  592)  E1MCV2 Minimum METCAP enclosure of VIA2             0            0
(  593)  R1MC Minimum METCAP density [%] = 3                 0            0
(  594)  R1V2 Minimum VIA2 density inside METCAP             0            0
(  595)  BAD1M1 MET1 under METCAP region is not a            0            0
(  596)  CMIM_G1: cmim device over active or pass            0            0
(  597)  CPOLY_G1 PPLUS on CPOLY is not allowed              0            0
(  598)  CPOLY_G2 NPLUS on CPOLY is not allowed              0            0
(  599)  RPOLY1_R1 PPLUS on RPOLY1 is not allowed            0            0
(  600)  RPOLY1_R2 NPLUS on RPOLY1 is not allowed            0            0
(  601)  RPOLY2_R1 PPLUS on RPOLY2 is not allowed            0            0
(  602)  RPOLY2_R2 NPLUS on RPOLY2 is not allowed            0            0
(  603)  RPOLY2P_R1 PPLUS on RPOLY2P is not allow            0            0
(  604)  RPOLY2P_R2 NPLUS on RPOLY2P is not allow            0            0
(  605)  RPOLY2PH_R1 PPLUS on RPOLY2PH is not all            0            0
(  606)  RPOLY2PH_R2 NPLUS on RPOLY2PH is not all            0            0
(  607)  E1IPCT Minimum PPLUS enclosure of POLY2C            0            0
(  608)  E1IPCT Minimum PPLUS enclosure of POLY2C            0            0
(  609)  S1IPP2 Minimum PPLUS to RPOLYH spacing =            0            0
(  610)  RPOLYH_G2 Minimum high precision RPOLYH             0            0
(  611)  W4P2 Minimum RPOLYZ width = 0.8                     0            0
(  612)  S4P2P2 Minimum RPOLYZ spacing = 0.75                0            0
(  613)  S4P2P2 Minimum RPOLYZ spacing = 0.75 not            0            0
(  614)  E2IPCT Minimum PPLUS enclosure of POLY2C            0            0
(  615)  E2IPCT Minimum PPLUS enclosure of POLY2C            0            0
(  616)  S2IPP2 Minimum PPLUS to RPOLYZ spacing =            0            0
(  617)  RPOLYZ_G2 Minimum high precision RPOLYZ             0            0
(  618)  AMTW1 AMTL1 fixed with of dummy MTOP thi            0            0
(  619)  AMTS2  Minimum MTOP feature to dummy MTO            0            0
(  620)  AMTS1 Maximum MTOP spacing when the widt            0            0
(  621)  AMTS3 maximum met4 to met4 block spacing            0            0
(  622)   AMTS4 fixed met4 block spacing (checked            0            0
(  623)  NWR001 NTUB overlapping KEPOUT is not al            0            0
(  624)  S1KONW Minimum NTUB spacing to KEPOUT or            0            0
(  625)  AAR001 DIFF overlapping KEPOUT is not al            0            0
(  626)  S1AAKO Minimum DIFF spacing to KEPOUT or            0            0
(  627)  XMR002 MIDOX overlapping KEPOUT is not a            0            0
(  628)  S1KOXM Minimum MIDOX spacing to KEPOUT o            0            0
(  629)  P1R002 POLY1 overlapping KEPOUT is not a            0            0
(  630)  S1KOP1 Minimum POLY1 spacing to KEPOUT o            0            0
(  631)  NSR001 NPLUS overlapping KEPOUT is not a            0            0
(  632)  S1KONS Minimum NPLUS spacing to KEPOUT o            0            0
(  633)  PSR001 PPLUS overlapping KEPOUT is not a            0            0
(  634)  S1KOPS Minimum PPLUS spacing to KEPOUT o            0            0
(  635)  HRR004 HRES overlapping KEPOUT is not al            0            0
(  636)  S1HRKO Minimum HRES spacing to KEPOUT or            0            0
(  637)  P2R002 POLY2 overlapping KEPOUT is not a            0            0
(  638)  S1KOP2 Minimum POLY2 spacing to KEPOUT o            0            0
(  639)  COR002 CONT overlapping KEPOUT is not al            0            0
(  640)  S1COKO Minimum CONT spacing to KEPOUT or            0            0
(  641)  M1R002 MET1 overlapping KEPOUT is not al            0            0
(  642)  S1KOM1 Minimum MET1 spacing to KEPOUT or            0            0
(  643)  V1R002 VIA1 overlapping KEPOUT is not al            0            0
(  644)  S1KOV1 Minimum VIA1 spacing to KEPOUT or            0            0
(  645)  M2R002 MET2 overlapping KEPOUT is not al            0            0
(  646)  S1KOM2 0.5                                          0            0
(  647)  V2R002 VIA2 overlapping KEPOUT is not al            0            0
(  648)  S1KOV2 Minimum VIA2 spacing to KEPOUT or            0            0
(  649)  M3R002 MET3 overlapping KEPOUT is not al            0            0
(  650)  S1KOM3 Minimum MET3 spacing to KEPOUT or            0            0
(  651)  PAR002 PAD overlapping KEPOUT is not all            0            0
(  652)  S1KOPA Minimum PAD spacing to KEPOUT or             0            0
(  653)  LVR004 LVTDEF overlapping KEPOUT is not             0            0
(  654)  S1KOLV Minimum LVTDEF spacing to KEPOUT             0            0
(  655)  MCR002 METCAP overlapping KEPOUT is not             0            0
(  656)  S1MCKO Minimum METCAP spacing to KEPOUT             0            0
(  657)  V3R002 VIA3 overlapping KEPOUT is not al            0            0
(  658)  S1KOV3 Minimum VIA3 spacing to KEPOUT or            0            0
(  659)  M4R002 MET4 overlapping KEPOUT is not al            0            0
(  660)  S1KOM4 Minimum MET4 spacing to KEPOUT or            0            0
(  661)  Recommendation: Fixed RESTRM enclosure o            0            0
(  662)  Recommendation: Fixed RESTRM enclosure o            0            0
(  663)  Warning: Illegal Layout Convention: RESD            0            0
(  664)  Warning: Illegal Layout Convention: REST            0            0
(  665)  PWR001: FIMP outside SFCDEF will be remo            0            0
(  666)  LDR001: NLDD outside SFCDEF will be remo            0            0
(  667)   L2R001: NLDD50 outside SFCDEF will be r            0            0
(  668)  PYR001 PCOAT outside SFCDEF will be remo            0            0
(  669)  Minimum PCOAT width = 15                            0            0
(  670)  Minimum PCOAT spacing = 15                          0            0
(  671)  REC002 PCOAT not multiple 45 degrees PCO            0            0
(  672)  W1BK Minimum PCOAT_black width = 2                  0            0
(  673)  S1BKBK Minimum PCOAT_black spacing = 2.0            0            0
(  674)  S1BKPA Minimum PCOAT_blackto PAD spacing            0            0
(  675)  S1BKSB Minimum PCOAT_black to CHIPEDGE s            0            0
(  676)  W1CR Minimum PCOAT_clear width = 2                  0            0
(  677)  S1CRCR Minimum PCOAT_clear spacing = 2.0            0            0
(  678)  S1CRPA Minimum PCOAT_clear to PAD spacin            0            0
(  679)  S1CRSB Minimum PCOAT_clear to CHIPEDGE s            0            0
(  680)  W1GN Minimum PCOAT_green width = 2                  0            0
(  681)  S1GNGN Minimum PCOAT_green spacing = 2.0            0            0
(  682)  S1GNPA Minimum PCOAT_greento PAD spacing            0            0
(  683)  S1GNSB Minimum PCOAT_green to CHIPEDGE s            0            0
(  684)  W1RD Minimum PCOAT_red width = 2                    0            0
(  685)  S1RDRD Minimum PCOAT_red spacing = 2.0              0            0
(  686)  S1PARD Minimum PCOAT_red to PAD spacing             0            0
(  687)  S1RDSB Minimum PCOAT_red to CHIPEDGE spa            0            0
(  688)  W1BU Minimum PCOAT_blue width = 2                   0            0
(  689)  S1BUBU Minimum PCOAT_blue spacing = 2.0             0            0
(  690)  S1BUPA Minimum PCOAT_blue to PAD spacing            0            0
(  691)  S1BUSB Minimum PCOAT_blue to CHIPEDGE sp            0            0
(  692)  AR1_error_gate: AR1: Maximum ratio of fl            0            0
(  693)  AR2_error_gate: AR2: Maximum ratio of fl            0            0
(  694)  AR3_error_gate: AR3: Maximum ratio of fl            0            0
(  695)  AR4_error_gate: AR4: Maximum ratio of fl            0            0
(  696)  AR5_error_gate: AR5: Maximum ratio of fl            0            0
(  697)  rpoly1_g1_pres1_wexp: RPOLY1_G1: Minimum            0            0
(  698)  rpoly2_g1_pres_wexp: RPOLY2_G1: Minimum             0            0
(  699)  rpoly2p_g1_presp_wexp: RPOLY2P_G1: Minim            0            0
(  700)  rpoly2ph_g1_presph_wexp: RPOLY2PH_G1: Mi            0            0
(  701)  rnwell_g1_nwres_wexp: RNWELL_G1: Minimum            0            0
(  702)  rpolyh_g1_presh_wexp: RPOLYH_G1: Minimum            0            0
(  703)  rpolyh_g1_presz_wexp: RPOLYZ_G1: Minimum            0            0
(  704)  G01P1_net_poly1con: G01P1 Maximum ratio             0            0
(  705)  G01P2_net_poly2con: G01P2 Maximum ratio             0            0
(  706)  CBR1 PAD met2 not connected to met1                 0            0
(  707)  CBR1 PAD met3 not connected to met2                 0            0
(  708)  CBR1 PAD met4 not connected to met3                 0            0
--------------------------------------------------------------------------------
Total  errors:                                               0            0
--------------------------------------------------------------------------------

   Finished creating Error Database ...

   Writing Report into /home/oj23092/VLSI_Design_Lab/ASSURA_DRC/NAND3_temp/NAND3_temp.err ...

avrpt cpu sec:    0.10  elapsed:     0  virtual:    93M

Finished /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/avrpt

Starting /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/avcallproc /home/oj23092/VLSI_Design_Lab/ASSURA_DRC/NAND3_temp/NAND3_temp.rsf -restart -cdslib /home/oj23092/VLSI_Design_Lab/cds.lib
Loading all available p-cell functions
AMS_DB set to cds

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets

Loading tech rule set file : /eda/cadence/ams/4.10/assura/c35b4/c35b4c3/techRuleSets

Finished /eda/cadence/2022-23/RHELx86/ASSURA_04.16.113_618//tools.lnx86/assura/bin/avcallproc


Run ended: Fri Feb 23 15:47:06 2024

*****  Assura terminated normally  *****

